{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proveToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "Erc20TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountClaimed",
          "type": "uint256"
        }
      ],
      "name": "ProveClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "VestingEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "investorAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokensToVest",
          "type": "uint256"
        }
      ],
      "name": "addInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAmountClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAmountToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isInvestor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proveToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokensClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokensToVest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartUnix",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051610e50380380610e5083398101604081905261002f916101a4565b600080546001600160a01b03191633908117825560405190918291600080516020610e30833981519152908290a3506001600160a01b0382166080526100748161007b565b50506101d7565b6000546001600160a01b031633146100da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661013f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d1565b600080546040516001600160a01b0380851693921691600080516020610e3083398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b038116811461019f57600080fd5b919050565b600080604083850312156101b757600080fd5b6101c083610188565b91506101ce60208401610188565b90509250929050565b608051610c376101f9600039600081816101f401526104e30152610c376000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806385d4cad3116100a2578063d36862e811610071578063d36862e81461011b578063dd46706414610260578063ec20b45714610273578063f02c6d8f14610286578063f2fde38b1461028f57600080fd5b806385d4cad3146101ef5780638da5cb5b1461022e578063c7e42b1b1461023f578063cee2a9cf1461025257600080fd5b80635b904cb7116100e95780635b904cb71461017f578063624601b6146101875780636f7bc9be146101a7578063715018a6146101da5780637f87bbd6146101e257600080fd5b80630bca8bcd1461011b57806342714978146101425780634e71d92d1461015757806354aa1ca11461015f575b600080fd5b61012f610129366004610b05565b50600090565b6040519081526020015b60405180910390f35b610155610150366004610b05565b6102a2565b005b6101556102d8565b61012f61016d366004610b05565b60076020526000908152604090205481565b610155610364565b61012f610195366004610b05565b60086020526000908152604090205481565b6101ca6101b5366004610b05565b60066020526000908152604090205460ff1681565b6040519015158152602001610139565b610155610443565b6004546101ca9060ff1681565b6102167f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610139565b6000546001600160a01b0316610216565b61015561024d366004610b05565b6104b7565b6101ca610129366004610b05565b61015561026e366004610b27565b610849565b610155610281366004610b40565b6108e0565b61012f60035481565b61015561029d366004610b05565b6109ff565b6000546001600160a01b031633146102d55760405162461bcd60e51b81526004016102cc90610b6a565b60405180910390fd5b50565b3360009081526006602052604090205460ff1615156001146103625760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a6f6e6c79496e766573746f722829206d73672e60448201527f73656e646572206d75737420626520616e20696e766573746f7200000000000060648201526084016102cc565b565b6000546001600160a01b0316331461038e5760405162461bcd60e51b81526004016102cc90610b6a565b60045460ff16156104075760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657360448201527f74696e6720697320616c726561647920656e61626c656400000000000000000060648201526084016102cc565b6004805460ff19166001179055426003556040517ff78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa390600090a1565b6000546001600160a01b0316331461046d5760405162461bcd60e51b81526004016102cc90610b6a565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104e15760405162461bcd60e51b81526004016102cc90610b6a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316036105885760405162461bcd60e51b815260206004820152603960248201527f56657374696e672e736f6c3a3a7769746864726177457263323028292063616e60448201527f6e6f74207769746864726177202450524f564520746f6b656e0000000000000060648201526084016102cc565b6001600160a01b0381166106045760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b60448201527f656e2063616e6e6f74206265206164647265737328302900000000000000000060648201526084016102cc565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f9190610b9f565b9050600081116106e75760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920696e7360448201527f756666696369656e7420746f6b656e2062616c616e636500000000000000000060648201526084016102cc565b6000826001600160a01b031663a9059cbb61070a6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b9190610bb8565b9050806107e55760405162461bcd60e51b815260206004820152603260248201527f56657374696e672e736f6c3a3a776974686472617745726332302829207472616044820152711b9cd9995c881d5b9cdd58d8d95cdcd99d5b60721b60648201526084016102cc565b7f3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f838361081a6000546001600160a01b031690565b604080516001600160a01b039485168152602081019390935292168183015290519081900360600190a1505050565b6000546001600160a01b031633146108735760405162461bcd60e51b81526004016102cc90610b6a565b60008054600180546001600160a01b03199081166001600160a01b038416179091551690556108a28142610bda565b600255600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a350565b6000546001600160a01b0316331461090a5760405162461bcd60e51b81526004016102cc90610b6a565b6001600160a01b03821660009081526006602052604090205460ff16156109905760405162461bcd60e51b815260206004820152603460248201527f56657374696e672e736f6c3a3a616464496e766573746f72282920696e7665736044820152731d1bdc881a5cc8185b1c9958591e48185919195960621b60648201526084016102cc565b6001600160a01b0382166000818152600660209081526040808320805460ff1916600117905560078252808320859055600882528083209290925590519182527f2c385ad016af1d5b8f4eefb8aef02929aa692e7f6d846488519f2513bd7170e0910160405180910390a15050565b6000546001600160a01b03163314610a295760405162461bcd60e51b81526004016102cc90610b6a565b6001600160a01b038116610a8e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102cc565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610b0057600080fd5b919050565b600060208284031215610b1757600080fd5b610b2082610ae9565b9392505050565b600060208284031215610b3957600080fd5b5035919050565b60008060408385031215610b5357600080fd5b610b5c83610ae9565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610bb157600080fd5b5051919050565b600060208284031215610bca57600080fd5b81518015158114610b2057600080fd5b80820180821115610bfb57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220f1701ec9570e08919212b0cbf79e3c666af46db32dfd64843fa808d5b21b9ac064736f6c634300081100338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
    "sourceMap": "494:5956:16:-:0;;;1798:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;955:17:18;998:18;;-1:-1:-1;;;;;;998:18:18;699:10:17;998:18:18;;;;;1032:43;;699:10:17;;;;-1:-1:-1;;;;;;;;;;;1032:43:18;955:17;;1032:43;-1:-1:-1;;;;;;1858:24:16;;;;1893:25;1911:6;1893:17;:25::i;:::-;1798:128;;494:5956;;2118:244:18;1210:7;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;696:2:23;1376:68:18;;;678:21:23;;;715:18;;;708:30;774:34;754:18;;;747:62;826:18;;1376:68:18;;;;;;;;;-1:-1:-1;;;;;2207:22:18;::::1;2199:73;;;::::0;-1:-1:-1;;;2199:73:18;;1057:2:23;2199:73:18::1;::::0;::::1;1039:21:23::0;1096:2;1076:18;;;1069:30;1135:34;1115:18;;;1108:62;-1:-1:-1;;;1186:18:23;;;1179:36;1232:19;;2199:73:18::1;855:402:23::0;2199:73:18::1;2309:6;::::0;;2288:38:::1;::::0;-1:-1:-1;;;;;2288:38:18;;::::1;::::0;2309:6;::::1;::::0;-1:-1:-1;;;;;;;;;;;2288:38:18;::::1;2337:6;:17:::0;;-1:-1:-1;;;;;;2337:17:18::1;-1:-1:-1::0;;;;;2337:17:18;;;::::1;::::0;;;::::1;::::0;;2118:244::o;14:177:23:-;93:13;;-1:-1:-1;;;;;135:31:23;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;855:402::-;494:5956:16;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c806385d4cad3116100a2578063d36862e811610071578063d36862e81461011b578063dd46706414610260578063ec20b45714610273578063f02c6d8f14610286578063f2fde38b1461028f57600080fd5b806385d4cad3146101ef5780638da5cb5b1461022e578063c7e42b1b1461023f578063cee2a9cf1461025257600080fd5b80635b904cb7116100e95780635b904cb71461017f578063624601b6146101875780636f7bc9be146101a7578063715018a6146101da5780637f87bbd6146101e257600080fd5b80630bca8bcd1461011b57806342714978146101425780634e71d92d1461015757806354aa1ca11461015f575b600080fd5b61012f610129366004610b05565b50600090565b6040519081526020015b60405180910390f35b610155610150366004610b05565b6102a2565b005b6101556102d8565b61012f61016d366004610b05565b60076020526000908152604090205481565b610155610364565b61012f610195366004610b05565b60086020526000908152604090205481565b6101ca6101b5366004610b05565b60066020526000908152604090205460ff1681565b6040519015158152602001610139565b610155610443565b6004546101ca9060ff1681565b6102167f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610139565b6000546001600160a01b0316610216565b61015561024d366004610b05565b6104b7565b6101ca610129366004610b05565b61015561026e366004610b27565b610849565b610155610281366004610b40565b6108e0565b61012f60035481565b61015561029d366004610b05565b6109ff565b6000546001600160a01b031633146102d55760405162461bcd60e51b81526004016102cc90610b6a565b60405180910390fd5b50565b3360009081526006602052604090205460ff1615156001146103625760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a6f6e6c79496e766573746f722829206d73672e60448201527f73656e646572206d75737420626520616e20696e766573746f7200000000000060648201526084016102cc565b565b6000546001600160a01b0316331461038e5760405162461bcd60e51b81526004016102cc90610b6a565b60045460ff16156104075760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657360448201527f74696e6720697320616c726561647920656e61626c656400000000000000000060648201526084016102cc565b6004805460ff19166001179055426003556040517ff78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa390600090a1565b6000546001600160a01b0316331461046d5760405162461bcd60e51b81526004016102cc90610b6a565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104e15760405162461bcd60e51b81526004016102cc90610b6a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316036105885760405162461bcd60e51b815260206004820152603960248201527f56657374696e672e736f6c3a3a7769746864726177457263323028292063616e60448201527f6e6f74207769746864726177202450524f564520746f6b656e0000000000000060648201526084016102cc565b6001600160a01b0381166106045760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b60448201527f656e2063616e6e6f74206265206164647265737328302900000000000000000060648201526084016102cc565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f9190610b9f565b9050600081116106e75760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920696e7360448201527f756666696369656e7420746f6b656e2062616c616e636500000000000000000060648201526084016102cc565b6000826001600160a01b031663a9059cbb61070a6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b9190610bb8565b9050806107e55760405162461bcd60e51b815260206004820152603260248201527f56657374696e672e736f6c3a3a776974686472617745726332302829207472616044820152711b9cd9995c881d5b9cdd58d8d95cdcd99d5b60721b60648201526084016102cc565b7f3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f838361081a6000546001600160a01b031690565b604080516001600160a01b039485168152602081019390935292168183015290519081900360600190a1505050565b6000546001600160a01b031633146108735760405162461bcd60e51b81526004016102cc90610b6a565b60008054600180546001600160a01b03199081166001600160a01b038416179091551690556108a28142610bda565b600255600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a350565b6000546001600160a01b0316331461090a5760405162461bcd60e51b81526004016102cc90610b6a565b6001600160a01b03821660009081526006602052604090205460ff16156109905760405162461bcd60e51b815260206004820152603460248201527f56657374696e672e736f6c3a3a616464496e766573746f72282920696e7665736044820152731d1bdc881a5cc8185b1c9958591e48185919195960621b60648201526084016102cc565b6001600160a01b0382166000818152600660209081526040808320805460ff1916600117905560078252808320859055600882528083209290925590519182527f2c385ad016af1d5b8f4eefb8aef02929aa692e7f6d846488519f2513bd7170e0910160405180910390a15050565b6000546001600160a01b03163314610a295760405162461bcd60e51b81526004016102cc90610b6a565b6001600160a01b038116610a8e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102cc565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610b0057600080fd5b919050565b600060208284031215610b1757600080fd5b610b2082610ae9565b9392505050565b600060208284031215610b3957600080fd5b5035919050565b60008060408385031215610b5357600080fd5b610b5c83610ae9565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610bb157600080fd5b5051919050565b600060208284031215610bca57600080fd5b81518015158114610b2057600080fd5b80820180821115610bfb57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220f1701ec9570e08919212b0cbf79e3c666af46db32dfd64843fa808d5b21b9ac064736f6c63430008110033",
    "sourceMap": "494:5956:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5811:75;;;;;;:::i;:::-;-1:-1:-1;5875:7:16;;5811:75;;;;529:25:23;;;517:2;502:18;5811:75:16;;;;;;;;4251:64;;;;;;:::i;:::-;;:::i;:::-;;3357:43;;;:::i;1474:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;4483:261;;;:::i;1610:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1370:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;730:14:23;;723:22;705:41;;693:2;678:18;1370:41:16;565:187:23;1815:148:18;;;:::i;781:26:16:-;;;;;;;;;605:35;;;;;;;;-1:-1:-1;;;;;921:32:23;;;903:51;;891:2;876:18;605:35:16;757:203:23;1164:87:18;1210:7;1237:6;-1:-1:-1;;;;;1237:6:18;1164:87;;4931:636:16;;;;;;:::i;:::-;;:::i;6379:66::-;;;;;;:::i;2444:226:18:-;;;;;;:::i;:::-;;:::i;3724:364:16:-;;;;;;:::i;:::-;;:::i;688:31::-;;;;;;2118:244:18;;;;;;:::i;:::-;;:::i;4251:64:16:-;1210:7:18;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;;;;;;;;;4251:64:16;:::o;3357:43::-;2107:10;2097:21;;;;:9;:21;;;;;;;;:29;;:21;:29;2089:100;;;;-1:-1:-1;;;2089:100:16;;1972:2:23;2089:100:16;;;1954:21:23;2011:2;1991:18;;;1984:30;2050:34;2030:18;;;2023:62;2121:28;2101:18;;;2094:56;2167:19;;2089:100:16;1770:422:23;2089:100:16;3357:43::o;4483:261::-;1210:7:18;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;4549:14:16::1;::::0;::::1;;4548:15;4540:83;;;::::0;-1:-1:-1;;;4540:83:16;;2399:2:23;4540:83:16::1;::::0;::::1;2381:21:23::0;2438:2;2418:18;;;2411:30;2477:34;2457:18;;;2450:62;2548:25;2528:18;;;2521:53;2591:19;;4540:83:16::1;2197:419:23::0;4540:83:16::1;4636:14;:21:::0;;-1:-1:-1;;4636:21:16::1;4653:4;4636:21;::::0;;4687:15:::1;4668:16;:34:::0;4720:16:::1;::::0;::::1;::::0;4636:14:::1;::::0;4720:16:::1;4483:261::o:0;1815:148:18:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;1922:1:::1;1906:6:::0;;1885:40:::1;::::0;-1:-1:-1;;;;;1906:6:18;;::::1;::::0;1885:40:::1;::::0;1922:1;;1885:40:::1;1953:1;1936:19:::0;;-1:-1:-1;;;;;;1936:19:18::1;::::0;;1815:148::o;4931:636:16:-;1210:7:18;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;5018:10:16::1;-1:-1:-1::0;;;;;5009:19:16::1;:5;-1:-1:-1::0;;;;;5009:19:16::1;::::0;5001:89:::1;;;::::0;-1:-1:-1;;;5001:89:16;;2823:2:23;5001:89:16::1;::::0;::::1;2805:21:23::0;2862:2;2842:18;;;2835:30;2901:34;2881:18;;;2874:62;2972:27;2952:18;;;2945:55;3017:19;;5001:89:16::1;2621:421:23::0;5001:89:16::1;-1:-1:-1::0;;;;;5109:19:16;::::1;5101:87;;;::::0;-1:-1:-1;;;5101:87:16;;3249:2:23;5101:87:16::1;::::0;::::1;3231:21:23::0;3288:2;3268:18;;;3261:30;3327:34;3307:18;;;3300:62;3398:25;3378:18;;;3371:53;3441:19;;5101:87:16::1;3047:419:23::0;5101:87:16::1;5219:38;::::0;-1:-1:-1;;;5219:38:16;;5251:4:::1;5219:38;::::0;::::1;903:51:23::0;5201:15:16::1;::::0;-1:-1:-1;;;;;5219:23:16;::::1;::::0;::::1;::::0;876:18:23;;5219:38:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5201:56;;5286:1;5276:7;:11;5268:79;;;::::0;-1:-1:-1;;;5268:79:16;;3862:2:23;5268:79:16::1;::::0;::::1;3844:21:23::0;3901:2;3881:18;;;3874:30;3940:34;3920:18;;;3913:62;4011:25;3991:18;;;3984:53;4054:19;;5268:79:16::1;3660:419:23::0;5268:79:16::1;5360:12;5382:5;-1:-1:-1::0;;;;;5375:22:16::1;;5398:7;1210::18::0;1237:6;-1:-1:-1;;;;;1237:6:18;;1164:87;5398:7:16::1;5375:40;::::0;-1:-1:-1;;;;;;5375:40:16::1;::::0;;;;;;-1:-1:-1;;;;;4276:32:23;;;5375:40:16::1;::::0;::::1;4258:51:23::0;4325:18;;;4318:34;;;4231:18;;5375:40:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5360:55;;5434:7;5426:70;;;::::0;-1:-1:-1;;;5426:70:16;;4847:2:23;5426:70:16::1;::::0;::::1;4829:21:23::0;4886:2;4866:18;;;4859:30;4925:34;4905:18;;;4898:62;-1:-1:-1;;;4976:18:23;;;4969:48;5034:19;;5426:70:16::1;4645:414:23::0;5426:70:16::1;5514:45;5535:5;5542:7;5551;1210::18::0;1237:6;-1:-1:-1;;;;;1237:6:18;;1164:87;5551:7:16::1;5514:45;::::0;;-1:-1:-1;;;;;5322:15:23;;;5304:34;;5369:2;5354:18;;5347:34;;;;5417:15;;5397:18;;;5390:43;5514:45:16;;;;;;5254:2:23;5514:45:16;;::::1;4990:577;;4931:636:::0;:::o;2444:226:18:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;2525:6:::1;::::0;;;2508:23;;-1:-1:-1;;;;;;2508:23:18;;::::1;-1:-1:-1::0;;;;;2525:6:18;::::1;2508:23;::::0;;;2542:19:::1;::::0;;2584:22:::1;2602:4:::0;2584:15:::1;:22;:::i;:::-;2572:9;:34:::0;2659:1:::1;2643:6:::0;;2622:40:::1;::::0;-1:-1:-1;;;;;2643:6:18;;::::1;::::0;2622:40:::1;::::0;2659:1;;2622:40:::1;2444:226:::0;:::o;3724:364:16:-;1210:7:18;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;3825:18:16;::::1;;::::0;;;:9:::1;:18;::::0;;;;;::::1;;:27;3817:92;;;::::0;-1:-1:-1;;;3817:92:16;;5873:2:23;3817:92:16::1;::::0;::::1;5855:21:23::0;5912:2;5892:18;;;5885:30;5951:34;5931:18;;;5924:62;-1:-1:-1;;;6002:18:23;;;5995:50;6062:19;;3817:92:16::1;5671:416:23::0;3817:92:16::1;-1:-1:-1::0;;;;;3922:18:16;::::1;;::::0;;;:9:::1;:18;::::0;;;;;;;:25;;-1:-1:-1;;3922:25:16::1;3943:4;3922:25;::::0;;3958:12:::1;:21:::0;;;;;:37;;;4006:13:::1;:22:::0;;;;;:26;;;;4058:22;;903:51:23;;;4058:22:16::1;::::0;876:18:23;4058:22:16::1;;;;;;;3724:364:::0;;:::o;2118:244:18:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;2207:22:18;::::1;2199:73;;;::::0;-1:-1:-1;;;2199:73:18;;6294:2:23;2199:73:18::1;::::0;::::1;6276:21:23::0;6333:2;6313:18;;;6306:30;6372:34;6352:18;;;6345:62;-1:-1:-1;;;6423:18:23;;;6416:36;6469:19;;2199:73:18::1;6092:402:23::0;2199:73:18::1;2309:6;::::0;;2288:38:::1;::::0;-1:-1:-1;;;;;2288:38:18;;::::1;::::0;2309:6;::::1;::::0;2288:38:::1;::::0;::::1;2337:6;:17:::0;;-1:-1:-1;;;;;;2337:17:18::1;-1:-1:-1::0;;;;;2337:17:18;;;::::1;::::0;;;::::1;::::0;;2118:244::o;14:173:23:-;82:20;;-1:-1:-1;;;;;131:31:23;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:23:o;965:180::-;1024:6;1077:2;1065:9;1056:7;1052:23;1048:32;1045:52;;;1093:1;1090;1083:12;1045:52;-1:-1:-1;1116:23:23;;965:180;-1:-1:-1;965:180:23:o;1150:254::-;1218:6;1226;1279:2;1267:9;1258:7;1254:23;1250:32;1247:52;;;1295:1;1292;1285:12;1247:52;1318:29;1337:9;1318:29;:::i;:::-;1308:39;1394:2;1379:18;;;;1366:32;;-1:-1:-1;;;1150:254:23:o;1409:356::-;1611:2;1593:21;;;1630:18;;;1623:30;1689:34;1684:2;1669:18;;1662:62;1756:2;1741:18;;1409:356::o;3471:184::-;3541:6;3594:2;3582:9;3573:7;3569:23;3565:32;3562:52;;;3610:1;3607;3600:12;3562:52;-1:-1:-1;3633:16:23;;3471:184;-1:-1:-1;3471:184:23:o;4363:277::-;4430:6;4483:2;4471:9;4462:7;4458:23;4454:32;4451:52;;;4499:1;4496;4489:12;4451:52;4531:9;4525:16;4584:5;4577:13;4570:21;4563:5;4560:32;4550:60;;4606:1;4603;4596:12;5444:222;5509:9;;;5530:10;;;5527:133;;;5582:10;5577:3;5573:20;5570:1;5563:31;5617:4;5614:1;5607:15;5645:4;5642:1;5635:15;5527:133;5444:222;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "25541": [
        {
          "start": 500,
          "length": 32
        },
        {
          "start": 1251,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addInvestor(address,uint256)": "ec20b457",
    "claim()": "4e71d92d",
    "enableVesting()": "5b904cb7",
    "getAmountClaimed(address)": "d36862e8",
    "getAmountToClaim(address)": "0bca8bcd",
    "investors(address)": "6f7bc9be",
    "isInvestor(address)": "cee2a9cf",
    "lock(uint256)": "dd467064",
    "owner()": "8da5cb5b",
    "proveToken()": "85d4cad3",
    "removeInvestor(address)": "42714978",
    "renounceOwnership()": "715018a6",
    "tokensClaimed(address)": "624601b6",
    "tokensToVest(address)": "54aa1ca1",
    "transferOwnership(address)": "f2fde38b",
    "vestingEnabled()": "7f87bbd6",
    "vestingStartUnix()": "f02c6d8f",
    "withdrawErc20(address)": "c7e42b1b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proveToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"Erc20TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountClaimed\",\"type\":\"uint256\"}],\"name\":\"ProveClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VestingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"investorAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensToVest\",\"type\":\"uint256\"}],\"name\":\"addInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAmountClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAmountToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isInvestor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proveToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensToVest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartUnix\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Erc20TokensWithdrawn(address,uint256,address)\":{\"params\":{\"amount\":\"tokens withdrawn.\",\"receiver\":\"address of msg.sender.\",\"token\":\"address of Erc20 token.\"}},\"ProveClaimed(address,uint256)\":{\"params\":{\"account\":\"is the wallet address of msg.sender.\",\"amountClaimed\":\"is the amount of tokens the account claimed.\"}},\"investorAdded(address)\":{\"params\":{\"account\":\"is the wallet address of investor that was addes to the investorLibrary.\"}}},\"kind\":\"dev\",\"methods\":{\"addInvestor(address,uint256)\":{\"params\":{\"_tokensToVest\":\"the amount of $PROVE that is being vested for that investor.\",\"account\":\"the wallet address of investor being added.\"}},\"claim()\":{\"details\":\"msg.sender must be the investor address\"},\"enableVesting()\":{\"details\":\"will set start time to vestingStartUnix.      will set vestingEnabled to true.\"},\"getAmountClaimed(address)\":{\"params\":{\"account\":\"address of investor.\"},\"returns\":{\"_0\":\"uint256 amount of tokens claimed by account.\"}},\"getAmountToClaim(address)\":{\"params\":{\"account\":\"address of investor.\"},\"returns\":{\"_0\":\"uint256 amount of tokens to claim.\"}},\"isInvestor(address)\":{\"params\":{\"account\":\"address of investor.\"},\"returns\":{\"_0\":\"bool true if investor exists, false otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeInvestor(address)\":{\"params\":{\"account\":\"the wallet address of investor that is being removed.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawErc20(address)\":{\"details\":\"token address cannot be $PROVE\",\"params\":{\"token\":\"contract address of token we wish to remove.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Erc20TokensWithdrawn(address,uint256,address)\":{\"notice\":\"This event is emitted when withdrawErc20() is executed.\"},\"ProveClaimed(address,uint256)\":{\"notice\":\"This event is emitted when claim() is successfully executed.\"},\"VestingEnabled()\":{\"notice\":\"This event is emitted when enableVesting() is executed. Should only be executed once.\"},\"investorAdded(address)\":{\"notice\":\"This event is emitted when addInvestor() is successfully executed.\"}},\"kind\":\"user\",\"methods\":{\"addInvestor(address,uint256)\":{\"notice\":\"This function sets an address as true in the investors mapping.\"},\"claim()\":{\"notice\":\"Used to claim vested tokens.\"},\"constructor\":{\"notice\":\"The amount of tokens the investor has claimed already.\"},\"enableVesting()\":{\"notice\":\"This function starts the vesting period.\"},\"getAmountClaimed(address)\":{\"notice\":\"This function returns the amount of tokens an investor HAS claimed.\"},\"getAmountToClaim(address)\":{\"notice\":\"This function returns the amount of tokens to claim for a specified investor.\"},\"isInvestor(address)\":{\"notice\":\"This function returns a bool true if the investor exists, and false if they do not.\"},\"removeInvestor(address)\":{\"notice\":\"This function removes an investor from the investorLibrary.\"},\"tokensClaimed(address)\":{\"notice\":\"The total amount of $PROVE token allocated to that investor address.\"},\"tokensToVest(address)\":{\"notice\":\"Mapping to track investor addresses.\"},\"vestingEnabled()\":{\"notice\":\"block timestamp of when vesting has begun\"},\"vestingStartUnix()\":{\"notice\":\"The vested token address.\"},\"withdrawErc20(address)\":{\"notice\":\"Is used to remove ERC20 tokens from the contract.\"}},\"notice\":\"This contract will hold $PROVE tokens in escrow         This contract will facilitate the private sale investor vesting tokens         This contract will follow a strict vesting schedule         This contract will follow a claim model\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vesting.sol\":\"Vesting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Vesting.sol\":{\"keccak256\":\"0x76b1d368a2c64bafe6f5a0e2a651d796aa16767677d71a905228b18fd66e9244\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e474eae0b9fde249b4d920859a51add0d6d95b5a4dfc77ecedc7592ea54f5373\",\"dweb:/ipfs/QmVbV6cu1prnmChvrpnyPk5PW6kUA2JwrfT9LGsP6yioKX\"]},\"src/extensions/Context.sol\":{\"keccak256\":\"0x8795d48b0db75e627ea6d57f1eb24e269519a1db8ce2e7d3a4441dd516a9b016\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39249193e7e48805d84c55471a695d8f88a3358f0b3274b94ce4e83278a53a12\",\"dweb:/ipfs/QmQcrb4WuzRmY3oeX8ush6EqhtjqmfFxpawXk2ceHoFMiV\"]},\"src/extensions/Ownable.sol\":{\"keccak256\":\"0xbe3f4ae2a873ee339e0ac54107262ee789604570a463549fd43364289769207f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca9dde5e484d808440ff8ac43892b8f59a2b76d5084efce1dfa904d800c0f9c6\",\"dweb:/ipfs/QmRnQ2x3a9GwVKf7wbRhNY1MwdxyoTkvDtLFqjXxhEoALA\"]},\"src/interfaces/Interfaces.sol\":{\"keccak256\":\"0x741b318f522ba8451f4a2e40afcf59e995484318fabe7c57adeba3124bbd7e04\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dba0a37a10519080f892d5c8b87a0ec026ef73492195a901e49f74766b5915f7\",\"dweb:/ipfs/QmduauRea8YdqJaMeHiYH2tRtbydoqgVirSaTzbXMoEjYX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_proveToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Erc20TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProveClaimed",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "VestingEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "investorAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokensToVest",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addInvestor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableVesting"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountClaimed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "investors",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInvestor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lock"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proveToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeInvestor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensClaimed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensToVest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingStartUnix",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawErc20"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addInvestor(address,uint256)": {
            "params": {
              "_tokensToVest": "the amount of $PROVE that is being vested for that investor.",
              "account": "the wallet address of investor being added."
            }
          },
          "claim()": {
            "details": "msg.sender must be the investor address"
          },
          "enableVesting()": {
            "details": "will set start time to vestingStartUnix.      will set vestingEnabled to true."
          },
          "getAmountClaimed(address)": {
            "params": {
              "account": "address of investor."
            },
            "returns": {
              "_0": "uint256 amount of tokens claimed by account."
            }
          },
          "getAmountToClaim(address)": {
            "params": {
              "account": "address of investor."
            },
            "returns": {
              "_0": "uint256 amount of tokens to claim."
            }
          },
          "isInvestor(address)": {
            "params": {
              "account": "address of investor."
            },
            "returns": {
              "_0": "bool true if investor exists, false otherwise."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "removeInvestor(address)": {
            "params": {
              "account": "the wallet address of investor that is being removed."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawErc20(address)": {
            "details": "token address cannot be $PROVE",
            "params": {
              "token": "contract address of token we wish to remove."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addInvestor(address,uint256)": {
            "notice": "This function sets an address as true in the investors mapping."
          },
          "claim()": {
            "notice": "Used to claim vested tokens."
          },
          "constructor": {
            "notice": "The amount of tokens the investor has claimed already."
          },
          "enableVesting()": {
            "notice": "This function starts the vesting period."
          },
          "getAmountClaimed(address)": {
            "notice": "This function returns the amount of tokens an investor HAS claimed."
          },
          "getAmountToClaim(address)": {
            "notice": "This function returns the amount of tokens to claim for a specified investor."
          },
          "isInvestor(address)": {
            "notice": "This function returns a bool true if the investor exists, and false if they do not."
          },
          "removeInvestor(address)": {
            "notice": "This function removes an investor from the investorLibrary."
          },
          "tokensClaimed(address)": {
            "notice": "The total amount of $PROVE token allocated to that investor address."
          },
          "tokensToVest(address)": {
            "notice": "Mapping to track investor addresses."
          },
          "vestingEnabled()": {
            "notice": "block timestamp of when vesting has begun"
          },
          "vestingStartUnix()": {
            "notice": "The vested token address."
          },
          "withdrawErc20(address)": {
            "notice": "Is used to remove ERC20 tokens from the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Vesting.sol": "Vesting"
      },
      "libraries": {}
    },
    "sources": {
      "src/Vesting.sol": {
        "keccak256": "0x76b1d368a2c64bafe6f5a0e2a651d796aa16767677d71a905228b18fd66e9244",
        "urls": [
          "bzz-raw://e474eae0b9fde249b4d920859a51add0d6d95b5a4dfc77ecedc7592ea54f5373",
          "dweb:/ipfs/QmVbV6cu1prnmChvrpnyPk5PW6kUA2JwrfT9LGsP6yioKX"
        ],
        "license": "UNLICENSED"
      },
      "src/extensions/Context.sol": {
        "keccak256": "0x8795d48b0db75e627ea6d57f1eb24e269519a1db8ce2e7d3a4441dd516a9b016",
        "urls": [
          "bzz-raw://39249193e7e48805d84c55471a695d8f88a3358f0b3274b94ce4e83278a53a12",
          "dweb:/ipfs/QmQcrb4WuzRmY3oeX8ush6EqhtjqmfFxpawXk2ceHoFMiV"
        ],
        "license": "MIT"
      },
      "src/extensions/Ownable.sol": {
        "keccak256": "0xbe3f4ae2a873ee339e0ac54107262ee789604570a463549fd43364289769207f",
        "urls": [
          "bzz-raw://ca9dde5e484d808440ff8ac43892b8f59a2b76d5084efce1dfa904d800c0f9c6",
          "dweb:/ipfs/QmRnQ2x3a9GwVKf7wbRhNY1MwdxyoTkvDtLFqjXxhEoALA"
        ],
        "license": "MIT"
      },
      "src/interfaces/Interfaces.sol": {
        "keccak256": "0x741b318f522ba8451f4a2e40afcf59e995484318fabe7c57adeba3124bbd7e04",
        "urls": [
          "bzz-raw://dba0a37a10519080f892d5c8b87a0ec026ef73492195a901e49f74766b5915f7",
          "dweb:/ipfs/QmduauRea8YdqJaMeHiYH2tRtbydoqgVirSaTzbXMoEjYX"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Vesting.sol",
    "id": 25809,
    "exportedSymbols": {
      "Context": [
        25834
      ],
      "IERC20": [
        26116
      ],
      "Ownable": [
        25982
      ],
      "Vesting": [
        25808
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:6412:16",
    "nodes": [
      {
        "id": 25533,
        "nodeType": "PragmaDirective",
        "src": "40:24:16",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 25534,
        "nodeType": "ImportDirective",
        "src": "68:34:16",
        "nodes": [],
        "absolutePath": "src/extensions/Ownable.sol",
        "file": "./extensions/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25809,
        "sourceUnit": 25983,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25536,
        "nodeType": "ImportDirective",
        "src": "104:51:16",
        "nodes": [],
        "absolutePath": "src/interfaces/Interfaces.sol",
        "file": "./interfaces/Interfaces.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25809,
        "sourceUnit": 26898,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25535,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26116,
              "src": "112:6:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25808,
        "nodeType": "ContractDefinition",
        "src": "494:5956:16",
        "nodes": [
          {
            "id": 25541,
            "nodeType": "VariableDeclaration",
            "src": "605:35:16",
            "nodes": [],
            "constant": false,
            "functionSelector": "85d4cad3",
            "mutability": "immutable",
            "name": "proveToken",
            "nameLocation": "630:10:16",
            "scope": 25808,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25540,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25544,
            "nodeType": "VariableDeclaration",
            "src": "688:31:16",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25542,
              "nodeType": "StructuredDocumentation",
              "src": "643:39:16",
              "text": "@notice The vested token address."
            },
            "functionSelector": "f02c6d8f",
            "mutability": "mutable",
            "name": "vestingStartUnix",
            "nameLocation": "703:16:16",
            "scope": 25808,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25543,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "688:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25547,
            "nodeType": "VariableDeclaration",
            "src": "781:26:16",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25545,
              "nodeType": "StructuredDocumentation",
              "src": "722:53:16",
              "text": "@notice block timestamp of when vesting has begun"
            },
            "functionSelector": "7f87bbd6",
            "mutability": "mutable",
            "name": "vestingEnabled",
            "nameLocation": "793:14:16",
            "scope": 25808,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 25546,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "781:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25552,
            "nodeType": "VariableDeclaration",
            "src": "952:26:16",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25548,
              "nodeType": "StructuredDocumentation",
              "src": "815:40:16",
              "text": "@notice vesting enabled when true."
            },
            "mutability": "mutable",
            "name": "investorLibrary",
            "nameLocation": "963:15:16",
            "scope": 25808,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
              "typeString": "struct Vesting.Investor[]"
            },
            "typeName": {
              "baseType": {
                "id": 25550,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25549,
                  "name": "Investor",
                  "nameLocations": [
                    "952:8:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25559,
                  "src": "952:8:16"
                },
                "referencedDeclaration": 25559,
                "src": "952:8:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$25559_storage_ptr",
                  "typeString": "struct Vesting.Investor"
                }
              },
              "id": 25551,
              "nodeType": "ArrayTypeName",
              "src": "952:10:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage_ptr",
                "typeString": "struct Vesting.Investor[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25559,
            "nodeType": "StructDefinition",
            "src": "1225:137:16",
            "nodes": [],
            "canonicalName": "Vesting.Investor",
            "members": [
              {
                "constant": false,
                "id": 25554,
                "mutability": "mutable",
                "name": "addy",
                "nameLocation": "1260:4:16",
                "nodeType": "VariableDeclaration",
                "scope": 25559,
                "src": "1252:12:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25553,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1252:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25556,
                "mutability": "mutable",
                "name": "tokensToVest",
                "nameLocation": "1310:12:16",
                "nodeType": "VariableDeclaration",
                "scope": 25559,
                "src": "1302:20:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25555,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1302:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25558,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "1341:13:16",
                "nodeType": "VariableDeclaration",
                "scope": 25559,
                "src": "1333:21:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25557,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1333:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "1232:8:16",
            "scope": 25808,
            "visibility": "public"
          },
          {
            "id": 25563,
            "nodeType": "VariableDeclaration",
            "src": "1370:41:16",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f7bc9be",
            "mutability": "mutable",
            "name": "investors",
            "nameLocation": "1402:9:16",
            "scope": 25808,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 25562,
              "keyType": {
                "id": 25560,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1378:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1370:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 25561,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1389:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 25568,
            "nodeType": "VariableDeclaration",
            "src": "1474:47:16",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25564,
              "nodeType": "StructuredDocumentation",
              "src": "1420:48:16",
              "text": "@notice Mapping to track investor addresses."
            },
            "functionSelector": "54aa1ca1",
            "mutability": "mutable",
            "name": "tokensToVest",
            "nameLocation": "1509:12:16",
            "scope": 25808,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 25567,
              "keyType": {
                "id": 25565,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1482:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1474:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 25566,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1493:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 25573,
            "nodeType": "VariableDeclaration",
            "src": "1610:48:16",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25569,
              "nodeType": "StructuredDocumentation",
              "src": "1524:80:16",
              "text": "@notice The total amount of $PROVE token allocated to that investor address."
            },
            "functionSelector": "624601b6",
            "mutability": "mutable",
            "name": "tokensClaimed",
            "nameLocation": "1645:13:16",
            "scope": 25808,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 25572,
              "keyType": {
                "id": 25570,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1618:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1610:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 25571,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1629:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 25590,
            "nodeType": "FunctionDefinition",
            "src": "1798:128:16",
            "nodes": [],
            "body": {
              "id": 25589,
              "nodeType": "Block",
              "src": "1847:79:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25581,
                      "name": "proveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25541,
                      "src": "1858:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25582,
                      "name": "_proveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25576,
                      "src": "1871:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1858:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25584,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:24:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25586,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25578,
                        "src": "1911:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25585,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25947,
                      "src": "1893:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25588,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:25:16"
                }
              ]
            },
            "documentation": {
              "id": 25574,
              "nodeType": "StructuredDocumentation",
              "src": "1660:68:16",
              "text": "@notice The amount of tokens the investor has claimed already."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25576,
                  "mutability": "mutable",
                  "name": "_proveToken",
                  "nameLocation": "1818:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25590,
                  "src": "1810:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25578,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1839:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25590,
                  "src": "1831:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1809:37:16"
            },
            "returnParameters": {
              "id": 25580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1847:0:16"
            },
            "scope": 25808,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25605,
            "nodeType": "ModifierDefinition",
            "src": "2054:155:16",
            "nodes": [],
            "body": {
              "id": 25604,
              "nodeType": "Block",
              "src": "2078:131:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 25594,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25563,
                            "src": "2097:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 25597,
                          "indexExpression": {
                            "expression": {
                              "id": 25595,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2107:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 25596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2111:6:16",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2107:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2097:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 25598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2122:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2097:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a6f6e6c79496e766573746f722829206d73672e73656e646572206d75737420626520616e20696e766573746f72",
                        "id": 25600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2128:60:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04c0e7337b94cd08ab709ab9e01a52972b8997f541f0ec03cfdf895720fa5020",
                          "typeString": "literal_string \"Vesting.sol::onlyInvestor() msg.sender must be an investor\""
                        },
                        "value": "Vesting.sol::onlyInvestor() msg.sender must be an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04c0e7337b94cd08ab709ab9e01a52972b8997f541f0ec03cfdf895720fa5020",
                          "typeString": "literal_string \"Vesting.sol::onlyInvestor() msg.sender must be an investor\""
                        }
                      ],
                      "id": 25593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2089:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2089:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25602,
                  "nodeType": "ExpressionStatement",
                  "src": "2089:100:16"
                },
                {
                  "id": 25603,
                  "nodeType": "PlaceholderStatement",
                  "src": "2200:1:16"
                }
              ]
            },
            "documentation": {
              "id": 25591,
              "nodeType": "StructuredDocumentation",
              "src": "1992:56:16",
              "text": "@dev modifier to check if msg.sender is an investor."
            },
            "name": "onlyInvestor",
            "nameLocation": "2063:12:16",
            "parameters": {
              "id": 25592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2075:2:16"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25612,
            "nodeType": "EventDefinition",
            "src": "2480:59:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25606,
              "nodeType": "StructuredDocumentation",
              "src": "2266:208:16",
              "text": "@notice This event is emitted when claim() is successfully executed.\n @param account is the wallet address of msg.sender.\n @param amountClaimed is the amount of tokens the account claimed."
            },
            "eventSelector": "c9ff33ee3842ec05cab3a4e2b17aa19694b6c461ea543be5752366f912a6539d",
            "name": "ProveClaimed",
            "nameLocation": "2486:12:16",
            "parameters": {
              "id": 25611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25608,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2507:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25612,
                  "src": "2499:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25610,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountClaimed",
                  "nameLocation": "2524:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25612,
                  "src": "2516:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2516:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2498:40:16"
            }
          },
          {
            "id": 25617,
            "nodeType": "EventDefinition",
            "src": "2728:37:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25613,
              "nodeType": "StructuredDocumentation",
              "src": "2547:175:16",
              "text": "@notice This event is emitted when addInvestor() is successfully executed.\n @param account is the wallet address of investor that was addes to the investorLibrary."
            },
            "eventSelector": "2c385ad016af1d5b8f4eefb8aef02929aa692e7f6d846488519f2513bd7170e0",
            "name": "investorAdded",
            "nameLocation": "2734:13:16",
            "parameters": {
              "id": 25616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25615,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2756:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25617,
                  "src": "2748:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2747:17:16"
            }
          },
          {
            "id": 25626,
            "nodeType": "EventDefinition",
            "src": "2981:76:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25618,
              "nodeType": "StructuredDocumentation",
              "src": "2773:202:16",
              "text": "@notice This event is emitted when withdrawErc20() is executed.\n @param token address of Erc20 token.\n @param amount tokens withdrawn.\n @param receiver address of msg.sender."
            },
            "eventSelector": "3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f",
            "name": "Erc20TokensWithdrawn",
            "nameLocation": "2987:20:16",
            "parameters": {
              "id": 25625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25620,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3016:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25626,
                  "src": "3008:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3008:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25622,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3031:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25626,
                  "src": "3023:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3023:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25624,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3047:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25626,
                  "src": "3039:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3039:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3007:49:16"
            }
          },
          {
            "id": 25629,
            "nodeType": "EventDefinition",
            "src": "3168:23:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25627,
              "nodeType": "StructuredDocumentation",
              "src": "3065:97:16",
              "text": "@notice This event is emitted when enableVesting() is executed. Should only be executed once."
            },
            "eventSelector": "f78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa3",
            "name": "VestingEnabled",
            "nameLocation": "3174:14:16",
            "parameters": {
              "id": 25628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3188:2:16"
            }
          },
          {
            "id": 25636,
            "nodeType": "FunctionDefinition",
            "src": "3357:43:16",
            "nodes": [],
            "body": {
              "id": 25635,
              "nodeType": "Block",
              "src": "3398:2:16",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 25630,
              "nodeType": "StructuredDocumentation",
              "src": "3257:94:16",
              "text": "@notice Used to claim vested tokens.\n @dev msg.sender must be the investor address"
            },
            "functionSelector": "4e71d92d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25633,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25632,
                  "name": "onlyInvestor",
                  "nameLocations": [
                    "3383:12:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25605,
                  "src": "3383:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3383:14:16"
              }
            ],
            "name": "claim",
            "nameLocation": "3366:5:16",
            "parameters": {
              "id": 25631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3371:2:16"
            },
            "returnParameters": {
              "id": 25634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3398:0:16"
            },
            "scope": 25808,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25678,
            "nodeType": "FunctionDefinition",
            "src": "3724:364:16",
            "nodes": [],
            "body": {
              "id": 25677,
              "nodeType": "Block",
              "src": "3806:282:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 25647,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25563,
                            "src": "3825:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 25649,
                          "indexExpression": {
                            "id": 25648,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25639,
                            "src": "3835:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3825:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 25650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3847:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3825:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a616464496e766573746f72282920696e766573746f7220697320616c7265616479206164646564",
                        "id": 25652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3854:54:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac8b3365ec58116f79763809b4a76f0b400571fe8055cd18bc01fd9ea666875f",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() investor is already added\""
                        },
                        "value": "Vesting.sol::addInvestor() investor is already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac8b3365ec58116f79763809b4a76f0b400571fe8055cd18bc01fd9ea666875f",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() investor is already added\""
                        }
                      ],
                      "id": 25646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3817:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:92:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25654,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:92:16"
                },
                {
                  "expression": {
                    "id": 25659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25655,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25563,
                        "src": "3922:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25657,
                      "indexExpression": {
                        "id": 25656,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25639,
                        "src": "3932:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3922:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 25658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3943:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3922:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25660,
                  "nodeType": "ExpressionStatement",
                  "src": "3922:25:16"
                },
                {
                  "expression": {
                    "id": 25665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25661,
                        "name": "tokensToVest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25568,
                        "src": "3958:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25663,
                      "indexExpression": {
                        "id": 25662,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25639,
                        "src": "3971:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3958:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25664,
                      "name": "_tokensToVest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25641,
                      "src": "3982:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3958:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25666,
                  "nodeType": "ExpressionStatement",
                  "src": "3958:37:16"
                },
                {
                  "expression": {
                    "id": 25671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25667,
                        "name": "tokensClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25573,
                        "src": "4006:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25669,
                      "indexExpression": {
                        "id": 25668,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25639,
                        "src": "4020:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4006:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 25670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4031:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4006:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25672,
                  "nodeType": "ExpressionStatement",
                  "src": "4006:26:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25674,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25639,
                        "src": "4072:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25673,
                      "name": "investorAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25617,
                      "src": "4058:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4058:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25676,
                  "nodeType": "EmitStatement",
                  "src": "4053:27:16"
                }
              ]
            },
            "documentation": {
              "id": 25637,
              "nodeType": "StructuredDocumentation",
              "src": "3484:234:16",
              "text": "@notice This function sets an address as true in the investors mapping.\n @param account the wallet address of investor being added.\n @param _tokensToVest the amount of $PROVE that is being vested for that investor."
            },
            "functionSelector": "ec20b457",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25644,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25643,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3794:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25897,
                  "src": "3794:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3794:11:16"
              }
            ],
            "name": "addInvestor",
            "nameLocation": "3733:11:16",
            "parameters": {
              "id": 25642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25639,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3753:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25678,
                  "src": "3745:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3745:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25641,
                  "mutability": "mutable",
                  "name": "_tokensToVest",
                  "nameLocation": "3770:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25678,
                  "src": "3762:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3762:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3744:40:16"
            },
            "returnParameters": {
              "id": 25645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3806:0:16"
            },
            "scope": 25808,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25687,
            "nodeType": "FunctionDefinition",
            "src": "4251:64:16",
            "nodes": [],
            "body": {
              "id": 25686,
              "nodeType": "Block",
              "src": "4313:2:16",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 25679,
              "nodeType": "StructuredDocumentation",
              "src": "4096:149:16",
              "text": "@notice This function removes an investor from the investorLibrary.\n @param account the wallet address of investor that is being removed."
            },
            "functionSelector": "42714978",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25684,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25683,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4301:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25897,
                  "src": "4301:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4301:11:16"
              }
            ],
            "name": "removeInvestor",
            "nameLocation": "4260:14:16",
            "parameters": {
              "id": 25682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25681,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4283:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25687,
                  "src": "4275:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4275:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4274:17:16"
            },
            "returnParameters": {
              "id": 25685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4313:0:16"
            },
            "scope": 25808,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25712,
            "nodeType": "FunctionDefinition",
            "src": "4483:261:16",
            "nodes": [],
            "body": {
              "id": 25711,
              "nodeType": "Block",
              "src": "4529:215:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4548:15:16",
                        "subExpression": {
                          "id": 25694,
                          "name": "vestingEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25547,
                          "src": "4549:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657374696e6720697320616c726561647920656e61626c6564",
                        "id": 25696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4565:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b81e7806853eebb1dd20d036cf5def1e03a3259047e4c17a645085fd705441b0",
                          "typeString": "literal_string \"Vesting.sol::enableVesting() vesting is already enabled\""
                        },
                        "value": "Vesting.sol::enableVesting() vesting is already enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b81e7806853eebb1dd20d036cf5def1e03a3259047e4c17a645085fd705441b0",
                          "typeString": "literal_string \"Vesting.sol::enableVesting() vesting is already enabled\""
                        }
                      ],
                      "id": 25693,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4540:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4540:83:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25698,
                  "nodeType": "ExpressionStatement",
                  "src": "4540:83:16"
                },
                {
                  "expression": {
                    "id": 25701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25699,
                      "name": "vestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25547,
                      "src": "4636:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 25700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4653:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4636:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25702,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:21:16"
                },
                {
                  "expression": {
                    "id": 25706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25703,
                      "name": "vestingStartUnix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25544,
                      "src": "4668:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 25704,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4687:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 25705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4693:9:16",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4687:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4668:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25707,
                  "nodeType": "ExpressionStatement",
                  "src": "4668:34:16"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25708,
                      "name": "VestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25629,
                      "src": "4720:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 25709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4720:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25710,
                  "nodeType": "EmitStatement",
                  "src": "4715:21:16"
                }
              ]
            },
            "documentation": {
              "id": 25688,
              "nodeType": "StructuredDocumentation",
              "src": "4323:154:16",
              "text": "@notice This function starts the vesting period.\n @dev will set start time to vestingStartUnix.\n      will set vestingEnabled to true."
            },
            "functionSelector": "5b904cb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25691,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25690,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4517:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25897,
                  "src": "4517:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4517:11:16"
              }
            ],
            "name": "enableVesting",
            "nameLocation": "4492:13:16",
            "parameters": {
              "id": 25689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4505:2:16"
            },
            "returnParameters": {
              "id": 25692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4529:0:16"
            },
            "scope": 25808,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25780,
            "nodeType": "FunctionDefinition",
            "src": "4931:636:16",
            "nodes": [],
            "body": {
              "id": 25779,
              "nodeType": "Block",
              "src": "4990:577:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25721,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25715,
                          "src": "5009:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 25722,
                          "name": "proveToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25541,
                          "src": "5018:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5009:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a7769746864726177457263323028292063616e6e6f74207769746864726177202450524f564520746f6b656e",
                        "id": 25724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5030:59:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75db5b4aa55e9f0b03e4a8c070f8f66290a98338aaae1576bb806eef1f0080d2",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() cannot withdraw $PROVE token\""
                        },
                        "value": "Vesting.sol::withdrawErc20() cannot withdraw $PROVE token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75db5b4aa55e9f0b03e4a8c070f8f66290a98338aaae1576bb806eef1f0080d2",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() cannot withdraw $PROVE token\""
                        }
                      ],
                      "id": 25720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5001:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5001:89:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25726,
                  "nodeType": "ExpressionStatement",
                  "src": "5001:89:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25728,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25715,
                          "src": "5109:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5126:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5118:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25729,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5118:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5118:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5109:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b656e2063616e6e6f742062652061646472657373283029",
                        "id": 25734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5130:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29e76f784f984a6a07713ea53163c68fa39fa9a65b7a983cda7f9b66495bef31",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() token cannot be address(0)\""
                        },
                        "value": "Vesting.sol::withdrawErc20() token cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29e76f784f984a6a07713ea53163c68fa39fa9a65b7a983cda7f9b66495bef31",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() token cannot be address(0)\""
                        }
                      ],
                      "id": 25727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5101:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5101:87:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25736,
                  "nodeType": "ExpressionStatement",
                  "src": "5101:87:16"
                },
                {
                  "assignments": [
                    25738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25738,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "5209:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25779,
                      "src": "5201:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25737,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5201:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25748,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25745,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5251:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vesting_$25808",
                              "typeString": "contract Vesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vesting_$25808",
                              "typeString": "contract Vesting"
                            }
                          ],
                          "id": 25744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5243:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25743,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5243:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5243:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25740,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25715,
                            "src": "5226:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25739,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26116,
                          "src": "5219:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$26116_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5219:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26116",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5233:9:16",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26055,
                      "src": "5219:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5219:38:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5201:56:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25750,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25738,
                          "src": "5276:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5286:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5276:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a77697468647261774572633230282920696e73756666696369656e7420746f6b656e2062616c616e6365",
                        "id": 25753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5289:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85892f03ec8e97515a01b84c9239dbced7e62306353ae22f1c016c668c87f26e",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() insufficient token balance\""
                        },
                        "value": "Vesting.sol::withdrawErc20() insufficient token balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85892f03ec8e97515a01b84c9239dbced7e62306353ae22f1c016c668c87f26e",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() insufficient token balance\""
                        }
                      ],
                      "id": 25749,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5268:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5268:79:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25755,
                  "nodeType": "ExpressionStatement",
                  "src": "5268:79:16"
                },
                {
                  "assignments": [
                    25757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25757,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5365:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25779,
                      "src": "5360:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25756,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5360:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25766,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 25762,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25883,
                          "src": "5398:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 25763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5398:7:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25764,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25738,
                        "src": "5407:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25759,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25715,
                            "src": "5382:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25758,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26116,
                          "src": "5375:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$26116_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5375:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26116",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5389:8:16",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26065,
                      "src": "5375:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:40:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5360:55:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25768,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25757,
                        "src": "5434:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a776974686472617745726332302829207472616e7366657220756e7375636365737366756c",
                        "id": 25769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5443:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15e8b103591986e2799c2dc971bdc5cdfd784ab9acde7b421a1ef4ce4227abca",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() transfer unsuccessful\""
                        },
                        "value": "Vesting.sol::withdrawErc20() transfer unsuccessful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15e8b103591986e2799c2dc971bdc5cdfd784ab9acde7b421a1ef4ce4227abca",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() transfer unsuccessful\""
                        }
                      ],
                      "id": 25767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5426:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5426:70:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25771,
                  "nodeType": "ExpressionStatement",
                  "src": "5426:70:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25773,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25715,
                        "src": "5535:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25774,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25738,
                        "src": "5542:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 25775,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25883,
                          "src": "5551:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 25776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5551:7:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25772,
                      "name": "Erc20TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25626,
                      "src": "5514:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 25777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5514:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25778,
                  "nodeType": "EmitStatement",
                  "src": "5509:50:16"
                }
              ]
            },
            "documentation": {
              "id": 25713,
              "nodeType": "StructuredDocumentation",
              "src": "4752:173:16",
              "text": "@notice Is used to remove ERC20 tokens from the contract.\n @dev token address cannot be $PROVE\n @param token contract address of token we wish to remove."
            },
            "functionSelector": "c7e42b1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25718,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25717,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4978:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25897,
                  "src": "4978:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4978:11:16"
              }
            ],
            "name": "withdrawErc20",
            "nameLocation": "4940:13:16",
            "parameters": {
              "id": 25716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25715,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4962:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25780,
                  "src": "4954:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4954:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4953:15:16"
            },
            "returnParameters": {
              "id": 25719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4990:0:16"
            },
            "scope": 25808,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25789,
            "nodeType": "FunctionDefinition",
            "src": "5811:75:16",
            "nodes": [],
            "body": {
              "id": 25788,
              "nodeType": "Block",
              "src": "5884:2:16",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 25781,
              "nodeType": "StructuredDocumentation",
              "src": "5618:187:16",
              "text": "@notice This function returns the amount of tokens to claim for a specified investor.\n @param account  address of investor.\n @return uint256 amount of tokens to claim."
            },
            "functionSelector": "0bca8bcd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountToClaim",
            "nameLocation": "5820:16:16",
            "parameters": {
              "id": 25784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25783,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5845:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25789,
                  "src": "5837:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5837:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5836:17:16"
            },
            "returnParameters": {
              "id": 25787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25786,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25789,
                  "src": "5875:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5875:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5874:9:16"
            },
            "scope": 25808,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25798,
            "nodeType": "FunctionDefinition",
            "src": "6086:75:16",
            "nodes": [],
            "body": {
              "id": 25797,
              "nodeType": "Block",
              "src": "6159:2:16",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 25790,
              "nodeType": "StructuredDocumentation",
              "src": "5894:186:16",
              "text": "@notice This function returns the amount of tokens an investor HAS claimed.\n @param account address of investor.\n @return uint256 amount of tokens claimed by account."
            },
            "functionSelector": "d36862e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountClaimed",
            "nameLocation": "6095:16:16",
            "parameters": {
              "id": 25793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25792,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6120:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25798,
                  "src": "6112:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6112:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6111:17:16"
            },
            "returnParameters": {
              "id": 25796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25795,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25798,
                  "src": "6150:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6150:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6149:9:16"
            },
            "scope": 25808,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25807,
            "nodeType": "FunctionDefinition",
            "src": "6379:66:16",
            "nodes": [],
            "body": {
              "id": 25806,
              "nodeType": "Block",
              "src": "6443:2:16",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 25799,
              "nodeType": "StructuredDocumentation",
              "src": "6169:204:16",
              "text": "@notice This function returns a bool true if the investor exists, and false if they do not.\n @param account address of investor.\n @return bool true if investor exists, false otherwise."
            },
            "functionSelector": "cee2a9cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInvestor",
            "nameLocation": "6388:10:16",
            "parameters": {
              "id": 25802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25801,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6407:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25807,
                  "src": "6399:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6399:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6398:17:16"
            },
            "returnParameters": {
              "id": 25805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25804,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25807,
                  "src": "6437:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25803,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6437:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6436:6:16"
            },
            "scope": 25808,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25538,
              "name": "Ownable",
              "nameLocations": [
                "514:7:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25982,
              "src": "514:7:16"
            },
            "id": 25539,
            "nodeType": "InheritanceSpecifier",
            "src": "514:7:16"
          }
        ],
        "canonicalName": "Vesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25537,
          "nodeType": "StructuredDocumentation",
          "src": "231:263:16",
          "text": "@notice This contract will hold $PROVE tokens in escrow\n         This contract will facilitate the private sale investor vesting tokens\n         This contract will follow a strict vesting schedule\n         This contract will follow a claim model"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25808,
          25982,
          25834
        ],
        "name": "Vesting",
        "nameLocation": "503:7:16",
        "scope": 25809,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 16
}