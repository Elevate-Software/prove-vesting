{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proveToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "Erc20TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "InvestorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "InvestorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountClaimed",
          "type": "uint256"
        }
      ],
      "name": "ProveClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "VestingEnabled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokensToVest",
          "type": "uint256"
        }
      ],
      "name": "addInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAmountClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAmountToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInvestorLibrary",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokensToVest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensClaimed",
              "type": "uint256"
            }
          ],
          "internalType": "struct Vesting.Investor[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proveToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartUnix",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162001ae238038062001ae28339810160408190526200003491620001b2565b600080546001600160a01b0319163390811782556040519091829160008051602062001ac2833981519152908290a3506001600160a01b0382166080526200007c8162000084565b5050620001ea565b6000546001600160a01b03163314620000e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166200014b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620000db565b600080546040516001600160a01b038085169392169160008051602062001ac283398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b0381168114620001ad57600080fd5b919050565b60008060408385031215620001c657600080fd5b620001d18362000195565b9150620001e16020840162000195565b90509250929050565b6080516118ae62000214600039600081816101b201528181610a190152610db801526118ae6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806385d4cad311610097578063dd46706411610066578063dd46706414610223578063ec20b45714610236578063f02c6d8f14610249578063f2fde38b1461025257600080fd5b806385d4cad3146101ad5780638da5cb5b146101ec578063c7e42b1b146101fd578063d36862e81461021057600080fd5b80635b904cb7116100d35780635b904cb71461015d5780636f7bc9be14610165578063715018a6146101985780637f87bbd6146101a057600080fd5b80630bca8bcd14610105578063427149781461012b5780634e71d92d1461014057806350ad827a14610148575b600080fd5b610118610113366004611681565b610265565b6040519081526020015b60405180910390f35b61013e610139366004611681565b610520565b005b61013e610890565b610150610bb7565b60405161012291906116a3565b61013e610c39565b610188610173366004611681565b60066020526000908152604090205460ff1681565b6040519015158152602001610122565b61013e610d18565b6004546101889060ff1681565b6101d47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610122565b6000546001600160a01b03166101d4565b61013e61020b366004611681565b610d8c565b61011861021e366004611681565b61111e565b61013e610231366004611705565b611243565b61013e61024436600461171e565b6112da565b61011860035481565b61013e610260366004611681565b61157b565b60045460009060ff166102de5760405162461bcd60e51b815260206004820152603660248201527f56657374696e672e736f6c3a3a676574416d6f756e74546f436c61696d2829206044820152751d995cdd1a5b99c81a5cc81b9bdd08195b98589b195960521b60648201526084015b60405180910390fd5b6001600160a01b03821660009081526006602052604090205460ff1615156001146103715760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a676574416d6f756e74546f436c61696d28292060448201527f6163636f756e74206973206e6f7420616e20696e766573746f7200000000000060648201526084016102d5565b6001600160a01b0382166103e55760405162461bcd60e51b815260206004820152603560248201527f56657374696e672e736f6c3a3a676574416d6f756e74546f436c61696d2829206044820152746163636f756e74206973206164647265737328302960581b60648201526084016102d5565b6000805b60055481101561044957836001600160a01b03166005828154811061041057610410611748565b60009182526020909120600390910201546001600160a01b03160361043757809150610449565b8061044181611774565b9150506103e9565b5060006005828154811061045f5761045f611748565b906000526020600020906003020160010154905060006224ea0042600354610487919061178d565b61049191906117a6565b9050600b8111156104a05750600b5b600060646104af8460086117c8565b6104b991906117a6565b6104c390836117c8565b60646104d085600c6117c8565b6104da91906117a6565b6104e491906117df565b9050600584815481106104f9576104f9611748565b90600052602060002090600302016002015481610516919061178d565b9695505050505050565b6000546001600160a01b0316331461054a5760405162461bcd60e51b81526004016102d5906117f2565b6001600160a01b0381166105c65760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a72656d6f7665496e766573746f72282920616360448201527f636f756e742063616e6e6f74206265206164647265737328302900000000000060648201526084016102d5565b6001600160a01b03811660009081526006602052604090205460ff1615156001146106595760405162461bcd60e51b815260206004820152603860248201527f56657374696e672e736f6c3a3a72656d6f7665496e766573746f72282920616360448201527f636f756e74206973206e6f7420616e20696e766573746f72000000000000000060648201526084016102d5565b6000805b6005548110156106bd57826001600160a01b03166005828154811061068457610684611748565b60009182526020909120600390910201546001600160a01b0316036106ab578091506106bd565b806106b581611774565b91505061065d565b506000600582815481106106d3576106d3611748565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018082015494840194909452600201549082015260058054919350916107239161178d565b8154811061073357610733611748565b90600052602060002090600302016005838154811061075457610754611748565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b039092169190911781556001808301548183015560029283015492909101919091556005805483926107aa9161178d565b815481106107ba576107ba611748565b600091825260209182902083516003929092020180546001600160a01b0319166001600160a01b03909216919091178155908201516001820155604090910151600290910155600580548061081157610811611827565b6000828152602080822060036000199094019384020180546001600160a01b031916815560018101839055600201829055919092556001600160a01b03851680835260069091526040808320805460ff191690555190917fba0013628ccb89af5bb18edf764d3a7b35c07b894848b8e6fd3434719de39c7d91a2505050565b3360009081526006602052604090205460ff16151560011461091a5760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a6f6e6c79496e766573746f722829206d73672e60448201527f73656e646572206d75737420626520616e20696e766573746f7200000000000060648201526084016102d5565b60045460ff166109805760405162461bcd60e51b815260206004820152602b60248201527f56657374696e672e736f6c3a3a636c61696d28292076657374696e672069732060448201526a1b9bdd08195b98589b195960aa1b60648201526084016102d5565b600061098b33610265565b9050600081116109fa5760405162461bcd60e51b815260206004820152603460248201527f56657374696e672e736f6c3a3a636c61696d282920696e766573746f7220686160448201527373206e6f20746f6b656e7320746f20636c61696d60601b60648201526084016102d5565b60405163a9059cbb60e01b8152336004820152602481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8e919061183d565b905080610af05760405162461bcd60e51b815260206004820152602a60248201527f56657374696e672e736f6c3a3a636c61696d2829207472616e7366657220756e6044820152691cdd58d8d95cdcd99d5b60b21b60648201526084016102d5565b60005b600554811015610b7957336001600160a01b031660058281548110610b1a57610b1a611748565b60009182526020909120600390910201546001600160a01b031603610b67578260058281548110610b4d57610b4d611748565b906000526020600020906003020160020181905550610b79565b80610b7181611774565b915050610af3565b5060408051338152602081018490527fc9ff33ee3842ec05cab3a4e2b17aa19694b6c461ea543be5752366f912a6539d910160405180910390a15050565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610c30576000848152602090819020604080516060810182526003860290920180546001600160a01b0316835260018082015484860152600290910154918301919091529083529092019101610bdb565b50505050905090565b6000546001600160a01b03163314610c635760405162461bcd60e51b81526004016102d5906117f2565b60045460ff1615610cdc5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657360448201527f74696e6720697320616c726561647920656e61626c656400000000000000000060648201526084016102d5565b6004805460ff19166001179055426003556040517ff78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa390600090a1565b6000546001600160a01b03163314610d425760405162461bcd60e51b81526004016102d5906117f2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610db65760405162461bcd60e51b81526004016102d5906117f2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031603610e5d5760405162461bcd60e51b815260206004820152603960248201527f56657374696e672e736f6c3a3a7769746864726177457263323028292063616e60448201527f6e6f74207769746864726177202450524f564520746f6b656e0000000000000060648201526084016102d5565b6001600160a01b038116610ed95760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b60448201527f656e2063616e6e6f74206265206164647265737328302900000000000000000060648201526084016102d5565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f44919061185f565b905060008111610fbc5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920696e7360448201527f756666696369656e7420746f6b656e2062616c616e636500000000000000000060648201526084016102d5565b6000826001600160a01b031663a9059cbb610fdf6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af115801561102c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611050919061183d565b9050806110ba5760405162461bcd60e51b815260206004820152603260248201527f56657374696e672e736f6c3a3a776974686472617745726332302829207472616044820152711b9cd9995c881d5b9cdd58d8d95cdcd99d5b60721b60648201526084016102d5565b7f3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f83836110ef6000546001600160a01b031690565b604080516001600160a01b039485168152602081019390935292168183015290519081900360600190a1505050565b6001600160a01b03811660009081526006602052604081205460ff1615156001146111b15760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a676574416d6f756e74436c61696d656428292060448201527f6163636f756e74206973206e6f7420616e20696e766573746f7200000000000060648201526084016102d5565b6000805b60055481101561121557836001600160a01b0316600582815481106111dc576111dc611748565b60009182526020909120600390910201546001600160a01b03160361120357809150611215565b8061120d81611774565b9150506111b5565b506005818154811061122957611229611748565b906000526020600020906003020160020154915050919050565b6000546001600160a01b0316331461126d5760405162461bcd60e51b81526004016102d5906117f2565b60008054600180546001600160a01b03199081166001600160a01b0384161790915516905561129c81426117df565b600255600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a350565b6000546001600160a01b031633146113045760405162461bcd60e51b81526004016102d5906117f2565b6001600160a01b03821660009081526006602052604090205460ff161561138a5760405162461bcd60e51b815260206004820152603460248201527f56657374696e672e736f6c3a3a616464496e766573746f72282920696e7665736044820152731d1bdc881a5cc8185b1c9958591e48185919195960621b60648201526084016102d5565b6001600160a01b0382166114065760405162461bcd60e51b815260206004820152603860248201527f56657374696e672e736f6c3a3a616464496e766573746f722829205f6163636f60448201527f756e742063616e6e6f742062652061646472657373283029000000000000000060648201526084016102d5565b600081116114745760405162461bcd60e51b815260206004820152603560248201527f56657374696e672e736f6c3a3a616464496e766573746f722829205f746f6b6560448201527406e73546f56657374206d757374206265206774203605c1b60648201526084016102d5565b6001600160a01b0382811660008181526006602090815260408083208054600160ff1990911681179091558151606081018352858152928301878152838301858152600580549384018155865293517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600390930292830180546001600160a01b031916919098161790965594517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db186015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db290940193909355915190917f62e6a5118be03f9bfedb79b0ed7ed75ee4a9e15fc4c69d2c4976acde26fa2d5f91a25050565b6000546001600160a01b031633146115a55760405162461bcd60e51b81526004016102d5906117f2565b6001600160a01b03811661160a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461167c57600080fd5b919050565b60006020828403121561169357600080fd5b61169c82611665565b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156116f857815180516001600160a01b03168552868101518786015285015185850152606090930192908501906001016116c0565b5091979650505050505050565b60006020828403121561171757600080fd5b5035919050565b6000806040838503121561173157600080fd5b61173a83611665565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016117865761178661175e565b5060010190565b818103818111156117a0576117a061175e565b92915050565b6000826117c357634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176117a0576117a061175e565b808201808211156117a0576117a061175e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561184f57600080fd5b8151801515811461169c57600080fd5b60006020828403121561187157600080fd5b505191905056fea2646970667358221220ec3b7fe84220e84badd1739ee79702340a132087fd0ec31c1d51eb0d0f0d454264736f6c634300081100338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
    "sourceMap": "494:9142:16:-:0;;;1724:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;955:17:18;998:18;;-1:-1:-1;;;;;;998:18:18;699:10:17;998:18:18;;;;;1032:43;;699:10:17;;;;-1:-1:-1;;;;;;;;;;;1032:43:18;955:17;;1032:43;-1:-1:-1;;;;;;1784:24:16;;;;1819:25;1837:6;1819:17;:25::i;:::-;1724:128;;494:9142;;2118:244:18;1210:7;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;696:2:23;1376:68:18;;;678:21:23;;;715:18;;;708:30;774:34;754:18;;;747:62;826:18;;1376:68:18;;;;;;;;;-1:-1:-1;;;;;2207:22:18;::::1;2199:73;;;::::0;-1:-1:-1;;;2199:73:18;;1057:2:23;2199:73:18::1;::::0;::::1;1039:21:23::0;1096:2;1076:18;;;1069:30;1135:34;1115:18;;;1108:62;-1:-1:-1;;;1186:18:23;;;1179:36;1232:19;;2199:73:18::1;855:402:23::0;2199:73:18::1;2309:6;::::0;;2288:38:::1;::::0;-1:-1:-1;;;;;2288:38:18;;::::1;::::0;2309:6;::::1;::::0;-1:-1:-1;;;;;;;;;;;2288:38:18;::::1;2337:6;:17:::0;;-1:-1:-1;;;;;;2337:17:18::1;-1:-1:-1::0;;;;;2337:17:18;;;::::1;::::0;;;::::1;::::0;;2118:244::o;14:177:23:-;93:13;;-1:-1:-1;;;;;135:31:23;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;855:402::-;494:9142:16;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806385d4cad311610097578063dd46706411610066578063dd46706414610223578063ec20b45714610236578063f02c6d8f14610249578063f2fde38b1461025257600080fd5b806385d4cad3146101ad5780638da5cb5b146101ec578063c7e42b1b146101fd578063d36862e81461021057600080fd5b80635b904cb7116100d35780635b904cb71461015d5780636f7bc9be14610165578063715018a6146101985780637f87bbd6146101a057600080fd5b80630bca8bcd14610105578063427149781461012b5780634e71d92d1461014057806350ad827a14610148575b600080fd5b610118610113366004611681565b610265565b6040519081526020015b60405180910390f35b61013e610139366004611681565b610520565b005b61013e610890565b610150610bb7565b60405161012291906116a3565b61013e610c39565b610188610173366004611681565b60066020526000908152604090205460ff1681565b6040519015158152602001610122565b61013e610d18565b6004546101889060ff1681565b6101d47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610122565b6000546001600160a01b03166101d4565b61013e61020b366004611681565b610d8c565b61011861021e366004611681565b61111e565b61013e610231366004611705565b611243565b61013e61024436600461171e565b6112da565b61011860035481565b61013e610260366004611681565b61157b565b60045460009060ff166102de5760405162461bcd60e51b815260206004820152603660248201527f56657374696e672e736f6c3a3a676574416d6f756e74546f436c61696d2829206044820152751d995cdd1a5b99c81a5cc81b9bdd08195b98589b195960521b60648201526084015b60405180910390fd5b6001600160a01b03821660009081526006602052604090205460ff1615156001146103715760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a676574416d6f756e74546f436c61696d28292060448201527f6163636f756e74206973206e6f7420616e20696e766573746f7200000000000060648201526084016102d5565b6001600160a01b0382166103e55760405162461bcd60e51b815260206004820152603560248201527f56657374696e672e736f6c3a3a676574416d6f756e74546f436c61696d2829206044820152746163636f756e74206973206164647265737328302960581b60648201526084016102d5565b6000805b60055481101561044957836001600160a01b03166005828154811061041057610410611748565b60009182526020909120600390910201546001600160a01b03160361043757809150610449565b8061044181611774565b9150506103e9565b5060006005828154811061045f5761045f611748565b906000526020600020906003020160010154905060006224ea0042600354610487919061178d565b61049191906117a6565b9050600b8111156104a05750600b5b600060646104af8460086117c8565b6104b991906117a6565b6104c390836117c8565b60646104d085600c6117c8565b6104da91906117a6565b6104e491906117df565b9050600584815481106104f9576104f9611748565b90600052602060002090600302016002015481610516919061178d565b9695505050505050565b6000546001600160a01b0316331461054a5760405162461bcd60e51b81526004016102d5906117f2565b6001600160a01b0381166105c65760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a72656d6f7665496e766573746f72282920616360448201527f636f756e742063616e6e6f74206265206164647265737328302900000000000060648201526084016102d5565b6001600160a01b03811660009081526006602052604090205460ff1615156001146106595760405162461bcd60e51b815260206004820152603860248201527f56657374696e672e736f6c3a3a72656d6f7665496e766573746f72282920616360448201527f636f756e74206973206e6f7420616e20696e766573746f72000000000000000060648201526084016102d5565b6000805b6005548110156106bd57826001600160a01b03166005828154811061068457610684611748565b60009182526020909120600390910201546001600160a01b0316036106ab578091506106bd565b806106b581611774565b91505061065d565b506000600582815481106106d3576106d3611748565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018082015494840194909452600201549082015260058054919350916107239161178d565b8154811061073357610733611748565b90600052602060002090600302016005838154811061075457610754611748565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b039092169190911781556001808301548183015560029283015492909101919091556005805483926107aa9161178d565b815481106107ba576107ba611748565b600091825260209182902083516003929092020180546001600160a01b0319166001600160a01b03909216919091178155908201516001820155604090910151600290910155600580548061081157610811611827565b6000828152602080822060036000199094019384020180546001600160a01b031916815560018101839055600201829055919092556001600160a01b03851680835260069091526040808320805460ff191690555190917fba0013628ccb89af5bb18edf764d3a7b35c07b894848b8e6fd3434719de39c7d91a2505050565b3360009081526006602052604090205460ff16151560011461091a5760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a6f6e6c79496e766573746f722829206d73672e60448201527f73656e646572206d75737420626520616e20696e766573746f7200000000000060648201526084016102d5565b60045460ff166109805760405162461bcd60e51b815260206004820152602b60248201527f56657374696e672e736f6c3a3a636c61696d28292076657374696e672069732060448201526a1b9bdd08195b98589b195960aa1b60648201526084016102d5565b600061098b33610265565b9050600081116109fa5760405162461bcd60e51b815260206004820152603460248201527f56657374696e672e736f6c3a3a636c61696d282920696e766573746f7220686160448201527373206e6f20746f6b656e7320746f20636c61696d60601b60648201526084016102d5565b60405163a9059cbb60e01b8152336004820152602481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8e919061183d565b905080610af05760405162461bcd60e51b815260206004820152602a60248201527f56657374696e672e736f6c3a3a636c61696d2829207472616e7366657220756e6044820152691cdd58d8d95cdcd99d5b60b21b60648201526084016102d5565b60005b600554811015610b7957336001600160a01b031660058281548110610b1a57610b1a611748565b60009182526020909120600390910201546001600160a01b031603610b67578260058281548110610b4d57610b4d611748565b906000526020600020906003020160020181905550610b79565b80610b7181611774565b915050610af3565b5060408051338152602081018490527fc9ff33ee3842ec05cab3a4e2b17aa19694b6c461ea543be5752366f912a6539d910160405180910390a15050565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610c30576000848152602090819020604080516060810182526003860290920180546001600160a01b0316835260018082015484860152600290910154918301919091529083529092019101610bdb565b50505050905090565b6000546001600160a01b03163314610c635760405162461bcd60e51b81526004016102d5906117f2565b60045460ff1615610cdc5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657360448201527f74696e6720697320616c726561647920656e61626c656400000000000000000060648201526084016102d5565b6004805460ff19166001179055426003556040517ff78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa390600090a1565b6000546001600160a01b03163314610d425760405162461bcd60e51b81526004016102d5906117f2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610db65760405162461bcd60e51b81526004016102d5906117f2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031603610e5d5760405162461bcd60e51b815260206004820152603960248201527f56657374696e672e736f6c3a3a7769746864726177457263323028292063616e60448201527f6e6f74207769746864726177202450524f564520746f6b656e0000000000000060648201526084016102d5565b6001600160a01b038116610ed95760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b60448201527f656e2063616e6e6f74206265206164647265737328302900000000000000000060648201526084016102d5565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f44919061185f565b905060008111610fbc5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920696e7360448201527f756666696369656e7420746f6b656e2062616c616e636500000000000000000060648201526084016102d5565b6000826001600160a01b031663a9059cbb610fdf6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af115801561102c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611050919061183d565b9050806110ba5760405162461bcd60e51b815260206004820152603260248201527f56657374696e672e736f6c3a3a776974686472617745726332302829207472616044820152711b9cd9995c881d5b9cdd58d8d95cdcd99d5b60721b60648201526084016102d5565b7f3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f83836110ef6000546001600160a01b031690565b604080516001600160a01b039485168152602081019390935292168183015290519081900360600190a1505050565b6001600160a01b03811660009081526006602052604081205460ff1615156001146111b15760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a676574416d6f756e74436c61696d656428292060448201527f6163636f756e74206973206e6f7420616e20696e766573746f7200000000000060648201526084016102d5565b6000805b60055481101561121557836001600160a01b0316600582815481106111dc576111dc611748565b60009182526020909120600390910201546001600160a01b03160361120357809150611215565b8061120d81611774565b9150506111b5565b506005818154811061122957611229611748565b906000526020600020906003020160020154915050919050565b6000546001600160a01b0316331461126d5760405162461bcd60e51b81526004016102d5906117f2565b60008054600180546001600160a01b03199081166001600160a01b0384161790915516905561129c81426117df565b600255600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a350565b6000546001600160a01b031633146113045760405162461bcd60e51b81526004016102d5906117f2565b6001600160a01b03821660009081526006602052604090205460ff161561138a5760405162461bcd60e51b815260206004820152603460248201527f56657374696e672e736f6c3a3a616464496e766573746f72282920696e7665736044820152731d1bdc881a5cc8185b1c9958591e48185919195960621b60648201526084016102d5565b6001600160a01b0382166114065760405162461bcd60e51b815260206004820152603860248201527f56657374696e672e736f6c3a3a616464496e766573746f722829205f6163636f60448201527f756e742063616e6e6f742062652061646472657373283029000000000000000060648201526084016102d5565b600081116114745760405162461bcd60e51b815260206004820152603560248201527f56657374696e672e736f6c3a3a616464496e766573746f722829205f746f6b6560448201527406e73546f56657374206d757374206265206774203605c1b60648201526084016102d5565b6001600160a01b0382811660008181526006602090815260408083208054600160ff1990911681179091558151606081018352858152928301878152838301858152600580549384018155865293517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600390930292830180546001600160a01b031916919098161790965594517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db186015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db290940193909355915190917f62e6a5118be03f9bfedb79b0ed7ed75ee4a9e15fc4c69d2c4976acde26fa2d5f91a25050565b6000546001600160a01b031633146115a55760405162461bcd60e51b81526004016102d5906117f2565b6001600160a01b03811661160a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461167c57600080fd5b919050565b60006020828403121561169357600080fd5b61169c82611665565b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156116f857815180516001600160a01b03168552868101518786015285015185850152606090930192908501906001016116c0565b5091979650505050505050565b60006020828403121561171757600080fd5b5035919050565b6000806040838503121561173157600080fd5b61173a83611665565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016117865761178661175e565b5060010190565b818103818111156117a0576117a061175e565b92915050565b6000826117c357634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176117a0576117a061175e565b808201808211156117a0576117a061175e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561184f57600080fd5b8151801515811461169c57600080fd5b60006020828403121561187157600080fd5b505191905056fea2646970667358221220ec3b7fe84220e84badd1739ee79702340a132087fd0ec31c1d51eb0d0f0d454264736f6c63430008110033",
    "sourceMap": "494:9142:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7738:1110;;;;;;:::i;:::-;;:::i;:::-;;;529:25:23;;;517:2;502:18;7738:1110:16;;;;;;;;5439:802;;;;;;:::i;:::-;;:::i;:::-;;3530:811;;;:::i;9520:111::-;;;:::i;:::-;;;;;;;:::i;6409:261::-;;;:::i;1292:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1608:14:23;;1601:22;1583:41;;1571:2;1556:18;1292:41:16;1443:187:23;1815:148:18;;;:::i;781:26:16:-;;;;;;;;;605:35;;;;;;;;-1:-1:-1;;;;;1799:32:23;;;1781:51;;1769:2;1754:18;605:35:16;1635:203:23;1164:87:18;1210:7;1237:6;-1:-1:-1;;;;;1237:6:18;1164:87;;6857:636:16;;;;;;:::i;:::-;;:::i;9049:463::-;;;;;;:::i;:::-;;:::i;2444:226:18:-;;;;;;:::i;:::-;;:::i;4727:548:16:-;;;;;;:::i;:::-;;:::i;688:31::-;;;;;;2118:244:18;;;;;;:::i;:::-;;:::i;7738:1110:16:-;7904:14;;7803:7;;7904:14;;7896:81;;;;-1:-1:-1;;;7896:81:16;;2489:2:23;7896:81:16;;;2471:21:23;2528:2;2508:18;;;2501:30;2567:34;2547:18;;;2540:62;-1:-1:-1;;;2618:18:23;;;2611:52;2680:19;;7896:81:16;;;;;;;;;-1:-1:-1;;;;;7996:19:16;;;;;;:9;:19;;;;;;;;:27;;:19;:27;7988:98;;;;-1:-1:-1;;;7988:98:16;;2912:2:23;7988:98:16;;;2894:21:23;2951:2;2931:18;;;2924:30;2990:34;2970:18;;;2963:62;3061:28;3041:18;;;3034:56;3107:19;;7988:98:16;2710:422:23;7988:98:16;-1:-1:-1;;;;;8105:22:16;;8097:88;;;;-1:-1:-1;;;8097:88:16;;3339:2:23;8097:88:16;;;3321:21:23;3378:2;3358:18;;;3351:30;3417:34;3397:18;;;3390:62;-1:-1:-1;;;3468:18:23;;;3461:51;3529:19;;8097:88:16;3137:417:23;8097:88:16;8198:8;;8217:186;8238:15;:22;8234:26;;8217:186;;;8316:8;-1:-1:-1;;;;;8286:38:16;:15;8302:1;8286:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;8286:26:16;:38;8282:110;;8351:1;8345:7;;8371:5;;8282:110;8262:3;;;;:::i;:::-;;;;8217:186;;;;8415:17;8435:15;8451:3;8435:20;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;8415:53;;8479:17;8540:7;8521:15;8502:16;;:34;;;;:::i;:::-;8501:46;;;;:::i;:::-;8479:70;;8580:2;8565:12;:17;8561:67;;;-1:-1:-1;8614:2:16;8561:67;8638:18;8724:3;8705:16;:12;8720:1;8705:16;:::i;:::-;:22;;;;:::i;:::-;8689:39;;:12;:39;:::i;:::-;8680:3;8660:17;:12;8675:2;8660:17;:::i;:::-;:23;;;;:::i;:::-;8659:71;;;;:::i;:::-;8638:92;;8773:15;8789:3;8773:20;;;;;;;;:::i;:::-;;;;;;;;;;;:34;;;8757:13;:50;;;;:::i;:::-;8741:66;7738:1110;-1:-1:-1;;;;;;7738:1110:16:o;5439:802::-;1210:7:18;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;5521:22:16;::::1;5513:93;;;::::0;-1:-1:-1;;;5513:93:16;;5184:2:23;5513:93:16::1;::::0;::::1;5166:21:23::0;5223:2;5203:18;;;5196:30;5262:34;5242:18;;;5235:62;5333:28;5313:18;;;5306:56;5379:19;;5513:93:16::1;4982:422:23::0;5513:93:16::1;-1:-1:-1::0;;;;;5625:19:16;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;:27;;:19:::0;:27:::1;5617:96;;;::::0;-1:-1:-1;;;5617:96:16;;5611:2:23;5617:96:16::1;::::0;::::1;5593:21:23::0;5650:2;5630:18;;;5623:30;5689:34;5669:18;;;5662:62;5760:26;5740:18;;;5733:54;5804:19;;5617:96:16::1;5409:420:23::0;5617:96:16::1;5726:8;::::0;5745:186:::1;5766:15;:22:::0;5762:26;::::1;5745:186;;;5844:8;-1:-1:-1::0;;;;;5814:38:16::1;:15;5830:1;5814:18;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:26:::0;-1:-1:-1;;;;;5814:26:16::1;:38:::0;5810:110:::1;;5879:1;5873:7;;5899:5;;5810:110;5790:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5745:186;;;;5943:20;5966:15;5982:3;5966:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;5943:43:::1;::::0;;::::1;::::0;::::1;::::0;;5966:20:::1;::::0;;::::1;::::0;;::::1;5943:43:::0;;-1:-1:-1;;;;;5943:43:16::1;::::0;;;;;::::1;::::0;;;::::1;::::0;;;;::::1;;::::0;;;;;6020:15:::1;6036:22:::0;;5943:43;;-1:-1:-1;6020:15:16;6036:24:::1;::::0;::::1;:::i;:::-;6020:41;;;;;;;;:::i;:::-;;;;;;;;;;;5997:15;6013:3;5997:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:64;;:20:::1;::::0;;::::1;;:64:::0;;-1:-1:-1;;;;;;5997:64:16::1;-1:-1:-1::0;;;;;5997:64:16;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;;6072:15:::1;6088:22:::0;;6116:4;;6088:24:::1;::::0;::::1;:::i;:::-;6072:41;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:48;;:41:::1;::::0;;;::::1;;:48:::0;;-1:-1:-1;;;;;;6072:48:16::1;-1:-1:-1::0;;;;;6072:48:16;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;-1:-1:-1;6072:48:16;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;6131:15:::1;:21:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;6131:21:16;;;;;::::1;;::::0;;-1:-1:-1;;;;;;6131:21:16::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;;::::0;;;;;;;-1:-1:-1;;;;;6163:19:16;::::1;::::0;;;:9:::1;:19:::0;;;;;;;:27;;-1:-1:-1;;6163:27:16::1;::::0;;6208:25;6163:19;;6208:25:::1;::::0;::::1;5502:739;;5439:802:::0;:::o;3530:811::-;2033:10;2023:21;;;;:9;:21;;;;;;;;:29;;:21;:29;2015:100;;;;-1:-1:-1;;;2015:100:16;;6168:2:23;2015:100:16;;;6150:21:23;6207:2;6187:18;;;6180:30;6246:34;6226:18;;;6219:62;6317:28;6297:18;;;6290:56;6363:19;;2015:100:16;5966:422:23;2015:100:16;3590:14:::1;::::0;::::1;;3582:70;;;::::0;-1:-1:-1;;;3582:70:16;;6595:2:23;3582:70:16::1;::::0;::::1;6577:21:23::0;6634:2;6614:18;;;6607:30;6673:34;6653:18;;;6646:62;-1:-1:-1;;;6724:18:23;;;6717:41;6775:19;;3582:70:16::1;6393:407:23::0;3582:70:16::1;3663:21;3687:28;3704:10;3687:16;:28::i;:::-;3663:52;;3750:1;3734:13;:17;3726:82;;;::::0;-1:-1:-1;;;3726:82:16;;7007:2:23;3726:82:16::1;::::0;::::1;6989:21:23::0;7046:2;7026:18;;;7019:30;7085:34;7065:18;;;7058:62;-1:-1:-1;;;7136:18:23;;;7129:50;7196:19;;3726:82:16::1;6805:416:23::0;3726:82:16::1;3867:54;::::0;-1:-1:-1;;;3867:54:16;;3895:10:::1;3867:54;::::0;::::1;7400:51:23::0;7467:18;;;7460:34;;;3852:12:16::1;::::0;3874:10:::1;-1:-1:-1::0;;;;;3867:27:16::1;::::0;::::1;::::0;7373:18:23;;3867:54:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3852:69;;3940:7;3932:62;;;::::0;-1:-1:-1;;;3932:62:16;;7989:2:23;3932:62:16::1;::::0;::::1;7971:21:23::0;8028:2;8008:18;;;8001:30;8067:34;8047:18;;;8040:62;-1:-1:-1;;;8118:18:23;;;8111:40;8168:19;;3932:62:16::1;7787:406:23::0;3932:62:16::1;4053:6;4048:229;4069:15;:22:::0;4065:26;::::1;4048:229;;;4147:10;-1:-1:-1::0;;;;;4117:40:16::1;:15;4133:1;4117:18;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:26:::0;-1:-1:-1;;;;;4117:26:16::1;:40:::0;4113:153:::1;;4213:13;4178:15;4194:1;4178:18;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;:48;;;;4245:5;;4113:153;4093:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4048:229;;;-1:-1:-1::0;4294:39:16::1;::::0;;4307:10:::1;7400:51:23::0;;7482:2;7467:18;;7460:34;;;4294:39:16::1;::::0;7373:18:23;4294:39:16::1;;;;;;;3571:770;;3530:811::o:0;9520:111::-;9571:17;9608:15;9601:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9601:22:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9520:111;:::o;6409:261::-;1210:7:18;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;6475:14:16::1;::::0;::::1;;6474:15;6466:83;;;::::0;-1:-1:-1;;;6466:83:16;;8400:2:23;6466:83:16::1;::::0;::::1;8382:21:23::0;8439:2;8419:18;;;8412:30;8478:34;8458:18;;;8451:62;8549:25;8529:18;;;8522:53;8592:19;;6466:83:16::1;8198:419:23::0;6466:83:16::1;6562:14;:21:::0;;-1:-1:-1;;6562:21:16::1;6579:4;6562:21;::::0;;6613:15:::1;6594:16;:34:::0;6646:16:::1;::::0;::::1;::::0;6562:14:::1;::::0;6646:16:::1;6409:261::o:0;1815:148:18:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;1922:1:::1;1906:6:::0;;1885:40:::1;::::0;-1:-1:-1;;;;;1906:6:18;;::::1;::::0;1885:40:::1;::::0;1922:1;;1885:40:::1;1953:1;1936:19:::0;;-1:-1:-1;;;;;;1936:19:18::1;::::0;;1815:148::o;6857:636:16:-;1210:7:18;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;6944:10:16::1;-1:-1:-1::0;;;;;6935:19:16::1;:5;-1:-1:-1::0;;;;;6935:19:16::1;::::0;6927:89:::1;;;::::0;-1:-1:-1;;;6927:89:16;;8824:2:23;6927:89:16::1;::::0;::::1;8806:21:23::0;8863:2;8843:18;;;8836:30;8902:34;8882:18;;;8875:62;8973:27;8953:18;;;8946:55;9018:19;;6927:89:16::1;8622:421:23::0;6927:89:16::1;-1:-1:-1::0;;;;;7035:19:16;::::1;7027:87;;;::::0;-1:-1:-1;;;7027:87:16;;9250:2:23;7027:87:16::1;::::0;::::1;9232:21:23::0;9289:2;9269:18;;;9262:30;9328:34;9308:18;;;9301:62;9399:25;9379:18;;;9372:53;9442:19;;7027:87:16::1;9048:419:23::0;7027:87:16::1;7145:38;::::0;-1:-1:-1;;;7145:38:16;;7177:4:::1;7145:38;::::0;::::1;1781:51:23::0;7127:15:16::1;::::0;-1:-1:-1;;;;;7145:23:16;::::1;::::0;::::1;::::0;1754:18:23;;7145:38:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7127:56;;7212:1;7202:7;:11;7194:79;;;::::0;-1:-1:-1;;;7194:79:16;;9863:2:23;7194:79:16::1;::::0;::::1;9845:21:23::0;9902:2;9882:18;;;9875:30;9941:34;9921:18;;;9914:62;10012:25;9992:18;;;9985:53;10055:19;;7194:79:16::1;9661:419:23::0;7194:79:16::1;7286:12;7308:5;-1:-1:-1::0;;;;;7301:22:16::1;;7324:7;1210::18::0;1237:6;-1:-1:-1;;;;;1237:6:18;;1164:87;7324:7:16::1;7301:40;::::0;-1:-1:-1;;;;;;7301:40:16::1;::::0;;;;;;-1:-1:-1;;;;;7418:32:23;;;7301:40:16::1;::::0;::::1;7400:51:23::0;7467:18;;;7460:34;;;7373:18;;7301:40:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7286:55;;7360:7;7352:70;;;::::0;-1:-1:-1;;;7352:70:16;;10287:2:23;7352:70:16::1;::::0;::::1;10269:21:23::0;10326:2;10306:18;;;10299:30;10365:34;10345:18;;;10338:62;-1:-1:-1;;;10416:18:23;;;10409:48;10474:19;;7352:70:16::1;10085:414:23::0;7352:70:16::1;7440:45;7461:5;7468:7;7477;1210::18::0;1237:6;-1:-1:-1;;;;;1237:6:18;;1164:87;7477:7:16::1;7440:45;::::0;;-1:-1:-1;;;;;10762:15:23;;;10744:34;;10809:2;10794:18;;10787:34;;;;10857:15;;10837:18;;;10830:43;7440:45:16;;;;;;10694:2:23;7440:45:16;;::::1;6916:577;;6857:636:::0;:::o;9049:463::-;-1:-1:-1;;;;;9142:19:16;;9114:7;9142:19;;;:9;:19;;;;;;;;:27;;:19;:27;9134:98;;;;-1:-1:-1;;;9134:98:16;;11086:2:23;9134:98:16;;;11068:21:23;11125:2;11105:18;;;11098:30;11164:34;11144:18;;;11137:62;11235:28;11215:18;;;11208:56;11281:19;;9134:98:16;10884:422:23;9134:98:16;9245:8;;9264:187;9285:15;:22;9281:26;;9264:187;;;9363:8;-1:-1:-1;;;;;9333:38:16;:15;9349:1;9333:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;9333:26:16;:38;9329:111;;9398:1;9392:7;;9419:5;;9329:111;9309:3;;;;:::i;:::-;;;;9264:187;;;;9470:15;9486:3;9470:20;;;;;;;;:::i;:::-;;;;;;;;;;;:34;;;9463:41;;;9049:463;;;:::o;2444:226:18:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;2525:6:::1;::::0;;;2508:23;;-1:-1:-1;;;;;;2508:23:18;;::::1;-1:-1:-1::0;;;;;2525:6:18;::::1;2508:23;::::0;;;2542:19:::1;::::0;;2584:22:::1;2602:4:::0;2584:15:::1;:22;:::i;:::-;2572:9;:34:::0;2659:1:::1;2643:6:::0;;2622:40:::1;::::0;-1:-1:-1;;;;;2643:6:18;;::::1;::::0;2622:40:::1;::::0;2659:1;;2622:40:::1;2444:226:::0;:::o;4727:548:16:-;1210:7:18;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;4829:19:16;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;:28;4821:93;;;::::0;-1:-1:-1;;;4821:93:16;;11513:2:23;4821:93:16::1;::::0;::::1;11495:21:23::0;11552:2;11532:18;;;11525:30;11591:34;11571:18;;;11564:62;-1:-1:-1;;;11642:18:23;;;11635:50;11702:19;;4821:93:16::1;11311:416:23::0;4821:93:16::1;-1:-1:-1::0;;;;;4933:22:16;::::1;4925:91;;;::::0;-1:-1:-1;;;4925:91:16;;11934:2:23;4925:91:16::1;::::0;::::1;11916:21:23::0;11973:2;11953:18;;;11946:30;12012:34;11992:18;;;11985:62;12083:26;12063:18;;;12056:54;12127:19;;4925:91:16::1;11732:420:23::0;4925:91:16::1;5051:1;5035:13;:17;5027:83;;;::::0;-1:-1:-1;;;5027:83:16;;12359:2:23;5027:83:16::1;::::0;::::1;12341:21:23::0;12398:2;12378:18;;;12371:30;12437:34;12417:18;;;12410:62;-1:-1:-1;;;12488:18:23;;;12481:51;12549:19;;5027:83:16::1;12157:417:23::0;5027:83:16::1;-1:-1:-1::0;;;;;5123:19:16;;::::1;;::::0;;;:9:::1;:19;::::0;;;;;;;:26;;5145:4:::1;-1:-1:-1::0;;5123:26:16;;::::1;::::0;::::1;::::0;;;5181:36;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;5160:15:::1;:58:::0;;;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;5160:58:16::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;;;;;;5244:23;;5123:19;;5244:23:::1;::::0;::::1;4727:548:::0;;:::o;2118:244:18:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:18;699:10:17;1384:23:18;1376:68;;;;-1:-1:-1;;;1376:68:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;2207:22:18;::::1;2199:73;;;::::0;-1:-1:-1;;;2199:73:18;;12781:2:23;2199:73:18::1;::::0;::::1;12763:21:23::0;12820:2;12800:18;;;12793:30;12859:34;12839:18;;;12832:62;-1:-1:-1;;;12910:18:23;;;12903:36;12956:19;;2199:73:18::1;12579:402:23::0;2199:73:18::1;2309:6;::::0;;2288:38:::1;::::0;-1:-1:-1;;;;;2288:38:18;;::::1;::::0;2309:6;::::1;::::0;2288:38:::1;::::0;::::1;2337:6;:17:::0;;-1:-1:-1;;;;;;2337:17:18::1;-1:-1:-1::0;;;;;2337:17:18;;;::::1;::::0;;;::::1;::::0;;2118:244::o;14:173:23:-;82:20;;-1:-1:-1;;;;;131:31:23;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:23:o;565:873::-;790:2;842:21;;;912:13;;815:18;;;934:22;;;761:4;;790:2;975;;993:18;;;;1034:15;;;761:4;1077:335;1091:6;1088:1;1085:13;1077:335;;;1150:13;;1192:9;;-1:-1:-1;;;;;1188:35:23;1176:48;;1264:11;;;1258:18;1244:12;;;1237:40;1317:11;;1311:18;1297:12;;;1290:40;1359:4;1350:14;;;;1387:15;;;;1220:1;1106:9;1077:335;;;-1:-1:-1;1429:3:23;;565:873;-1:-1:-1;;;;;;;565:873:23:o;1843:180::-;1902:6;1955:2;1943:9;1934:7;1930:23;1926:32;1923:52;;;1971:1;1968;1961:12;1923:52;-1:-1:-1;1994:23:23;;1843:180;-1:-1:-1;1843:180:23:o;2028:254::-;2096:6;2104;2157:2;2145:9;2136:7;2132:23;2128:32;2125:52;;;2173:1;2170;2163:12;2125:52;2196:29;2215:9;2196:29;:::i;:::-;2186:39;2272:2;2257:18;;;;2244:32;;-1:-1:-1;;;2028:254:23:o;3559:127::-;3620:10;3615:3;3611:20;3608:1;3601:31;3651:4;3648:1;3641:15;3675:4;3672:1;3665:15;3691:127;3752:10;3747:3;3743:20;3740:1;3733:31;3783:4;3780:1;3773:15;3807:4;3804:1;3797:15;3823:135;3862:3;3883:17;;;3880:43;;3903:18;;:::i;:::-;-1:-1:-1;3950:1:23;3939:13;;3823:135::o;3963:128::-;4030:9;;;4051:11;;;4048:37;;;4065:18;;:::i;:::-;3963:128;;;;:::o;4096:217::-;4136:1;4162;4152:132;;4206:10;4201:3;4197:20;4194:1;4187:31;4241:4;4238:1;4231:15;4269:4;4266:1;4259:15;4152:132;-1:-1:-1;4298:9:23;;4096:217::o;4318:168::-;4391:9;;;4422;;4439:15;;;4433:22;;4419:37;4409:71;;4460:18;;:::i;4491:125::-;4556:9;;;4577:10;;;4574:36;;;4590:18;;:::i;4621:356::-;4823:2;4805:21;;;4842:18;;;4835:30;4901:34;4896:2;4881:18;;4874:62;4968:2;4953:18;;4621:356::o;5834:127::-;5895:10;5890:3;5886:20;5883:1;5876:31;5926:4;5923:1;5916:15;5950:4;5947:1;5940:15;7505:277;7572:6;7625:2;7613:9;7604:7;7600:23;7596:32;7593:52;;;7641:1;7638;7631:12;7593:52;7673:9;7667:16;7726:5;7719:13;7712:21;7705:5;7702:32;7692:60;;7748:1;7745;7738:12;9472:184;9542:6;9595:2;9583:9;9574:7;9570:23;9566:32;9563:52;;;9611:1;9608;9601:12;9563:52;-1:-1:-1;9634:16:23;;9472:184;-1:-1:-1;9472:184:23:o",
    "linkReferences": {},
    "immutableReferences": {
      "25541": [
        {
          "start": 434,
          "length": 32
        },
        {
          "start": 2585,
          "length": 32
        },
        {
          "start": 3512,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addInvestor(address,uint256)": "ec20b457",
    "claim()": "4e71d92d",
    "enableVesting()": "5b904cb7",
    "getAmountClaimed(address)": "d36862e8",
    "getAmountToClaim(address)": "0bca8bcd",
    "getInvestorLibrary()": "50ad827a",
    "investors(address)": "6f7bc9be",
    "lock(uint256)": "dd467064",
    "owner()": "8da5cb5b",
    "proveToken()": "85d4cad3",
    "removeInvestor(address)": "42714978",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "vestingEnabled()": "7f87bbd6",
    "vestingStartUnix()": "f02c6d8f",
    "withdrawErc20(address)": "c7e42b1b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proveToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"Erc20TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"InvestorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"InvestorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountClaimed\",\"type\":\"uint256\"}],\"name\":\"ProveClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VestingEnabled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensToVest\",\"type\":\"uint256\"}],\"name\":\"addInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAmountClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAmountToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestorLibrary\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokensToVest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensClaimed\",\"type\":\"uint256\"}],\"internalType\":\"struct Vesting.Investor[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proveToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartUnix\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Erc20TokensWithdrawn(address,uint256,address)\":{\"params\":{\"amount\":\"tokens withdrawn.\",\"receiver\":\"address of msg.sender.\",\"token\":\"address of Erc20 token.\"}},\"InvestorAdded(address)\":{\"params\":{\"account\":\"is the wallet address of investor that was added to the investorLibrary.\"}},\"InvestorRemoved(address)\":{\"params\":{\"account\":\"is the wallet address of investor that was added to the investorLibrary.\"}},\"ProveClaimed(address,uint256)\":{\"params\":{\"account\":\"is the wallet address of msg.sender.\",\"amountClaimed\":\"is the amount of tokens the account claimed.\"}}},\"kind\":\"dev\",\"methods\":{\"addInvestor(address,uint256)\":{\"params\":{\"_account\":\"the wallet address of investor being added.\",\"_tokensToVest\":\"the amount of $PROVE that is being vested for that investor.\"}},\"claim()\":{\"details\":\"msg.sender must be the investor address\"},\"enableVesting()\":{\"details\":\"will set start time to vestingStartUnix.      will set vestingEnabled to true.\"},\"getAmountClaimed(address)\":{\"params\":{\"_account\":\"address of investor.\"},\"returns\":{\"_0\":\"uint256 amount of tokens claimed by account.\"}},\"getAmountToClaim(address)\":{\"params\":{\"_account\":\"address of investor.\"},\"returns\":{\"_0\":\"uint256 amount of tokens to claim.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeInvestor(address)\":{\"params\":{\"_account\":\"the wallet address of investor that is being removed.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawErc20(address)\":{\"details\":\"token address cannot be $PROVE\",\"params\":{\"token\":\"contract address of token we wish to remove.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Erc20TokensWithdrawn(address,uint256,address)\":{\"notice\":\"This event is emitted when withdrawErc20() is executed.\"},\"InvestorAdded(address)\":{\"notice\":\"This event is emitted when addInvestor() is successfully executed.\"},\"InvestorRemoved(address)\":{\"notice\":\"This event is emitted when removeInvestor() is successfully executed.\"},\"ProveClaimed(address,uint256)\":{\"notice\":\"This event is emitted when claim() is successfully executed.\"},\"VestingEnabled()\":{\"notice\":\"This event is emitted when enableVesting() is executed. Should only be executed once.\"}},\"kind\":\"user\",\"methods\":{\"addInvestor(address,uint256)\":{\"notice\":\"This function sets an address as true in the investors mapping and also pushes a new investor element to the Investor array.\"},\"claim()\":{\"notice\":\"Used to claim vested tokens.\"},\"constructor\":{\"notice\":\"Mapping to track investor addresses.\"},\"enableVesting()\":{\"notice\":\"This function starts the vesting period.\"},\"getAmountClaimed(address)\":{\"notice\":\"This function returns the amount of tokens an investor HAS claimed.\"},\"getAmountToClaim(address)\":{\"notice\":\"This function returns the amount of tokens to claim for a specified investor.\"},\"removeInvestor(address)\":{\"notice\":\"This function removes an investor from the investorLibrary.\"},\"vestingEnabled()\":{\"notice\":\"block timestamp of when vesting has begun\"},\"vestingStartUnix()\":{\"notice\":\"The vested token address.\"},\"withdrawErc20(address)\":{\"notice\":\"Is used to remove ERC20 tokens from the contract.\"}},\"notice\":\"This contract will hold $PROVE tokens in escrow         This contract will facilitate the private sale investor vesting tokens         This contract will follow a strict vesting schedule         This contract will follow a claim model\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vesting.sol\":\"Vesting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Vesting.sol\":{\"keccak256\":\"0xb219ad92ccb36d81d8fc13160c89eb0bc5ecb9951bcb46ac6a80d0f2fae3ac4b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://696b7dc7a12167f20fdf841963ea79ffa07f43b763220b9190eabe33c3de3f31\",\"dweb:/ipfs/Qmcg2UPnLcq8uQY4wdyYinefhVwspqc1m9LRW9xBJsJZKo\"]},\"src/extensions/Context.sol\":{\"keccak256\":\"0x8795d48b0db75e627ea6d57f1eb24e269519a1db8ce2e7d3a4441dd516a9b016\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39249193e7e48805d84c55471a695d8f88a3358f0b3274b94ce4e83278a53a12\",\"dweb:/ipfs/QmQcrb4WuzRmY3oeX8ush6EqhtjqmfFxpawXk2ceHoFMiV\"]},\"src/extensions/Ownable.sol\":{\"keccak256\":\"0xbe3f4ae2a873ee339e0ac54107262ee789604570a463549fd43364289769207f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca9dde5e484d808440ff8ac43892b8f59a2b76d5084efce1dfa904d800c0f9c6\",\"dweb:/ipfs/QmRnQ2x3a9GwVKf7wbRhNY1MwdxyoTkvDtLFqjXxhEoALA\"]},\"src/interfaces/Interfaces.sol\":{\"keccak256\":\"0x741b318f522ba8451f4a2e40afcf59e995484318fabe7c57adeba3124bbd7e04\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dba0a37a10519080f892d5c8b87a0ec026ef73492195a901e49f74766b5915f7\",\"dweb:/ipfs/QmduauRea8YdqJaMeHiYH2tRtbydoqgVirSaTzbXMoEjYX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_proveToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Erc20TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InvestorAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InvestorRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProveClaimed",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "VestingEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokensToVest",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addInvestor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableVesting"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountClaimed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getInvestorLibrary",
          "outputs": [
            {
              "internalType": "struct Vesting.Investor[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokensToVest",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokensClaimed",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "investors",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lock"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proveToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeInvestor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingStartUnix",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawErc20"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addInvestor(address,uint256)": {
            "params": {
              "_account": "the wallet address of investor being added.",
              "_tokensToVest": "the amount of $PROVE that is being vested for that investor."
            }
          },
          "claim()": {
            "details": "msg.sender must be the investor address"
          },
          "enableVesting()": {
            "details": "will set start time to vestingStartUnix.      will set vestingEnabled to true."
          },
          "getAmountClaimed(address)": {
            "params": {
              "_account": "address of investor."
            },
            "returns": {
              "_0": "uint256 amount of tokens claimed by account."
            }
          },
          "getAmountToClaim(address)": {
            "params": {
              "_account": "address of investor."
            },
            "returns": {
              "_0": "uint256 amount of tokens to claim."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "removeInvestor(address)": {
            "params": {
              "_account": "the wallet address of investor that is being removed."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawErc20(address)": {
            "details": "token address cannot be $PROVE",
            "params": {
              "token": "contract address of token we wish to remove."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addInvestor(address,uint256)": {
            "notice": "This function sets an address as true in the investors mapping and also pushes a new investor element to the Investor array."
          },
          "claim()": {
            "notice": "Used to claim vested tokens."
          },
          "constructor": {
            "notice": "Mapping to track investor addresses."
          },
          "enableVesting()": {
            "notice": "This function starts the vesting period."
          },
          "getAmountClaimed(address)": {
            "notice": "This function returns the amount of tokens an investor HAS claimed."
          },
          "getAmountToClaim(address)": {
            "notice": "This function returns the amount of tokens to claim for a specified investor."
          },
          "removeInvestor(address)": {
            "notice": "This function removes an investor from the investorLibrary."
          },
          "vestingEnabled()": {
            "notice": "block timestamp of when vesting has begun"
          },
          "vestingStartUnix()": {
            "notice": "The vested token address."
          },
          "withdrawErc20(address)": {
            "notice": "Is used to remove ERC20 tokens from the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Vesting.sol": "Vesting"
      },
      "libraries": {}
    },
    "sources": {
      "src/Vesting.sol": {
        "keccak256": "0xb219ad92ccb36d81d8fc13160c89eb0bc5ecb9951bcb46ac6a80d0f2fae3ac4b",
        "urls": [
          "bzz-raw://696b7dc7a12167f20fdf841963ea79ffa07f43b763220b9190eabe33c3de3f31",
          "dweb:/ipfs/Qmcg2UPnLcq8uQY4wdyYinefhVwspqc1m9LRW9xBJsJZKo"
        ],
        "license": "UNLICENSED"
      },
      "src/extensions/Context.sol": {
        "keccak256": "0x8795d48b0db75e627ea6d57f1eb24e269519a1db8ce2e7d3a4441dd516a9b016",
        "urls": [
          "bzz-raw://39249193e7e48805d84c55471a695d8f88a3358f0b3274b94ce4e83278a53a12",
          "dweb:/ipfs/QmQcrb4WuzRmY3oeX8ush6EqhtjqmfFxpawXk2ceHoFMiV"
        ],
        "license": "MIT"
      },
      "src/extensions/Ownable.sol": {
        "keccak256": "0xbe3f4ae2a873ee339e0ac54107262ee789604570a463549fd43364289769207f",
        "urls": [
          "bzz-raw://ca9dde5e484d808440ff8ac43892b8f59a2b76d5084efce1dfa904d800c0f9c6",
          "dweb:/ipfs/QmRnQ2x3a9GwVKf7wbRhNY1MwdxyoTkvDtLFqjXxhEoALA"
        ],
        "license": "MIT"
      },
      "src/interfaces/Interfaces.sol": {
        "keccak256": "0x741b318f522ba8451f4a2e40afcf59e995484318fabe7c57adeba3124bbd7e04",
        "urls": [
          "bzz-raw://dba0a37a10519080f892d5c8b87a0ec026ef73492195a901e49f74766b5915f7",
          "dweb:/ipfs/QmduauRea8YdqJaMeHiYH2tRtbydoqgVirSaTzbXMoEjYX"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Vesting.sol",
    "id": 26134,
    "exportedSymbols": {
      "Context": [
        26159
      ],
      "IERC20": [
        26441
      ],
      "Ownable": [
        26307
      ],
      "Vesting": [
        26133
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:9598:16",
    "nodes": [
      {
        "id": 25533,
        "nodeType": "PragmaDirective",
        "src": "40:24:16",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 25534,
        "nodeType": "ImportDirective",
        "src": "68:34:16",
        "nodes": [],
        "absolutePath": "src/extensions/Ownable.sol",
        "file": "./extensions/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26134,
        "sourceUnit": 26308,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25536,
        "nodeType": "ImportDirective",
        "src": "104:51:16",
        "nodes": [],
        "absolutePath": "src/interfaces/Interfaces.sol",
        "file": "./interfaces/Interfaces.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26134,
        "sourceUnit": 27223,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25535,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26441,
              "src": "112:6:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26133,
        "nodeType": "ContractDefinition",
        "src": "494:9142:16",
        "nodes": [
          {
            "id": 25541,
            "nodeType": "VariableDeclaration",
            "src": "605:35:16",
            "nodes": [],
            "constant": false,
            "functionSelector": "85d4cad3",
            "mutability": "immutable",
            "name": "proveToken",
            "nameLocation": "630:10:16",
            "scope": 26133,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25540,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25544,
            "nodeType": "VariableDeclaration",
            "src": "688:31:16",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25542,
              "nodeType": "StructuredDocumentation",
              "src": "643:39:16",
              "text": "@notice The vested token address."
            },
            "functionSelector": "f02c6d8f",
            "mutability": "mutable",
            "name": "vestingStartUnix",
            "nameLocation": "703:16:16",
            "scope": 26133,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25543,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "688:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25547,
            "nodeType": "VariableDeclaration",
            "src": "781:26:16",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25545,
              "nodeType": "StructuredDocumentation",
              "src": "722:53:16",
              "text": "@notice block timestamp of when vesting has begun"
            },
            "functionSelector": "7f87bbd6",
            "mutability": "mutable",
            "name": "vestingEnabled",
            "nameLocation": "793:14:16",
            "scope": 26133,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 25546,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "781:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25552,
            "nodeType": "VariableDeclaration",
            "src": "861:26:16",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25548,
              "nodeType": "StructuredDocumentation",
              "src": "815:40:16",
              "text": "@notice vesting enabled when true."
            },
            "mutability": "mutable",
            "name": "investorLibrary",
            "nameLocation": "872:15:16",
            "scope": 26133,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
              "typeString": "struct Vesting.Investor[]"
            },
            "typeName": {
              "baseType": {
                "id": 25550,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25549,
                  "name": "Investor",
                  "nameLocations": [
                    "861:8:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25559,
                  "src": "861:8:16"
                },
                "referencedDeclaration": 25559,
                "src": "861:8:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$25559_storage_ptr",
                  "typeString": "struct Vesting.Investor"
                }
              },
              "id": 25551,
              "nodeType": "ArrayTypeName",
              "src": "861:10:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage_ptr",
                "typeString": "struct Vesting.Investor[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25559,
            "nodeType": "StructDefinition",
            "src": "1171:113:16",
            "nodes": [],
            "canonicalName": "Vesting.Investor",
            "members": [
              {
                "constant": false,
                "id": 25554,
                "mutability": "mutable",
                "name": "account",
                "nameLocation": "1206:7:16",
                "nodeType": "VariableDeclaration",
                "scope": 25559,
                "src": "1198:15:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25553,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1198:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25556,
                "mutability": "mutable",
                "name": "tokensToVest",
                "nameLocation": "1232:12:16",
                "nodeType": "VariableDeclaration",
                "scope": 25559,
                "src": "1224:20:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25555,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1224:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25558,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "1263:13:16",
                "nodeType": "VariableDeclaration",
                "scope": 25559,
                "src": "1255:21:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25557,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1255:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "1178:8:16",
            "scope": 26133,
            "visibility": "public"
          },
          {
            "id": 25563,
            "nodeType": "VariableDeclaration",
            "src": "1292:41:16",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f7bc9be",
            "mutability": "mutable",
            "name": "investors",
            "nameLocation": "1324:9:16",
            "scope": 26133,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 25562,
              "keyType": {
                "id": 25560,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1300:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1292:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 25561,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1311:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 25580,
            "nodeType": "FunctionDefinition",
            "src": "1724:128:16",
            "nodes": [],
            "body": {
              "id": 25579,
              "nodeType": "Block",
              "src": "1773:79:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25571,
                      "name": "proveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25541,
                      "src": "1784:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25572,
                      "name": "_proveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25566,
                      "src": "1797:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1784:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25574,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:24:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25576,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25568,
                        "src": "1837:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25575,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26272,
                      "src": "1819:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25578,
                  "nodeType": "ExpressionStatement",
                  "src": "1819:25:16"
                }
              ]
            },
            "documentation": {
              "id": 25564,
              "nodeType": "StructuredDocumentation",
              "src": "1342:48:16",
              "text": "@notice Mapping to track investor addresses."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25566,
                  "mutability": "mutable",
                  "name": "_proveToken",
                  "nameLocation": "1744:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25580,
                  "src": "1736:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25568,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1765:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25580,
                  "src": "1757:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1735:37:16"
            },
            "returnParameters": {
              "id": 25570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1773:0:16"
            },
            "scope": 26133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25595,
            "nodeType": "ModifierDefinition",
            "src": "1980:155:16",
            "nodes": [],
            "body": {
              "id": 25594,
              "nodeType": "Block",
              "src": "2004:131:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 25584,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25563,
                            "src": "2023:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 25587,
                          "indexExpression": {
                            "expression": {
                              "id": 25585,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2033:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 25586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2037:6:16",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2033:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2023:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 25588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2048:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2023:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a6f6e6c79496e766573746f722829206d73672e73656e646572206d75737420626520616e20696e766573746f72",
                        "id": 25590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2054:60:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04c0e7337b94cd08ab709ab9e01a52972b8997f541f0ec03cfdf895720fa5020",
                          "typeString": "literal_string \"Vesting.sol::onlyInvestor() msg.sender must be an investor\""
                        },
                        "value": "Vesting.sol::onlyInvestor() msg.sender must be an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04c0e7337b94cd08ab709ab9e01a52972b8997f541f0ec03cfdf895720fa5020",
                          "typeString": "literal_string \"Vesting.sol::onlyInvestor() msg.sender must be an investor\""
                        }
                      ],
                      "id": 25583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2015:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25592,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:100:16"
                },
                {
                  "id": 25593,
                  "nodeType": "PlaceholderStatement",
                  "src": "2126:1:16"
                }
              ]
            },
            "documentation": {
              "id": 25581,
              "nodeType": "StructuredDocumentation",
              "src": "1918:56:16",
              "text": "@dev modifier to check if msg.sender is an investor."
            },
            "name": "onlyInvestor",
            "nameLocation": "1989:12:16",
            "parameters": {
              "id": 25582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:2:16"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25602,
            "nodeType": "EventDefinition",
            "src": "2406:59:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25596,
              "nodeType": "StructuredDocumentation",
              "src": "2192:208:16",
              "text": "@notice This event is emitted when claim() is successfully executed.\n @param account is the wallet address of msg.sender.\n @param amountClaimed is the amount of tokens the account claimed."
            },
            "eventSelector": "c9ff33ee3842ec05cab3a4e2b17aa19694b6c461ea543be5752366f912a6539d",
            "name": "ProveClaimed",
            "nameLocation": "2412:12:16",
            "parameters": {
              "id": 25601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25598,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2433:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25602,
                  "src": "2425:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25600,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountClaimed",
                  "nameLocation": "2450:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25602,
                  "src": "2442:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2442:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2424:40:16"
            }
          },
          {
            "id": 25607,
            "nodeType": "EventDefinition",
            "src": "2654:45:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25603,
              "nodeType": "StructuredDocumentation",
              "src": "2473:175:16",
              "text": "@notice This event is emitted when addInvestor() is successfully executed.\n @param account is the wallet address of investor that was added to the investorLibrary."
            },
            "eventSelector": "62e6a5118be03f9bfedb79b0ed7ed75ee4a9e15fc4c69d2c4976acde26fa2d5f",
            "name": "InvestorAdded",
            "nameLocation": "2660:13:16",
            "parameters": {
              "id": 25606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25605,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2690:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25607,
                  "src": "2674:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2674:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2673:25:16"
            }
          },
          {
            "id": 25612,
            "nodeType": "EventDefinition",
            "src": "2891:47:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25608,
              "nodeType": "StructuredDocumentation",
              "src": "2707:178:16",
              "text": "@notice This event is emitted when removeInvestor() is successfully executed.\n @param account is the wallet address of investor that was added to the investorLibrary."
            },
            "eventSelector": "ba0013628ccb89af5bb18edf764d3a7b35c07b894848b8e6fd3434719de39c7d",
            "name": "InvestorRemoved",
            "nameLocation": "2897:15:16",
            "parameters": {
              "id": 25611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25610,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2929:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25612,
                  "src": "2913:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2913:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2912:25:16"
            }
          },
          {
            "id": 25621,
            "nodeType": "EventDefinition",
            "src": "3154:76:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25613,
              "nodeType": "StructuredDocumentation",
              "src": "2946:202:16",
              "text": "@notice This event is emitted when withdrawErc20() is executed.\n @param token address of Erc20 token.\n @param amount tokens withdrawn.\n @param receiver address of msg.sender."
            },
            "eventSelector": "3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f",
            "name": "Erc20TokensWithdrawn",
            "nameLocation": "3160:20:16",
            "parameters": {
              "id": 25620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25615,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3189:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25621,
                  "src": "3181:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3181:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25617,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3204:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25621,
                  "src": "3196:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3196:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25619,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3220:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25621,
                  "src": "3212:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3212:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3180:49:16"
            }
          },
          {
            "id": 25624,
            "nodeType": "EventDefinition",
            "src": "3341:23:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25622,
              "nodeType": "StructuredDocumentation",
              "src": "3238:97:16",
              "text": "@notice This event is emitted when enableVesting() is executed. Should only be executed once."
            },
            "eventSelector": "f78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa3",
            "name": "VestingEnabled",
            "nameLocation": "3347:14:16",
            "parameters": {
              "id": 25623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3361:2:16"
            }
          },
          {
            "id": 25702,
            "nodeType": "FunctionDefinition",
            "src": "3530:811:16",
            "nodes": [],
            "body": {
              "id": 25701,
              "nodeType": "Block",
              "src": "3571:770:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25631,
                        "name": "vestingEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25547,
                        "src": "3590:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a636c61696d28292076657374696e67206973206e6f7420656e61626c6564",
                        "id": 25632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3606:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34ce9ff9fcf1e453c578e481f1424d1ad92317cc4ad3678a8839da76e7fbb7d6",
                          "typeString": "literal_string \"Vesting.sol::claim() vesting is not enabled\""
                        },
                        "value": "Vesting.sol::claim() vesting is not enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34ce9ff9fcf1e453c578e481f1424d1ad92317cc4ad3678a8839da76e7fbb7d6",
                          "typeString": "literal_string \"Vesting.sol::claim() vesting is not enabled\""
                        }
                      ],
                      "id": 25630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3582:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3582:70:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25634,
                  "nodeType": "ExpressionStatement",
                  "src": "3582:70:16"
                },
                {
                  "assignments": [
                    25636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25636,
                      "mutability": "mutable",
                      "name": "amountToClaim",
                      "nameLocation": "3671:13:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25701,
                      "src": "3663:21:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25635,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3663:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25641,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25638,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3704:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3708:6:16",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3704:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25637,
                      "name": "getAmountToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26070,
                      "src": "3687:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 25640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3687:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3663:52:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25643,
                          "name": "amountToClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25636,
                          "src": "3734:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3750:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3734:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a636c61696d282920696e766573746f7220686173206e6f20746f6b656e7320746f20636c61696d",
                        "id": 25646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3753:54:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fe10741cbe6c2a9cecbadf80743676cd6f5fd9119dd5a58d21ffa6d6e330a51",
                          "typeString": "literal_string \"Vesting.sol::claim() investor has no tokens to claim\""
                        },
                        "value": "Vesting.sol::claim() investor has no tokens to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fe10741cbe6c2a9cecbadf80743676cd6f5fd9119dd5a58d21ffa6d6e330a51",
                          "typeString": "literal_string \"Vesting.sol::claim() investor has no tokens to claim\""
                        }
                      ],
                      "id": 25642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3726:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3726:82:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25648,
                  "nodeType": "ExpressionStatement",
                  "src": "3726:82:16"
                },
                {
                  "assignments": [
                    25650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25650,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3857:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25701,
                      "src": "3852:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25649,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3852:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25659,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25655,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3895:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3899:6:16",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3895:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25657,
                        "name": "amountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25636,
                        "src": "3907:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25652,
                            "name": "proveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25541,
                            "src": "3874:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25651,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26441,
                          "src": "3867:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$26441_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3867:18:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26441",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3886:8:16",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26390,
                      "src": "3867:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3867:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3852:69:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25661,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25650,
                        "src": "3940:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a636c61696d2829207472616e7366657220756e7375636365737366756c",
                        "id": 25662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3949:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1582297afdf7bee42b6ca3b96d51a42caca872f6fd9c2b28e52da0c647e180a4",
                          "typeString": "literal_string \"Vesting.sol::claim() transfer unsuccessful\""
                        },
                        "value": "Vesting.sol::claim() transfer unsuccessful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1582297afdf7bee42b6ca3b96d51a42caca872f6fd9c2b28e52da0c647e180a4",
                          "typeString": "literal_string \"Vesting.sol::claim() transfer unsuccessful\""
                        }
                      ],
                      "id": 25660,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3932:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3932:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25664,
                  "nodeType": "ExpressionStatement",
                  "src": "3932:62:16"
                },
                {
                  "body": {
                    "id": 25693,
                    "nodeType": "Block",
                    "src": "4098:179:16",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 25682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 25676,
                                "name": "investorLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25552,
                                "src": "4117:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                                  "typeString": "struct Vesting.Investor storage ref[] storage ref"
                                }
                              },
                              "id": 25678,
                              "indexExpression": {
                                "id": 25677,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25666,
                                "src": "4133:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4117:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$25559_storage",
                                "typeString": "struct Vesting.Investor storage ref"
                              }
                            },
                            "id": 25679,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4136:7:16",
                            "memberName": "account",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25554,
                            "src": "4117:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 25680,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4147:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 25681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4151:6:16",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4147:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4117:40:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 25692,
                        "nodeType": "IfStatement",
                        "src": "4113:153:16",
                        "trueBody": {
                          "id": 25691,
                          "nodeType": "Block",
                          "src": "4159:107:16",
                          "statements": [
                            {
                              "expression": {
                                "id": 25688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 25683,
                                      "name": "investorLibrary",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25552,
                                      "src": "4178:15:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                                        "typeString": "struct Vesting.Investor storage ref[] storage ref"
                                      }
                                    },
                                    "id": 25685,
                                    "indexExpression": {
                                      "id": 25684,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25666,
                                      "src": "4194:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4178:18:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Investor_$25559_storage",
                                      "typeString": "struct Vesting.Investor storage ref"
                                    }
                                  },
                                  "id": 25686,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "4197:13:16",
                                  "memberName": "tokensClaimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25558,
                                  "src": "4178:32:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 25687,
                                  "name": "amountToClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25636,
                                  "src": "4213:13:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4178:48:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 25689,
                              "nodeType": "ExpressionStatement",
                              "src": "4178:48:16"
                            },
                            {
                              "id": 25690,
                              "nodeType": "Break",
                              "src": "4245:5:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25669,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25666,
                      "src": "4065:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 25670,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "4069:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4085:6:16",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4069:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4065:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25694,
                  "initializationExpression": {
                    "assignments": [
                      25666
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25666,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4058:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 25694,
                        "src": "4053:6:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25665,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4053:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25668,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4062:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4053:10:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4093:3:16",
                      "subExpression": {
                        "id": 25673,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25666,
                        "src": "4093:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25675,
                    "nodeType": "ExpressionStatement",
                    "src": "4093:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4048:229:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25696,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4307:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4311:6:16",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4307:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25698,
                        "name": "amountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25636,
                        "src": "4319:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25695,
                      "name": "ProveClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25602,
                      "src": "4294:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4294:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25700,
                  "nodeType": "EmitStatement",
                  "src": "4289:44:16"
                }
              ]
            },
            "documentation": {
              "id": 25625,
              "nodeType": "StructuredDocumentation",
              "src": "3430:94:16",
              "text": "@notice Used to claim vested tokens.\n @dev msg.sender must be the investor address"
            },
            "functionSelector": "4e71d92d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25628,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25627,
                  "name": "onlyInvestor",
                  "nameLocations": [
                    "3556:12:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25595,
                  "src": "3556:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3556:14:16"
              }
            ],
            "name": "claim",
            "nameLocation": "3539:5:16",
            "parameters": {
              "id": 25626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3544:2:16"
            },
            "returnParameters": {
              "id": 25629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3571:0:16"
            },
            "scope": 26133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25759,
            "nodeType": "FunctionDefinition",
            "src": "4727:548:16",
            "nodes": [],
            "body": {
              "id": 25758,
              "nodeType": "Block",
              "src": "4810:465:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 25713,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25563,
                            "src": "4829:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 25715,
                          "indexExpression": {
                            "id": 25714,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25705,
                            "src": "4839:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4829:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 25716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4852:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4829:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a616464496e766573746f72282920696e766573746f7220697320616c7265616479206164646564",
                        "id": 25718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4859:54:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac8b3365ec58116f79763809b4a76f0b400571fe8055cd18bc01fd9ea666875f",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() investor is already added\""
                        },
                        "value": "Vesting.sol::addInvestor() investor is already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac8b3365ec58116f79763809b4a76f0b400571fe8055cd18bc01fd9ea666875f",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() investor is already added\""
                        }
                      ],
                      "id": 25712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4821:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4821:93:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25720,
                  "nodeType": "ExpressionStatement",
                  "src": "4821:93:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25722,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25705,
                          "src": "4933:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4953:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4945:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25723,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4945:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4945:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4933:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a616464496e766573746f722829205f6163636f756e742063616e6e6f742062652061646472657373283029",
                        "id": 25728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4957:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43a7576cc71999d5991f16be987a98bc7d178f59df62ec343336a603751a8636",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() _account cannot be address(0)\""
                        },
                        "value": "Vesting.sol::addInvestor() _account cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43a7576cc71999d5991f16be987a98bc7d178f59df62ec343336a603751a8636",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() _account cannot be address(0)\""
                        }
                      ],
                      "id": 25721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4925:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4925:91:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25730,
                  "nodeType": "ExpressionStatement",
                  "src": "4925:91:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25732,
                          "name": "_tokensToVest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25707,
                          "src": "5035:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5051:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5035:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a616464496e766573746f722829205f746f6b656e73546f56657374206d7573742062652067742030",
                        "id": 25735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5054:55:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c29cccc352d3a7eba90af13be2b3943b9e81df521048af1ca34057bc8661bb8",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() _tokensToVest must be gt 0\""
                        },
                        "value": "Vesting.sol::addInvestor() _tokensToVest must be gt 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c29cccc352d3a7eba90af13be2b3943b9e81df521048af1ca34057bc8661bb8",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() _tokensToVest must be gt 0\""
                        }
                      ],
                      "id": 25731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5027:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5027:83:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25737,
                  "nodeType": "ExpressionStatement",
                  "src": "5027:83:16"
                },
                {
                  "expression": {
                    "id": 25742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25738,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25563,
                        "src": "5123:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25740,
                      "indexExpression": {
                        "id": 25739,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25705,
                        "src": "5133:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5123:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 25741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5145:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5123:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25743,
                  "nodeType": "ExpressionStatement",
                  "src": "5123:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25748,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25705,
                            "src": "5190:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 25749,
                            "name": "_tokensToVest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25707,
                            "src": "5200:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 25750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5215:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25747,
                          "name": "Investor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25559,
                          "src": "5181:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Investor_$25559_storage_ptr_$",
                            "typeString": "type(struct Vesting.Investor storage pointer)"
                          }
                        },
                        "id": 25751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5181:36:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$25559_memory_ptr",
                          "typeString": "struct Vesting.Investor memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Investor_$25559_memory_ptr",
                          "typeString": "struct Vesting.Investor memory"
                        }
                      ],
                      "expression": {
                        "id": 25744,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "5160:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5176:4:16",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5160:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Investor_$25559_storage_$dyn_storage_ptr_$_t_struct$_Investor_$25559_storage_$returns$__$bound_to$_t_array$_t_struct$_Investor_$25559_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Vesting.Investor storage ref[] storage pointer,struct Vesting.Investor storage ref)"
                      }
                    },
                    "id": 25752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5160:58:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25753,
                  "nodeType": "ExpressionStatement",
                  "src": "5160:58:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25755,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25705,
                        "src": "5258:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25754,
                      "name": "InvestorAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25607,
                      "src": "5244:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5244:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25757,
                  "nodeType": "EmitStatement",
                  "src": "5239:28:16"
                }
              ]
            },
            "documentation": {
              "id": 25703,
              "nodeType": "StructuredDocumentation",
              "src": "4425:296:16",
              "text": "@notice This function sets an address as true in the investors mapping and also pushes a new investor element to the Investor array.\n @param _account the wallet address of investor being added.\n @param _tokensToVest the amount of $PROVE that is being vested for that investor."
            },
            "functionSelector": "ec20b457",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25710,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25709,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4798:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26222,
                  "src": "4798:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4798:11:16"
              }
            ],
            "name": "addInvestor",
            "nameLocation": "4736:11:16",
            "parameters": {
              "id": 25708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25705,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "4756:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25759,
                  "src": "4748:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4748:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25707,
                  "mutability": "mutable",
                  "name": "_tokensToVest",
                  "nameLocation": "4774:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25759,
                  "src": "4766:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4766:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4747:41:16"
            },
            "returnParameters": {
              "id": 25711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4810:0:16"
            },
            "scope": 26133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25858,
            "nodeType": "FunctionDefinition",
            "src": "5439:802:16",
            "nodes": [],
            "body": {
              "id": 25857,
              "nodeType": "Block",
              "src": "5502:739:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25768,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25762,
                          "src": "5521:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5541:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5533:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25769,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5533:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5533:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5521:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a72656d6f7665496e766573746f722829206163636f756e742063616e6e6f742062652061646472657373283029",
                        "id": 25774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5545:60:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b2ef8fa4a278f0c633eee5173cf5b45c06af3207fcf59338db6e0d4ebe3ce85",
                          "typeString": "literal_string \"Vesting.sol::removeInvestor() account cannot be address(0)\""
                        },
                        "value": "Vesting.sol::removeInvestor() account cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b2ef8fa4a278f0c633eee5173cf5b45c06af3207fcf59338db6e0d4ebe3ce85",
                          "typeString": "literal_string \"Vesting.sol::removeInvestor() account cannot be address(0)\""
                        }
                      ],
                      "id": 25767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5513:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5513:93:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25776,
                  "nodeType": "ExpressionStatement",
                  "src": "5513:93:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 25778,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25563,
                            "src": "5625:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 25780,
                          "indexExpression": {
                            "id": 25779,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25762,
                            "src": "5635:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5625:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 25781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5648:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5625:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a72656d6f7665496e766573746f722829206163636f756e74206973206e6f7420616e20696e766573746f72",
                        "id": 25783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5654:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c79e8791776e857b071508abe661f4ce8daf32ecc6a34eee68489085f017616",
                          "typeString": "literal_string \"Vesting.sol::removeInvestor() account is not an investor\""
                        },
                        "value": "Vesting.sol::removeInvestor() account is not an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c79e8791776e857b071508abe661f4ce8daf32ecc6a34eee68489085f017616",
                          "typeString": "literal_string \"Vesting.sol::removeInvestor() account is not an investor\""
                        }
                      ],
                      "id": 25777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5617:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5617:96:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25785,
                  "nodeType": "ExpressionStatement",
                  "src": "5617:96:16"
                },
                {
                  "assignments": [
                    25787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25787,
                      "mutability": "mutable",
                      "name": "idx",
                      "nameLocation": "5731:3:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25857,
                      "src": "5726:8:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25786,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5726:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25788,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5726:8:16"
                },
                {
                  "body": {
                    "id": 25813,
                    "nodeType": "Block",
                    "src": "5795:136:16",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 25805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 25800,
                                "name": "investorLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25552,
                                "src": "5814:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                                  "typeString": "struct Vesting.Investor storage ref[] storage ref"
                                }
                              },
                              "id": 25802,
                              "indexExpression": {
                                "id": 25801,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25790,
                                "src": "5830:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5814:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$25559_storage",
                                "typeString": "struct Vesting.Investor storage ref"
                              }
                            },
                            "id": 25803,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5833:7:16",
                            "memberName": "account",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25554,
                            "src": "5814:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 25804,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25762,
                            "src": "5844:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5814:38:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 25812,
                        "nodeType": "IfStatement",
                        "src": "5810:110:16",
                        "trueBody": {
                          "id": 25811,
                          "nodeType": "Block",
                          "src": "5854:66:16",
                          "statements": [
                            {
                              "expression": {
                                "id": 25808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 25806,
                                  "name": "idx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25787,
                                  "src": "5873:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 25807,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25790,
                                  "src": "5879:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5873:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 25809,
                              "nodeType": "ExpressionStatement",
                              "src": "5873:7:16"
                            },
                            {
                              "id": 25810,
                              "nodeType": "Break",
                              "src": "5899:5:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25793,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25790,
                      "src": "5762:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 25794,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "5766:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5782:6:16",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5766:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5762:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25814,
                  "initializationExpression": {
                    "assignments": [
                      25790
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25790,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5755:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 25814,
                        "src": "5750:6:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25789,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5750:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25792,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5759:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5750:10:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5790:3:16",
                      "subExpression": {
                        "id": 25797,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25790,
                        "src": "5790:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25799,
                    "nodeType": "ExpressionStatement",
                    "src": "5790:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "5745:186:16"
                },
                {
                  "assignments": [
                    25817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25817,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "5959:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25857,
                      "src": "5943:20:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$25559_memory_ptr",
                        "typeString": "struct Vesting.Investor"
                      },
                      "typeName": {
                        "id": 25816,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25815,
                          "name": "Investor",
                          "nameLocations": [
                            "5943:8:16"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25559,
                          "src": "5943:8:16"
                        },
                        "referencedDeclaration": 25559,
                        "src": "5943:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$25559_storage_ptr",
                          "typeString": "struct Vesting.Investor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25821,
                  "initialValue": {
                    "baseExpression": {
                      "id": 25818,
                      "name": "investorLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25552,
                      "src": "5966:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                        "typeString": "struct Vesting.Investor storage ref[] storage ref"
                      }
                    },
                    "id": 25820,
                    "indexExpression": {
                      "id": 25819,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25787,
                      "src": "5982:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5966:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$25559_storage",
                      "typeString": "struct Vesting.Investor storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5943:43:16"
                },
                {
                  "expression": {
                    "id": 25831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25822,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "5997:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25824,
                      "indexExpression": {
                        "id": 25823,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25787,
                        "src": "6013:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5997:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$25559_storage",
                        "typeString": "struct Vesting.Investor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 25825,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "6020:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25830,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 25826,
                            "name": "investorLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25552,
                            "src": "6036:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                              "typeString": "struct Vesting.Investor storage ref[] storage ref"
                            }
                          },
                          "id": 25827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6052:6:16",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6036:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 25828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6059:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6036:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6020:41:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$25559_storage",
                        "typeString": "struct Vesting.Investor storage ref"
                      }
                    },
                    "src": "5997:64:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$25559_storage",
                      "typeString": "struct Vesting.Investor storage ref"
                    }
                  },
                  "id": 25832,
                  "nodeType": "ExpressionStatement",
                  "src": "5997:64:16"
                },
                {
                  "expression": {
                    "id": 25840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25833,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "6072:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25838,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 25834,
                            "name": "investorLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25552,
                            "src": "6088:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                              "typeString": "struct Vesting.Investor storage ref[] storage ref"
                            }
                          },
                          "id": 25835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6104:6:16",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6088:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 25836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6111:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6088:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6072:41:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$25559_storage",
                        "typeString": "struct Vesting.Investor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25839,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25817,
                      "src": "6116:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$25559_memory_ptr",
                        "typeString": "struct Vesting.Investor memory"
                      }
                    },
                    "src": "6072:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$25559_storage",
                      "typeString": "struct Vesting.Investor storage ref"
                    }
                  },
                  "id": 25841,
                  "nodeType": "ExpressionStatement",
                  "src": "6072:48:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25842,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "6131:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6147:3:16",
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "6131:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Investor_$25559_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_Investor_$25559_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Vesting.Investor storage ref[] storage pointer)"
                      }
                    },
                    "id": 25845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6131:21:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25846,
                  "nodeType": "ExpressionStatement",
                  "src": "6131:21:16"
                },
                {
                  "expression": {
                    "id": 25851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25847,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25563,
                        "src": "6163:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25849,
                      "indexExpression": {
                        "id": 25848,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25762,
                        "src": "6173:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6163:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 25850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6185:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6163:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25852,
                  "nodeType": "ExpressionStatement",
                  "src": "6163:27:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25854,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25762,
                        "src": "6224:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25853,
                      "name": "InvestorRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25612,
                      "src": "6208:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6208:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25856,
                  "nodeType": "EmitStatement",
                  "src": "6203:30:16"
                }
              ]
            },
            "documentation": {
              "id": 25760,
              "nodeType": "StructuredDocumentation",
              "src": "5283:150:16",
              "text": "@notice This function removes an investor from the investorLibrary.\n @param _account the wallet address of investor that is being removed."
            },
            "functionSelector": "42714978",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25765,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25764,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5490:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26222,
                  "src": "5490:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5490:11:16"
              }
            ],
            "name": "removeInvestor",
            "nameLocation": "5448:14:16",
            "parameters": {
              "id": 25763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25762,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "5471:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25858,
                  "src": "5463:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5463:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5462:18:16"
            },
            "returnParameters": {
              "id": 25766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5502:0:16"
            },
            "scope": 26133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25883,
            "nodeType": "FunctionDefinition",
            "src": "6409:261:16",
            "nodes": [],
            "body": {
              "id": 25882,
              "nodeType": "Block",
              "src": "6455:215:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6474:15:16",
                        "subExpression": {
                          "id": 25865,
                          "name": "vestingEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25547,
                          "src": "6475:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657374696e6720697320616c726561647920656e61626c6564",
                        "id": 25867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6491:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b81e7806853eebb1dd20d036cf5def1e03a3259047e4c17a645085fd705441b0",
                          "typeString": "literal_string \"Vesting.sol::enableVesting() vesting is already enabled\""
                        },
                        "value": "Vesting.sol::enableVesting() vesting is already enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b81e7806853eebb1dd20d036cf5def1e03a3259047e4c17a645085fd705441b0",
                          "typeString": "literal_string \"Vesting.sol::enableVesting() vesting is already enabled\""
                        }
                      ],
                      "id": 25864,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6466:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6466:83:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25869,
                  "nodeType": "ExpressionStatement",
                  "src": "6466:83:16"
                },
                {
                  "expression": {
                    "id": 25872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25870,
                      "name": "vestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25547,
                      "src": "6562:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 25871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6579:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6562:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25873,
                  "nodeType": "ExpressionStatement",
                  "src": "6562:21:16"
                },
                {
                  "expression": {
                    "id": 25877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25874,
                      "name": "vestingStartUnix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25544,
                      "src": "6594:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 25875,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6613:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 25876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6619:9:16",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6613:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6594:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25878,
                  "nodeType": "ExpressionStatement",
                  "src": "6594:34:16"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25879,
                      "name": "VestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25624,
                      "src": "6646:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 25880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6646:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25881,
                  "nodeType": "EmitStatement",
                  "src": "6641:21:16"
                }
              ]
            },
            "documentation": {
              "id": 25859,
              "nodeType": "StructuredDocumentation",
              "src": "6249:154:16",
              "text": "@notice This function starts the vesting period.\n @dev will set start time to vestingStartUnix.\n      will set vestingEnabled to true."
            },
            "functionSelector": "5b904cb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25862,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25861,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6443:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26222,
                  "src": "6443:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6443:11:16"
              }
            ],
            "name": "enableVesting",
            "nameLocation": "6418:13:16",
            "parameters": {
              "id": 25860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6431:2:16"
            },
            "returnParameters": {
              "id": 25863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6455:0:16"
            },
            "scope": 26133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25951,
            "nodeType": "FunctionDefinition",
            "src": "6857:636:16",
            "nodes": [],
            "body": {
              "id": 25950,
              "nodeType": "Block",
              "src": "6916:577:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25892,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25886,
                          "src": "6935:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 25893,
                          "name": "proveToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25541,
                          "src": "6944:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6935:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a7769746864726177457263323028292063616e6e6f74207769746864726177202450524f564520746f6b656e",
                        "id": 25895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6956:59:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75db5b4aa55e9f0b03e4a8c070f8f66290a98338aaae1576bb806eef1f0080d2",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() cannot withdraw $PROVE token\""
                        },
                        "value": "Vesting.sol::withdrawErc20() cannot withdraw $PROVE token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75db5b4aa55e9f0b03e4a8c070f8f66290a98338aaae1576bb806eef1f0080d2",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() cannot withdraw $PROVE token\""
                        }
                      ],
                      "id": 25891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6927:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6927:89:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25897,
                  "nodeType": "ExpressionStatement",
                  "src": "6927:89:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25899,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25886,
                          "src": "7035:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7052:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7044:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25900,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7044:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7044:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7035:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b656e2063616e6e6f742062652061646472657373283029",
                        "id": 25905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7056:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29e76f784f984a6a07713ea53163c68fa39fa9a65b7a983cda7f9b66495bef31",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() token cannot be address(0)\""
                        },
                        "value": "Vesting.sol::withdrawErc20() token cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29e76f784f984a6a07713ea53163c68fa39fa9a65b7a983cda7f9b66495bef31",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() token cannot be address(0)\""
                        }
                      ],
                      "id": 25898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7027:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7027:87:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25907,
                  "nodeType": "ExpressionStatement",
                  "src": "7027:87:16"
                },
                {
                  "assignments": [
                    25909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25909,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "7135:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25950,
                      "src": "7127:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25908,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7127:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25919,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25916,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7177:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vesting_$26133",
                              "typeString": "contract Vesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vesting_$26133",
                              "typeString": "contract Vesting"
                            }
                          ],
                          "id": 25915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7169:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25914,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7169:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7169:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25911,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25886,
                            "src": "7152:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25910,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26441,
                          "src": "7145:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$26441_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7145:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26441",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7159:9:16",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26380,
                      "src": "7145:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7145:38:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7127:56:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25921,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25909,
                          "src": "7202:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7212:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7202:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a77697468647261774572633230282920696e73756666696369656e7420746f6b656e2062616c616e6365",
                        "id": 25924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7215:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85892f03ec8e97515a01b84c9239dbced7e62306353ae22f1c016c668c87f26e",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() insufficient token balance\""
                        },
                        "value": "Vesting.sol::withdrawErc20() insufficient token balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85892f03ec8e97515a01b84c9239dbced7e62306353ae22f1c016c668c87f26e",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() insufficient token balance\""
                        }
                      ],
                      "id": 25920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7194:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7194:79:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25926,
                  "nodeType": "ExpressionStatement",
                  "src": "7194:79:16"
                },
                {
                  "assignments": [
                    25928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25928,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7291:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25950,
                      "src": "7286:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25927,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7286:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25937,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 25933,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26208,
                          "src": "7324:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 25934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7324:7:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25935,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25909,
                        "src": "7333:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25930,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25886,
                            "src": "7308:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25929,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26441,
                          "src": "7301:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$26441_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7301:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26441",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7315:8:16",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26390,
                      "src": "7301:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7301:40:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7286:55:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25939,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25928,
                        "src": "7360:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a776974686472617745726332302829207472616e7366657220756e7375636365737366756c",
                        "id": 25940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7369:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15e8b103591986e2799c2dc971bdc5cdfd784ab9acde7b421a1ef4ce4227abca",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() transfer unsuccessful\""
                        },
                        "value": "Vesting.sol::withdrawErc20() transfer unsuccessful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15e8b103591986e2799c2dc971bdc5cdfd784ab9acde7b421a1ef4ce4227abca",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() transfer unsuccessful\""
                        }
                      ],
                      "id": 25938,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7352:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7352:70:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25942,
                  "nodeType": "ExpressionStatement",
                  "src": "7352:70:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25944,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25886,
                        "src": "7461:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25945,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25909,
                        "src": "7468:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 25946,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26208,
                          "src": "7477:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 25947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7477:7:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25943,
                      "name": "Erc20TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25621,
                      "src": "7440:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 25948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7440:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25949,
                  "nodeType": "EmitStatement",
                  "src": "7435:50:16"
                }
              ]
            },
            "documentation": {
              "id": 25884,
              "nodeType": "StructuredDocumentation",
              "src": "6678:173:16",
              "text": "@notice Is used to remove ERC20 tokens from the contract.\n @dev token address cannot be $PROVE\n @param token contract address of token we wish to remove."
            },
            "functionSelector": "c7e42b1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25889,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25888,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6904:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26222,
                  "src": "6904:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6904:11:16"
              }
            ],
            "name": "withdrawErc20",
            "nameLocation": "6866:13:16",
            "parameters": {
              "id": 25887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25886,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6888:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25951,
                  "src": "6880:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6880:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6879:15:16"
            },
            "returnParameters": {
              "id": 25890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6916:0:16"
            },
            "scope": 26133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26070,
            "nodeType": "FunctionDefinition",
            "src": "7738:1110:16",
            "nodes": [],
            "body": {
              "id": 26069,
              "nodeType": "Block",
              "src": "7812:1036:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25960,
                        "name": "vestingEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25547,
                        "src": "7904:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a676574416d6f756e74546f436c61696d28292076657374696e67206973206e6f7420656e61626c6564",
                        "id": 25961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7920:56:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f2820cb96b1200adf963153ae0e42feed0067dddf160b581aada884b20f023e",
                          "typeString": "literal_string \"Vesting.sol::getAmountToClaim() vesting is not enabled\""
                        },
                        "value": "Vesting.sol::getAmountToClaim() vesting is not enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f2820cb96b1200adf963153ae0e42feed0067dddf160b581aada884b20f023e",
                          "typeString": "literal_string \"Vesting.sol::getAmountToClaim() vesting is not enabled\""
                        }
                      ],
                      "id": 25959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7896:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7896:81:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25963,
                  "nodeType": "ExpressionStatement",
                  "src": "7896:81:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 25965,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25563,
                            "src": "7996:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 25967,
                          "indexExpression": {
                            "id": 25966,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25954,
                            "src": "8006:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7996:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 25968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8019:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7996:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a676574416d6f756e74546f436c61696d2829206163636f756e74206973206e6f7420616e20696e766573746f72",
                        "id": 25970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8025:60:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1618e5ed47195b0af6dd7cf48d331381813594f4d9e9385129565498456180a",
                          "typeString": "literal_string \"Vesting.sol::getAmountToClaim() account is not an investor\""
                        },
                        "value": "Vesting.sol::getAmountToClaim() account is not an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d1618e5ed47195b0af6dd7cf48d331381813594f4d9e9385129565498456180a",
                          "typeString": "literal_string \"Vesting.sol::getAmountToClaim() account is not an investor\""
                        }
                      ],
                      "id": 25964,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7988:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7988:98:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25972,
                  "nodeType": "ExpressionStatement",
                  "src": "7988:98:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25974,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25954,
                          "src": "8105:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8125:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8117:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25975,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8117:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8117:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8105:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a676574416d6f756e74546f436c61696d2829206163636f756e742069732061646472657373283029",
                        "id": 25980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8129:55:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cb5570d7b40dc0e772abe0a1a5f2f1dd74cf74b441a0d0bcc895610ca4f289f",
                          "typeString": "literal_string \"Vesting.sol::getAmountToClaim() account is address(0)\""
                        },
                        "value": "Vesting.sol::getAmountToClaim() account is address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cb5570d7b40dc0e772abe0a1a5f2f1dd74cf74b441a0d0bcc895610ca4f289f",
                          "typeString": "literal_string \"Vesting.sol::getAmountToClaim() account is address(0)\""
                        }
                      ],
                      "id": 25973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8097:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8097:88:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25982,
                  "nodeType": "ExpressionStatement",
                  "src": "8097:88:16"
                },
                {
                  "assignments": [
                    25984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25984,
                      "mutability": "mutable",
                      "name": "idx",
                      "nameLocation": "8203:3:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 26069,
                      "src": "8198:8:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25983,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8198:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25985,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8198:8:16"
                },
                {
                  "body": {
                    "id": 26010,
                    "nodeType": "Block",
                    "src": "8267:136:16",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 26002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 25997,
                                "name": "investorLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25552,
                                "src": "8286:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                                  "typeString": "struct Vesting.Investor storage ref[] storage ref"
                                }
                              },
                              "id": 25999,
                              "indexExpression": {
                                "id": 25998,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25987,
                                "src": "8302:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8286:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$25559_storage",
                                "typeString": "struct Vesting.Investor storage ref"
                              }
                            },
                            "id": 26000,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8305:7:16",
                            "memberName": "account",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25554,
                            "src": "8286:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 26001,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25954,
                            "src": "8316:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8286:38:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 26009,
                        "nodeType": "IfStatement",
                        "src": "8282:110:16",
                        "trueBody": {
                          "id": 26008,
                          "nodeType": "Block",
                          "src": "8326:66:16",
                          "statements": [
                            {
                              "expression": {
                                "id": 26005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 26003,
                                  "name": "idx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25984,
                                  "src": "8345:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 26004,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25987,
                                  "src": "8351:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8345:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 26006,
                              "nodeType": "ExpressionStatement",
                              "src": "8345:7:16"
                            },
                            {
                              "id": 26007,
                              "nodeType": "Break",
                              "src": "8371:5:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25990,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25987,
                      "src": "8234:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 25991,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "8238:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8254:6:16",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8238:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8234:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26011,
                  "initializationExpression": {
                    "assignments": [
                      25987
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25987,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8227:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 26011,
                        "src": "8222:6:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25986,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8222:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25989,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8231:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8222:10:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8262:3:16",
                      "subExpression": {
                        "id": 25994,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25987,
                        "src": "8262:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25996,
                    "nodeType": "ExpressionStatement",
                    "src": "8262:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "8217:186:16"
                },
                {
                  "assignments": [
                    26013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26013,
                      "mutability": "mutable",
                      "name": "tokensToVest",
                      "nameLocation": "8420:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 26069,
                      "src": "8415:17:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26012,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8415:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26018,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 26014,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "8435:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 26016,
                      "indexExpression": {
                        "id": 26015,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25984,
                        "src": "8451:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8435:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$25559_storage",
                        "typeString": "struct Vesting.Investor storage ref"
                      }
                    },
                    "id": 26017,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8456:12:16",
                    "memberName": "tokensToVest",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 25556,
                    "src": "8435:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8415:53:16"
                },
                {
                  "assignments": [
                    26020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26020,
                      "mutability": "mutable",
                      "name": "monthsPassed",
                      "nameLocation": "8484:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 26069,
                      "src": "8479:17:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26019,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8479:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26029,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 26024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 26021,
                                "name": "vestingStartUnix",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25544,
                                "src": "8502:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 26022,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8521:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 26023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8527:9:16",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8521:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8502:34:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 26025,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8501:36:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 26026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8540:7:16",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2419200_by_1",
                            "typeString": "int_const 2419200"
                          },
                          "value": "4"
                        },
                        "src": "8501:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 26028,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8499:50:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8479:70:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26030,
                      "name": "monthsPassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26020,
                      "src": "8565:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3131",
                      "id": 26031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8580:2:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_11_by_1",
                        "typeString": "int_const 11"
                      },
                      "value": "11"
                    },
                    "src": "8565:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26038,
                  "nodeType": "IfStatement",
                  "src": "8561:67:16",
                  "trueBody": {
                    "id": 26037,
                    "nodeType": "Block",
                    "src": "8584:44:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 26035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 26033,
                            "name": "monthsPassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26020,
                            "src": "8599:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3131",
                            "id": 26034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8614:2:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_11_by_1",
                              "typeString": "int_const 11"
                            },
                            "value": "11"
                          },
                          "src": "8599:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 26036,
                        "nodeType": "ExpressionStatement",
                        "src": "8599:17:16"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    26040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26040,
                      "mutability": "mutable",
                      "name": "amountToClaim",
                      "nameLocation": "8643:13:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 26069,
                      "src": "8638:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26039,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8638:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26057,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 26045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 26043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 26041,
                              "name": "tokensToVest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26013,
                              "src": "8660:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3132",
                              "id": 26042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8675:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_12_by_1",
                                "typeString": "int_const 12"
                              },
                              "value": "12"
                            },
                            "src": "8660:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 26044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8680:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "8660:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 26046,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8659:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 26054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 26047,
                            "name": "monthsPassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26020,
                            "src": "8689:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 26052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 26050,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 26048,
                                    "name": "tokensToVest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 26013,
                                    "src": "8705:12:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "38",
                                    "id": 26049,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8720:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_8_by_1",
                                      "typeString": "int_const 8"
                                    },
                                    "value": "8"
                                  },
                                  "src": "8705:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 26051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8724:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "8705:22:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 26053,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8704:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8689:39:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 26055,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8687:43:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8659:71:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8638:92:16"
                },
                {
                  "expression": {
                    "id": 26065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26058,
                      "name": "amountToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26040,
                      "src": "8741:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 26064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 26059,
                        "name": "amountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26040,
                        "src": "8757:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 26060,
                            "name": "investorLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25552,
                            "src": "8773:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                              "typeString": "struct Vesting.Investor storage ref[] storage ref"
                            }
                          },
                          "id": 26062,
                          "indexExpression": {
                            "id": 26061,
                            "name": "idx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25984,
                            "src": "8789:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8773:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$25559_storage",
                            "typeString": "struct Vesting.Investor storage ref"
                          }
                        },
                        "id": 26063,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8794:13:16",
                        "memberName": "tokensClaimed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25558,
                        "src": "8773:34:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8757:50:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8741:66:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26066,
                  "nodeType": "ExpressionStatement",
                  "src": "8741:66:16"
                },
                {
                  "expression": {
                    "id": 26067,
                    "name": "amountToClaim",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26040,
                    "src": "8827:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 25958,
                  "id": 26068,
                  "nodeType": "Return",
                  "src": "8820:20:16"
                }
              ]
            },
            "documentation": {
              "id": 25952,
              "nodeType": "StructuredDocumentation",
              "src": "7544:188:16",
              "text": "@notice This function returns the amount of tokens to claim for a specified investor.\n @param _account  address of investor.\n @return uint256 amount of tokens to claim."
            },
            "functionSelector": "0bca8bcd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountToClaim",
            "nameLocation": "7747:16:16",
            "parameters": {
              "id": 25955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25954,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "7772:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 26070,
                  "src": "7764:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7764:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7763:18:16"
            },
            "returnParameters": {
              "id": 25958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25957,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26070,
                  "src": "7803:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7803:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7802:9:16"
            },
            "scope": 26133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26122,
            "nodeType": "FunctionDefinition",
            "src": "9049:463:16",
            "nodes": [],
            "body": {
              "id": 26121,
              "nodeType": "Block",
              "src": "9123:389:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 26083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 26079,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25563,
                            "src": "9142:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 26081,
                          "indexExpression": {
                            "id": 26080,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26073,
                            "src": "9152:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9142:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 26082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9165:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "9142:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a676574416d6f756e74436c61696d65642829206163636f756e74206973206e6f7420616e20696e766573746f72",
                        "id": 26084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9171:60:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1fd27019c8d5e8617d4a80e7c407716019805de23bdd0960603d23b65f1ca6e8",
                          "typeString": "literal_string \"Vesting.sol::getAmountClaimed() account is not an investor\""
                        },
                        "value": "Vesting.sol::getAmountClaimed() account is not an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1fd27019c8d5e8617d4a80e7c407716019805de23bdd0960603d23b65f1ca6e8",
                          "typeString": "literal_string \"Vesting.sol::getAmountClaimed() account is not an investor\""
                        }
                      ],
                      "id": 26078,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9134:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9134:98:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26086,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:98:16"
                },
                {
                  "assignments": [
                    26088
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26088,
                      "mutability": "mutable",
                      "name": "idx",
                      "nameLocation": "9250:3:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 26121,
                      "src": "9245:8:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26087,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9245:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26089,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9245:8:16"
                },
                {
                  "body": {
                    "id": 26114,
                    "nodeType": "Block",
                    "src": "9314:137:16",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 26106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 26101,
                                "name": "investorLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25552,
                                "src": "9333:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                                  "typeString": "struct Vesting.Investor storage ref[] storage ref"
                                }
                              },
                              "id": 26103,
                              "indexExpression": {
                                "id": 26102,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26091,
                                "src": "9349:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9333:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$25559_storage",
                                "typeString": "struct Vesting.Investor storage ref"
                              }
                            },
                            "id": 26104,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9352:7:16",
                            "memberName": "account",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25554,
                            "src": "9333:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 26105,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26073,
                            "src": "9363:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9333:38:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 26113,
                        "nodeType": "IfStatement",
                        "src": "9329:111:16",
                        "trueBody": {
                          "id": 26112,
                          "nodeType": "Block",
                          "src": "9373:67:16",
                          "statements": [
                            {
                              "expression": {
                                "id": 26109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 26107,
                                  "name": "idx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26088,
                                  "src": "9392:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 26108,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26091,
                                  "src": "9398:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9392:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 26110,
                              "nodeType": "ExpressionStatement",
                              "src": "9392:7:16"
                            },
                            {
                              "id": 26111,
                              "nodeType": "Break",
                              "src": "9419:5:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26094,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26091,
                      "src": "9281:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 26095,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "9285:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 26096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9301:6:16",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9285:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9281:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26115,
                  "initializationExpression": {
                    "assignments": [
                      26091
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 26091,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9274:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 26115,
                        "src": "9269:6:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 26090,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9269:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 26093,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 26092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9278:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9269:10:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 26099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9309:3:16",
                      "subExpression": {
                        "id": 26098,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26091,
                        "src": "9309:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 26100,
                    "nodeType": "ExpressionStatement",
                    "src": "9309:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "9264:187:16"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 26116,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "9470:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 26118,
                      "indexExpression": {
                        "id": 26117,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26088,
                        "src": "9486:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9470:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$25559_storage",
                        "typeString": "struct Vesting.Investor storage ref"
                      }
                    },
                    "id": 26119,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9491:13:16",
                    "memberName": "tokensClaimed",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 25558,
                    "src": "9470:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 26077,
                  "id": 26120,
                  "nodeType": "Return",
                  "src": "9463:41:16"
                }
              ]
            },
            "documentation": {
              "id": 26071,
              "nodeType": "StructuredDocumentation",
              "src": "8856:187:16",
              "text": "@notice This function returns the amount of tokens an investor HAS claimed.\n @param _account address of investor.\n @return uint256 amount of tokens claimed by account."
            },
            "functionSelector": "d36862e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountClaimed",
            "nameLocation": "9058:16:16",
            "parameters": {
              "id": 26074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26073,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "9083:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 26122,
                  "src": "9075:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9075:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9074:18:16"
            },
            "returnParameters": {
              "id": 26077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26076,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26122,
                  "src": "9114:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9114:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9113:9:16"
            },
            "scope": 26133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26132,
            "nodeType": "FunctionDefinition",
            "src": "9520:111:16",
            "nodes": [],
            "body": {
              "id": 26131,
              "nodeType": "Block",
              "src": "9590:41:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26129,
                    "name": "investorLibrary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25552,
                    "src": "9608:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage",
                      "typeString": "struct Vesting.Investor storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 26128,
                  "id": 26130,
                  "nodeType": "Return",
                  "src": "9601:22:16"
                }
              ]
            },
            "functionSelector": "50ad827a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInvestorLibrary",
            "nameLocation": "9529:18:16",
            "parameters": {
              "id": 26123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9547:2:16"
            },
            "returnParameters": {
              "id": 26128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26127,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26132,
                  "src": "9571:17:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Investor_$25559_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Vesting.Investor[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26125,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 26124,
                        "name": "Investor",
                        "nameLocations": [
                          "9571:8:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25559,
                        "src": "9571:8:16"
                      },
                      "referencedDeclaration": 25559,
                      "src": "9571:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$25559_storage_ptr",
                        "typeString": "struct Vesting.Investor"
                      }
                    },
                    "id": 26126,
                    "nodeType": "ArrayTypeName",
                    "src": "9571:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Investor_$25559_storage_$dyn_storage_ptr",
                      "typeString": "struct Vesting.Investor[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9570:19:16"
            },
            "scope": 26133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25538,
              "name": "Ownable",
              "nameLocations": [
                "514:7:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26307,
              "src": "514:7:16"
            },
            "id": 25539,
            "nodeType": "InheritanceSpecifier",
            "src": "514:7:16"
          }
        ],
        "canonicalName": "Vesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25537,
          "nodeType": "StructuredDocumentation",
          "src": "231:263:16",
          "text": "@notice This contract will hold $PROVE tokens in escrow\n         This contract will facilitate the private sale investor vesting tokens\n         This contract will follow a strict vesting schedule\n         This contract will follow a claim model"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          26133,
          26307,
          26159
        ],
        "name": "Vesting",
        "nameLocation": "503:7:16",
        "scope": 26134,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 16
}