{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proveToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "Erc20TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountClaimed",
          "type": "uint256"
        }
      ],
      "name": "ProveClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "VestingEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "investorAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokensToVest",
          "type": "uint256"
        }
      ],
      "name": "addInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAmountClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAmountToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInvestorLibrary",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokensToVest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensClaimed",
              "type": "uint256"
            }
          ],
          "internalType": "struct Vesting.Investor[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proveToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartUnix",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b506040516200128e3803806200128e8339810160408190526200003491620001b2565b600080546001600160a01b031916339081178255604051909182916000805160206200126e833981519152908290a3506001600160a01b0382166080526200007c8162000084565b5050620001ea565b6000546001600160a01b03163314620000e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166200014b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620000db565b600080546040516001600160a01b03808516939216916000805160206200126e83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b0381168114620001ad57600080fd5b919050565b60008060408385031215620001c657600080fd5b620001d18362000195565b9150620001e16020840162000195565b90509250929050565b6080516110616200020d600039600081816101b301526106e901526110616000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806385d4cad311610097578063dd46706411610066578063dd46706414610211578063ec20b45714610224578063f02c6d8f14610237578063f2fde38b1461024057600080fd5b806385d4cad3146101ae5780638da5cb5b146101ed578063c7e42b1b146101fe578063d36862e81461010557600080fd5b80635b904cb7116100d35780635b904cb71461015e5780636f7bc9be14610166578063715018a6146101995780637f87bbd6146101a157600080fd5b80630bca8bcd14610105578063427149781461012c5780634e71d92d1461014157806350ad827a14610149575b600080fd5b610119610113366004610e96565b50600090565b6040519081526020015b60405180910390f35b61013f61013a366004610e96565b610253565b005b61013f61045c565b6101516104e8565b6040516101239190610eb8565b61013f61056a565b610189610174366004610e96565b60066020526000908152604090205460ff1681565b6040519015158152602001610123565b61013f610649565b6004546101899060ff1681565b6101d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610123565b6000546001600160a01b03166101d5565b61013f61020c366004610e96565b6106bd565b61013f61021f366004610f1a565b610a4f565b61013f610232366004610f33565b610ae6565b61011960035481565b61013f61024e366004610e96565b610d90565b6000546001600160a01b031633146102865760405162461bcd60e51b815260040161027d90610f5d565b60405180910390fd5b6001600160a01b0381166103025760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a72656d6f7665496e766573746f72282920616360448201527f636f756e742063616e6e6f742062652061646472657373283029000000000000606482015260840161027d565b6001600160a01b03811660009081526006602052604090205460ff1615156001146103955760405162461bcd60e51b815260206004820152603860248201527f56657374696e672e736f6c3a3a72656d6f7665496e766573746f72282920616360448201527f636f756e74206973206e6f7420616e20696e766573746f720000000000000000606482015260840161027d565b6000805b6005548110156103f957826001600160a01b0316600582815481106103c0576103c0610f92565b60009182526020909120600390910201546001600160a01b0316036103e7578091506103f9565b806103f181610fbe565b915050610399565b506005818154811061040d5761040d610f92565b60009182526020808320600390920290910180546001600160a01b0319168155600181018390556002018290556001600160a01b0393909316815260069092525060409020805460ff19169055565b3360009081526006602052604090205460ff1615156001146104e65760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a6f6e6c79496e766573746f722829206d73672e60448201527f73656e646572206d75737420626520616e20696e766573746f72000000000000606482015260840161027d565b565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610561576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015491830191909152908352909201910161050c565b50505050905090565b6000546001600160a01b031633146105945760405162461bcd60e51b815260040161027d90610f5d565b60045460ff161561060d5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657360448201527f74696e6720697320616c726561647920656e61626c6564000000000000000000606482015260840161027d565b6004805460ff19166001179055426003556040517ff78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa390600090a1565b6000546001600160a01b031633146106735760405162461bcd60e51b815260040161027d90610f5d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146106e75760405162461bcd60e51b815260040161027d90610f5d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03160361078e5760405162461bcd60e51b815260206004820152603960248201527f56657374696e672e736f6c3a3a7769746864726177457263323028292063616e60448201527f6e6f74207769746864726177202450524f564520746f6b656e00000000000000606482015260840161027d565b6001600160a01b03811661080a5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b60448201527f656e2063616e6e6f742062652061646472657373283029000000000000000000606482015260840161027d565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108759190610fd7565b9050600081116108ed5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920696e7360448201527f756666696369656e7420746f6b656e2062616c616e6365000000000000000000606482015260840161027d565b6000826001600160a01b031663a9059cbb6109106000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af115801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190610ff0565b9050806109eb5760405162461bcd60e51b815260206004820152603260248201527f56657374696e672e736f6c3a3a776974686472617745726332302829207472616044820152711b9cd9995c881d5b9cdd58d8d95cdcd99d5b60721b606482015260840161027d565b7f3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f8383610a206000546001600160a01b031690565b604080516001600160a01b039485168152602081019390935292168183015290519081900360600190a1505050565b6000546001600160a01b03163314610a795760405162461bcd60e51b815260040161027d90610f5d565b60008054600180546001600160a01b03199081166001600160a01b03841617909155169055610aa88142611012565b600255600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a350565b6000546001600160a01b03163314610b105760405162461bcd60e51b815260040161027d90610f5d565b6001600160a01b03821660009081526006602052604090205460ff1615610b965760405162461bcd60e51b815260206004820152603460248201527f56657374696e672e736f6c3a3a616464496e766573746f72282920696e7665736044820152731d1bdc881a5cc8185b1c9958591e48185919195960621b606482015260840161027d565b6001600160a01b038216610c125760405162461bcd60e51b815260206004820152603860248201527f56657374696e672e736f6c3a3a616464496e766573746f722829205f6163636f60448201527f756e742063616e6e6f7420626520616464726573732830290000000000000000606482015260840161027d565b60008111610c805760405162461bcd60e51b815260206004820152603560248201527f56657374696e672e736f6c3a3a616464496e766573746f722829205f746f6b6560448201527406e73546f56657374206d757374206265206774203605c1b606482015260840161027d565b6001600160a01b0382811660008181526006602090815260408083208054600160ff199091168117909155815160608101835285815280840188815281840186815260058054948501815590965290517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600390930292830180546001600160a01b031916919098161790965594517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db186015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db290940193909355519081527f2c385ad016af1d5b8f4eefb8aef02929aa692e7f6d846488519f2513bd7170e0910160405180910390a15050565b6000546001600160a01b03163314610dba5760405162461bcd60e51b815260040161027d90610f5d565b6001600160a01b038116610e1f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161027d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610e9157600080fd5b919050565b600060208284031215610ea857600080fd5b610eb182610e7a565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610f0d57815180516001600160a01b0316855286810151878601528501518585015260609093019290850190600101610ed5565b5091979650505050505050565b600060208284031215610f2c57600080fd5b5035919050565b60008060408385031215610f4657600080fd5b610f4f83610e7a565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610fd057610fd0610fa8565b5060010190565b600060208284031215610fe957600080fd5b5051919050565b60006020828403121561100257600080fd5b81518015158114610eb157600080fd5b8082018082111561102557611025610fa8565b9291505056fea26469706673582212203160cfa619ce504be5c7f912f3be6dcbbfde6c704213d76bfc7b78b0b868787c64736f6c634300081100338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
    "sourceMap": "494:6479:14:-:0;;;1724:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;955:17:16;998:18;;-1:-1:-1;;;;;;998:18:16;699:10:15;998:18:16;;;;;1032:43;;699:10:15;;;;-1:-1:-1;;;;;;;;;;;1032:43:16;955:17;;1032:43;-1:-1:-1;;;;;;1784:24:14;;;;1819:25;1837:6;1819:17;:25::i;:::-;1724:128;;494:6479;;2118:244:16;1210:7;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;696:2:21;1376:68:16;;;678:21:21;;;715:18;;;708:30;774:34;754:18;;;747:62;826:18;;1376:68:16;;;;;;;;;-1:-1:-1;;;;;2207:22:16;::::1;2199:73;;;::::0;-1:-1:-1;;;2199:73:16;;1057:2:21;2199:73:16::1;::::0;::::1;1039:21:21::0;1096:2;1076:18;;;1069:30;1135:34;1115:18;;;1108:62;-1:-1:-1;;;1186:18:21;;;1179:36;1232:19;;2199:73:16::1;855:402:21::0;2199:73:16::1;2309:6;::::0;;2288:38:::1;::::0;-1:-1:-1;;;;;2288:38:16;;::::1;::::0;2309:6;::::1;::::0;-1:-1:-1;;;;;;;;;;;2288:38:16;::::1;2337:6;:17:::0;;-1:-1:-1;;;;;;2337:17:16::1;-1:-1:-1::0;;;;;2337:17:16;;;::::1;::::0;;;::::1;::::0;;2118:244::o;14:177:21:-;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;855:402::-;494:6479:14;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806385d4cad311610097578063dd46706411610066578063dd46706414610211578063ec20b45714610224578063f02c6d8f14610237578063f2fde38b1461024057600080fd5b806385d4cad3146101ae5780638da5cb5b146101ed578063c7e42b1b146101fe578063d36862e81461010557600080fd5b80635b904cb7116100d35780635b904cb71461015e5780636f7bc9be14610166578063715018a6146101995780637f87bbd6146101a157600080fd5b80630bca8bcd14610105578063427149781461012c5780634e71d92d1461014157806350ad827a14610149575b600080fd5b610119610113366004610e96565b50600090565b6040519081526020015b60405180910390f35b61013f61013a366004610e96565b610253565b005b61013f61045c565b6101516104e8565b6040516101239190610eb8565b61013f61056a565b610189610174366004610e96565b60066020526000908152604090205460ff1681565b6040519015158152602001610123565b61013f610649565b6004546101899060ff1681565b6101d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610123565b6000546001600160a01b03166101d5565b61013f61020c366004610e96565b6106bd565b61013f61021f366004610f1a565b610a4f565b61013f610232366004610f33565b610ae6565b61011960035481565b61013f61024e366004610e96565b610d90565b6000546001600160a01b031633146102865760405162461bcd60e51b815260040161027d90610f5d565b60405180910390fd5b6001600160a01b0381166103025760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a72656d6f7665496e766573746f72282920616360448201527f636f756e742063616e6e6f742062652061646472657373283029000000000000606482015260840161027d565b6001600160a01b03811660009081526006602052604090205460ff1615156001146103955760405162461bcd60e51b815260206004820152603860248201527f56657374696e672e736f6c3a3a72656d6f7665496e766573746f72282920616360448201527f636f756e74206973206e6f7420616e20696e766573746f720000000000000000606482015260840161027d565b6000805b6005548110156103f957826001600160a01b0316600582815481106103c0576103c0610f92565b60009182526020909120600390910201546001600160a01b0316036103e7578091506103f9565b806103f181610fbe565b915050610399565b506005818154811061040d5761040d610f92565b60009182526020808320600390920290910180546001600160a01b0319168155600181018390556002018290556001600160a01b0393909316815260069092525060409020805460ff19169055565b3360009081526006602052604090205460ff1615156001146104e65760405162461bcd60e51b815260206004820152603a60248201527f56657374696e672e736f6c3a3a6f6e6c79496e766573746f722829206d73672e60448201527f73656e646572206d75737420626520616e20696e766573746f72000000000000606482015260840161027d565b565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610561576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015491830191909152908352909201910161050c565b50505050905090565b6000546001600160a01b031633146105945760405162461bcd60e51b815260040161027d90610f5d565b60045460ff161561060d5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657360448201527f74696e6720697320616c726561647920656e61626c6564000000000000000000606482015260840161027d565b6004805460ff19166001179055426003556040517ff78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa390600090a1565b6000546001600160a01b031633146106735760405162461bcd60e51b815260040161027d90610f5d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146106e75760405162461bcd60e51b815260040161027d90610f5d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03160361078e5760405162461bcd60e51b815260206004820152603960248201527f56657374696e672e736f6c3a3a7769746864726177457263323028292063616e60448201527f6e6f74207769746864726177202450524f564520746f6b656e00000000000000606482015260840161027d565b6001600160a01b03811661080a5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b60448201527f656e2063616e6e6f742062652061646472657373283029000000000000000000606482015260840161027d565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108759190610fd7565b9050600081116108ed5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920696e7360448201527f756666696369656e7420746f6b656e2062616c616e6365000000000000000000606482015260840161027d565b6000826001600160a01b031663a9059cbb6109106000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af115801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190610ff0565b9050806109eb5760405162461bcd60e51b815260206004820152603260248201527f56657374696e672e736f6c3a3a776974686472617745726332302829207472616044820152711b9cd9995c881d5b9cdd58d8d95cdcd99d5b60721b606482015260840161027d565b7f3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f8383610a206000546001600160a01b031690565b604080516001600160a01b039485168152602081019390935292168183015290519081900360600190a1505050565b6000546001600160a01b03163314610a795760405162461bcd60e51b815260040161027d90610f5d565b60008054600180546001600160a01b03199081166001600160a01b03841617909155169055610aa88142611012565b600255600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a350565b6000546001600160a01b03163314610b105760405162461bcd60e51b815260040161027d90610f5d565b6001600160a01b03821660009081526006602052604090205460ff1615610b965760405162461bcd60e51b815260206004820152603460248201527f56657374696e672e736f6c3a3a616464496e766573746f72282920696e7665736044820152731d1bdc881a5cc8185b1c9958591e48185919195960621b606482015260840161027d565b6001600160a01b038216610c125760405162461bcd60e51b815260206004820152603860248201527f56657374696e672e736f6c3a3a616464496e766573746f722829205f6163636f60448201527f756e742063616e6e6f7420626520616464726573732830290000000000000000606482015260840161027d565b60008111610c805760405162461bcd60e51b815260206004820152603560248201527f56657374696e672e736f6c3a3a616464496e766573746f722829205f746f6b6560448201527406e73546f56657374206d757374206265206774203605c1b606482015260840161027d565b6001600160a01b0382811660008181526006602090815260408083208054600160ff199091168117909155815160608101835285815280840188815281840186815260058054948501815590965290517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600390930292830180546001600160a01b031916919098161790965594517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db186015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db290940193909355519081527f2c385ad016af1d5b8f4eefb8aef02929aa692e7f6d846488519f2513bd7170e0910160405180910390a15050565b6000546001600160a01b03163314610dba5760405162461bcd60e51b815260040161027d90610f5d565b6001600160a01b038116610e1f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161027d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610e9157600080fd5b919050565b600060208284031215610ea857600080fd5b610eb182610e7a565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610f0d57815180516001600160a01b0316855286810151878601528501518585015260609093019290850190600101610ed5565b5091979650505050505050565b600060208284031215610f2c57600080fd5b5035919050565b60008060408385031215610f4657600080fd5b610f4f83610e7a565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610fd057610fd0610fa8565b5060010190565b600060208284031215610fe957600080fd5b5051919050565b60006020828403121561100257600080fd5b81518015158114610eb157600080fd5b8082018082111561102557611025610fa8565b9291505056fea26469706673582212203160cfa619ce504be5c7f912f3be6dcbbfde6c704213d76bfc7b78b0b868787c64736f6c63430008110033",
    "sourceMap": "494:6479:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6499:75;;;;;;:::i;:::-;-1:-1:-1;6563:7:14;;6499:75;;;;529:25:21;;;517:2;502:18;6499:75:14;;;;;;;;4424:579;;;;;;:::i;:::-;;:::i;:::-;;3283:43;;;:::i;6857:111::-;;;:::i;:::-;;;;;;;:::i;5171:261::-;;;:::i;1292:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1608:14:21;;1601:22;1583:41;;1571:2;1556:18;1292:41:14;1443:187:21;1815:148:16;;;:::i;781:26:14:-;;;;;;;;;605:35;;;;;;;;-1:-1:-1;;;;;1799:32:21;;;1781:51;;1769:2;1754:18;605:35:14;1635:203:21;1164:87:16;1210:7;1237:6;-1:-1:-1;;;;;1237:6:16;1164:87;;5619:636:14;;;;;;:::i;:::-;;:::i;2444:226:16:-;;;;;;:::i;:::-;;:::i;3712:548:14:-;;;;;;:::i;:::-;;:::i;688:31::-;;;;;;2118:244:16;;;;;;:::i;:::-;;:::i;4424:579:14:-;1210:7:16;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;4506:22:14;::::1;4498:93;;;::::0;-1:-1:-1;;;4498:93:14;;2850:2:21;4498:93:14::1;::::0;::::1;2832:21:21::0;2889:2;2869:18;;;2862:30;2928:34;2908:18;;;2901:62;2999:28;2979:18;;;2972:56;3045:19;;4498:93:14::1;2648:422:21::0;4498:93:14::1;-1:-1:-1::0;;;;;4610:19:14;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;:27;;:19:::0;:27:::1;4602:96;;;::::0;-1:-1:-1;;;4602:96:14;;3277:2:21;4602:96:14::1;::::0;::::1;3259:21:21::0;3316:2;3296:18;;;3289:30;3355:34;3335:18;;;3328:62;3426:26;3406:18;;;3399:54;3470:19;;4602:96:14::1;3075:420:21::0;4602:96:14::1;4711:8;::::0;4730:186:::1;4751:15;:22:::0;4747:26;::::1;4730:186;;;4829:8;-1:-1:-1::0;;;;;4799:38:14::1;:15;4815:1;4799:18;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:26:::0;-1:-1:-1;;;;;4799:26:14::1;:38:::0;4795:110:::1;;4864:1;4858:7;;4884:5;;4795:110;4775:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4730:186;;;;4935:15;4951:3;4935:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;4928:27:::0;;-1:-1:-1;;;;;;4928:27:14::1;::::0;;;;::::1;::::0;;;::::1;;::::0;;;-1:-1:-1;;;;;4966:19:14;;;::::1;::::0;;:9:::1;:19:::0;;;-1:-1:-1;4966:19:14;;;:27;;-1:-1:-1;;4966:27:14::1;::::0;;4424:579::o;3283:43::-;2033:10;2023:21;;;;:9;:21;;;;;;;;:29;;:21;:29;2015:100;;;;-1:-1:-1;;;2015:100:14;;4106:2:21;2015:100:14;;;4088:21:21;4145:2;4125:18;;;4118:30;4184:34;4164:18;;;4157:62;4255:28;4235:18;;;4228:56;4301:19;;2015:100:14;3904:422:21;2015:100:14;3283:43::o;6857:111::-;6908:17;6945:15;6938:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6938:22:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6857:111;:::o;5171:261::-;1210:7:16;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;5237:14:14::1;::::0;::::1;;5236:15;5228:83;;;::::0;-1:-1:-1;;;5228:83:14;;4533:2:21;5228:83:14::1;::::0;::::1;4515:21:21::0;4572:2;4552:18;;;4545:30;4611:34;4591:18;;;4584:62;4682:25;4662:18;;;4655:53;4725:19;;5228:83:14::1;4331:419:21::0;5228:83:14::1;5324:14;:21:::0;;-1:-1:-1;;5324:21:14::1;5341:4;5324:21;::::0;;5375:15:::1;5356:16;:34:::0;5408:16:::1;::::0;::::1;::::0;5324:14:::1;::::0;5408:16:::1;5171:261::o:0;1815:148:16:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;1922:1:::1;1906:6:::0;;1885:40:::1;::::0;-1:-1:-1;;;;;1906:6:16;;::::1;::::0;1885:40:::1;::::0;1922:1;;1885:40:::1;1953:1;1936:19:::0;;-1:-1:-1;;;;;;1936:19:16::1;::::0;;1815:148::o;5619:636:14:-;1210:7:16;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;5706:10:14::1;-1:-1:-1::0;;;;;5697:19:14::1;:5;-1:-1:-1::0;;;;;5697:19:14::1;::::0;5689:89:::1;;;::::0;-1:-1:-1;;;5689:89:14;;4957:2:21;5689:89:14::1;::::0;::::1;4939:21:21::0;4996:2;4976:18;;;4969:30;5035:34;5015:18;;;5008:62;5106:27;5086:18;;;5079:55;5151:19;;5689:89:14::1;4755:421:21::0;5689:89:14::1;-1:-1:-1::0;;;;;5797:19:14;::::1;5789:87;;;::::0;-1:-1:-1;;;5789:87:14;;5383:2:21;5789:87:14::1;::::0;::::1;5365:21:21::0;5422:2;5402:18;;;5395:30;5461:34;5441:18;;;5434:62;5532:25;5512:18;;;5505:53;5575:19;;5789:87:14::1;5181:419:21::0;5789:87:14::1;5907:38;::::0;-1:-1:-1;;;5907:38:14;;5939:4:::1;5907:38;::::0;::::1;1781:51:21::0;5889:15:14::1;::::0;-1:-1:-1;;;;;5907:23:14;::::1;::::0;::::1;::::0;1754:18:21;;5907:38:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5889:56;;5974:1;5964:7;:11;5956:79;;;::::0;-1:-1:-1;;;5956:79:14;;5996:2:21;5956:79:14::1;::::0;::::1;5978:21:21::0;6035:2;6015:18;;;6008:30;6074:34;6054:18;;;6047:62;6145:25;6125:18;;;6118:53;6188:19;;5956:79:14::1;5794:419:21::0;5956:79:14::1;6048:12;6070:5;-1:-1:-1::0;;;;;6063:22:14::1;;6086:7;1210::16::0;1237:6;-1:-1:-1;;;;;1237:6:16;;1164:87;6086:7:14::1;6063:40;::::0;-1:-1:-1;;;;;;6063:40:14::1;::::0;;;;;;-1:-1:-1;;;;;6410:32:21;;;6063:40:14::1;::::0;::::1;6392:51:21::0;6459:18;;;6452:34;;;6365:18;;6063:40:14::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6048:55;;6122:7;6114:70;;;::::0;-1:-1:-1;;;6114:70:14;;6981:2:21;6114:70:14::1;::::0;::::1;6963:21:21::0;7020:2;7000:18;;;6993:30;7059:34;7039:18;;;7032:62;-1:-1:-1;;;7110:18:21;;;7103:48;7168:19;;6114:70:14::1;6779:414:21::0;6114:70:14::1;6202:45;6223:5;6230:7;6239;1210::16::0;1237:6;-1:-1:-1;;;;;1237:6:16;;1164:87;6239:7:14::1;6202:45;::::0;;-1:-1:-1;;;;;7456:15:21;;;7438:34;;7503:2;7488:18;;7481:34;;;;7551:15;;7531:18;;;7524:43;6202:45:14;;;;;;7388:2:21;6202:45:14;;::::1;5678:577;;5619:636:::0;:::o;2444:226:16:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;2525:6:::1;::::0;;;2508:23;;-1:-1:-1;;;;;;2508:23:16;;::::1;-1:-1:-1::0;;;;;2525:6:16;::::1;2508:23;::::0;;;2542:19:::1;::::0;;2584:22:::1;2602:4:::0;2584:15:::1;:22;:::i;:::-;2572:9;:34:::0;2659:1:::1;2643:6:::0;;2622:40:::1;::::0;-1:-1:-1;;;;;2643:6:16;;::::1;::::0;2622:40:::1;::::0;2659:1;;2622:40:::1;2444:226:::0;:::o;3712:548:14:-;1210:7:16;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;-1:-1:-1;;;;;3814:19:14;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;:28;3806:93;;;::::0;-1:-1:-1;;;3806:93:14;;7910:2:21;3806:93:14::1;::::0;::::1;7892:21:21::0;7949:2;7929:18;;;7922:30;7988:34;7968:18;;;7961:62;-1:-1:-1;;;8039:18:21;;;8032:50;8099:19;;3806:93:14::1;7708:416:21::0;3806:93:14::1;-1:-1:-1::0;;;;;3918:22:14;::::1;3910:91;;;::::0;-1:-1:-1;;;3910:91:14;;8331:2:21;3910:91:14::1;::::0;::::1;8313:21:21::0;8370:2;8350:18;;;8343:30;8409:34;8389:18;;;8382:62;8480:26;8460:18;;;8453:54;8524:19;;3910:91:14::1;8129:420:21::0;3910:91:14::1;4036:1;4020:13;:17;4012:83;;;::::0;-1:-1:-1;;;4012:83:14;;8756:2:21;4012:83:14::1;::::0;::::1;8738:21:21::0;8795:2;8775:18;;;8768:30;8834:34;8814:18;;;8807:62;-1:-1:-1;;;8885:18:21;;;8878:51;8946:19;;4012:83:14::1;8554:417:21::0;4012:83:14::1;-1:-1:-1::0;;;;;4108:19:14;;::::1;;::::0;;;:9:::1;:19;::::0;;;;;;;:26;;4130:4:::1;-1:-1:-1::0;;4108:26:14;;::::1;::::0;::::1;::::0;;;4166:36;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;4145:15:::1;:58:::0;;;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4145:58:14::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;;;;;;4229:23;1781:51:21;;;4229:23:14::1;::::0;1754:18:21;4229:23:14::1;;;;;;;3712:548:::0;;:::o;2118:244:16:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;-1:-1:-1;;;;;2207:22:16;::::1;2199:73;;;::::0;-1:-1:-1;;;2199:73:16;;9178:2:21;2199:73:16::1;::::0;::::1;9160:21:21::0;9217:2;9197:18;;;9190:30;9256:34;9236:18;;;9229:62;-1:-1:-1;;;9307:18:21;;;9300:36;9353:19;;2199:73:16::1;8976:402:21::0;2199:73:16::1;2309:6;::::0;;2288:38:::1;::::0;-1:-1:-1;;;;;2288:38:16;;::::1;::::0;2309:6;::::1;::::0;2288:38:::1;::::0;::::1;2337:6;:17:::0;;-1:-1:-1;;;;;;2337:17:16::1;-1:-1:-1::0;;;;;2337:17:16;;;::::1;::::0;;;::::1;::::0;;2118:244::o;14:173:21:-;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:21:o;565:873::-;790:2;842:21;;;912:13;;815:18;;;934:22;;;761:4;;790:2;975;;993:18;;;;1034:15;;;761:4;1077:335;1091:6;1088:1;1085:13;1077:335;;;1150:13;;1192:9;;-1:-1:-1;;;;;1188:35:21;1176:48;;1264:11;;;1258:18;1244:12;;;1237:40;1317:11;;1311:18;1297:12;;;1290:40;1359:4;1350:14;;;;1387:15;;;;1220:1;1106:9;1077:335;;;-1:-1:-1;1429:3:21;;565:873;-1:-1:-1;;;;;;;565:873:21:o;1843:180::-;1902:6;1955:2;1943:9;1934:7;1930:23;1926:32;1923:52;;;1971:1;1968;1961:12;1923:52;-1:-1:-1;1994:23:21;;1843:180;-1:-1:-1;1843:180:21:o;2028:254::-;2096:6;2104;2157:2;2145:9;2136:7;2132:23;2128:32;2125:52;;;2173:1;2170;2163:12;2125:52;2196:29;2215:9;2196:29;:::i;:::-;2186:39;2272:2;2257:18;;;;2244:32;;-1:-1:-1;;;2028:254:21:o;2287:356::-;2489:2;2471:21;;;2508:18;;;2501:30;2567:34;2562:2;2547:18;;2540:62;2634:2;2619:18;;2287:356::o;3500:127::-;3561:10;3556:3;3552:20;3549:1;3542:31;3592:4;3589:1;3582:15;3616:4;3613:1;3606:15;3632:127;3693:10;3688:3;3684:20;3681:1;3674:31;3724:4;3721:1;3714:15;3748:4;3745:1;3738:15;3764:135;3803:3;3824:17;;;3821:43;;3844:18;;:::i;:::-;-1:-1:-1;3891:1:21;3880:13;;3764:135::o;5605:184::-;5675:6;5728:2;5716:9;5707:7;5703:23;5699:32;5696:52;;;5744:1;5741;5734:12;5696:52;-1:-1:-1;5767:16:21;;5605:184;-1:-1:-1;5605:184:21:o;6497:277::-;6564:6;6617:2;6605:9;6596:7;6592:23;6588:32;6585:52;;;6633:1;6630;6623:12;6585:52;6665:9;6659:16;6718:5;6711:13;6704:21;6697:5;6694:32;6684:60;;6740:1;6737;6730:12;7578:125;7643:9;;;7664:10;;;7661:36;;;7677:18;;:::i;:::-;7578:125;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "25485": [
        {
          "start": 435,
          "length": 32
        },
        {
          "start": 1769,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addInvestor(address,uint256)": "ec20b457",
    "claim()": "4e71d92d",
    "enableVesting()": "5b904cb7",
    "getAmountClaimed(address)": "d36862e8",
    "getAmountToClaim(address)": "0bca8bcd",
    "getInvestorLibrary()": "50ad827a",
    "investors(address)": "6f7bc9be",
    "lock(uint256)": "dd467064",
    "owner()": "8da5cb5b",
    "proveToken()": "85d4cad3",
    "removeInvestor(address)": "42714978",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "vestingEnabled()": "7f87bbd6",
    "vestingStartUnix()": "f02c6d8f",
    "withdrawErc20(address)": "c7e42b1b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proveToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"Erc20TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountClaimed\",\"type\":\"uint256\"}],\"name\":\"ProveClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VestingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"investorAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensToVest\",\"type\":\"uint256\"}],\"name\":\"addInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAmountClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAmountToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestorLibrary\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokensToVest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensClaimed\",\"type\":\"uint256\"}],\"internalType\":\"struct Vesting.Investor[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proveToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartUnix\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Erc20TokensWithdrawn(address,uint256,address)\":{\"params\":{\"amount\":\"tokens withdrawn.\",\"receiver\":\"address of msg.sender.\",\"token\":\"address of Erc20 token.\"}},\"ProveClaimed(address,uint256)\":{\"params\":{\"account\":\"is the wallet address of msg.sender.\",\"amountClaimed\":\"is the amount of tokens the account claimed.\"}},\"investorAdded(address)\":{\"params\":{\"account\":\"is the wallet address of investor that was addes to the investorLibrary.\"}}},\"kind\":\"dev\",\"methods\":{\"addInvestor(address,uint256)\":{\"params\":{\"_account\":\"the wallet address of investor being added.\",\"_tokensToVest\":\"the amount of $PROVE that is being vested for that investor.\"}},\"claim()\":{\"details\":\"msg.sender must be the investor address\"},\"enableVesting()\":{\"details\":\"will set start time to vestingStartUnix.      will set vestingEnabled to true.\"},\"getAmountClaimed(address)\":{\"params\":{\"account\":\"address of investor.\"},\"returns\":{\"_0\":\"uint256 amount of tokens claimed by account.\"}},\"getAmountToClaim(address)\":{\"params\":{\"account\":\"address of investor.\"},\"returns\":{\"_0\":\"uint256 amount of tokens to claim.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeInvestor(address)\":{\"params\":{\"_account\":\"the wallet address of investor that is being removed.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawErc20(address)\":{\"details\":\"token address cannot be $PROVE\",\"params\":{\"token\":\"contract address of token we wish to remove.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Erc20TokensWithdrawn(address,uint256,address)\":{\"notice\":\"This event is emitted when withdrawErc20() is executed.\"},\"ProveClaimed(address,uint256)\":{\"notice\":\"This event is emitted when claim() is successfully executed.\"},\"VestingEnabled()\":{\"notice\":\"This event is emitted when enableVesting() is executed. Should only be executed once.\"},\"investorAdded(address)\":{\"notice\":\"This event is emitted when addInvestor() is successfully executed.\"}},\"kind\":\"user\",\"methods\":{\"addInvestor(address,uint256)\":{\"notice\":\"This function sets an address as true in the investors mapping and also pushes a new investor element to the Investor array.\"},\"claim()\":{\"notice\":\"Used to claim vested tokens.\"},\"constructor\":{\"notice\":\"Mapping to track investor addresses.\"},\"enableVesting()\":{\"notice\":\"This function starts the vesting period.\"},\"getAmountClaimed(address)\":{\"notice\":\"This function returns the amount of tokens an investor HAS claimed.\"},\"getAmountToClaim(address)\":{\"notice\":\"This function returns the amount of tokens to claim for a specified investor.\"},\"removeInvestor(address)\":{\"notice\":\"This function removes an investor from the investorLibrary.\"},\"vestingEnabled()\":{\"notice\":\"block timestamp of when vesting has begun\"},\"vestingStartUnix()\":{\"notice\":\"The vested token address.\"},\"withdrawErc20(address)\":{\"notice\":\"Is used to remove ERC20 tokens from the contract.\"}},\"notice\":\"This contract will hold $PROVE tokens in escrow         This contract will facilitate the private sale investor vesting tokens         This contract will follow a strict vesting schedule         This contract will follow a claim model\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vesting.sol\":\"Vesting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Vesting.sol\":{\"keccak256\":\"0xe0fe15d3e209d8220833a725c2480e903916ed9ff731304c9bdafb674a8c4169\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8559634dbd4427271b841ff096bbe13dae67cb2f027439e84b5b900446cd02e5\",\"dweb:/ipfs/QmVaevHa9PsMYcQ6EZmECHgRAaGmsBzmcHv8KR46jwsAVi\"]},\"src/extensions/Context.sol\":{\"keccak256\":\"0x8795d48b0db75e627ea6d57f1eb24e269519a1db8ce2e7d3a4441dd516a9b016\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39249193e7e48805d84c55471a695d8f88a3358f0b3274b94ce4e83278a53a12\",\"dweb:/ipfs/QmQcrb4WuzRmY3oeX8ush6EqhtjqmfFxpawXk2ceHoFMiV\"]},\"src/extensions/Ownable.sol\":{\"keccak256\":\"0xbe3f4ae2a873ee339e0ac54107262ee789604570a463549fd43364289769207f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca9dde5e484d808440ff8ac43892b8f59a2b76d5084efce1dfa904d800c0f9c6\",\"dweb:/ipfs/QmRnQ2x3a9GwVKf7wbRhNY1MwdxyoTkvDtLFqjXxhEoALA\"]},\"src/interfaces/Interfaces.sol\":{\"keccak256\":\"0x741b318f522ba8451f4a2e40afcf59e995484318fabe7c57adeba3124bbd7e04\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dba0a37a10519080f892d5c8b87a0ec026ef73492195a901e49f74766b5915f7\",\"dweb:/ipfs/QmduauRea8YdqJaMeHiYH2tRtbydoqgVirSaTzbXMoEjYX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_proveToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Erc20TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProveClaimed",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "VestingEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "investorAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokensToVest",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addInvestor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableVesting"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountClaimed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getInvestorLibrary",
          "outputs": [
            {
              "internalType": "struct Vesting.Investor[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokensToVest",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokensClaimed",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "investors",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lock"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proveToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeInvestor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingStartUnix",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawErc20"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addInvestor(address,uint256)": {
            "params": {
              "_account": "the wallet address of investor being added.",
              "_tokensToVest": "the amount of $PROVE that is being vested for that investor."
            }
          },
          "claim()": {
            "details": "msg.sender must be the investor address"
          },
          "enableVesting()": {
            "details": "will set start time to vestingStartUnix.      will set vestingEnabled to true."
          },
          "getAmountClaimed(address)": {
            "params": {
              "account": "address of investor."
            },
            "returns": {
              "_0": "uint256 amount of tokens claimed by account."
            }
          },
          "getAmountToClaim(address)": {
            "params": {
              "account": "address of investor."
            },
            "returns": {
              "_0": "uint256 amount of tokens to claim."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "removeInvestor(address)": {
            "params": {
              "_account": "the wallet address of investor that is being removed."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawErc20(address)": {
            "details": "token address cannot be $PROVE",
            "params": {
              "token": "contract address of token we wish to remove."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addInvestor(address,uint256)": {
            "notice": "This function sets an address as true in the investors mapping and also pushes a new investor element to the Investor array."
          },
          "claim()": {
            "notice": "Used to claim vested tokens."
          },
          "constructor": {
            "notice": "Mapping to track investor addresses."
          },
          "enableVesting()": {
            "notice": "This function starts the vesting period."
          },
          "getAmountClaimed(address)": {
            "notice": "This function returns the amount of tokens an investor HAS claimed."
          },
          "getAmountToClaim(address)": {
            "notice": "This function returns the amount of tokens to claim for a specified investor."
          },
          "removeInvestor(address)": {
            "notice": "This function removes an investor from the investorLibrary."
          },
          "vestingEnabled()": {
            "notice": "block timestamp of when vesting has begun"
          },
          "vestingStartUnix()": {
            "notice": "The vested token address."
          },
          "withdrawErc20(address)": {
            "notice": "Is used to remove ERC20 tokens from the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Vesting.sol": "Vesting"
      },
      "libraries": {}
    },
    "sources": {
      "src/Vesting.sol": {
        "keccak256": "0xe0fe15d3e209d8220833a725c2480e903916ed9ff731304c9bdafb674a8c4169",
        "urls": [
          "bzz-raw://8559634dbd4427271b841ff096bbe13dae67cb2f027439e84b5b900446cd02e5",
          "dweb:/ipfs/QmVaevHa9PsMYcQ6EZmECHgRAaGmsBzmcHv8KR46jwsAVi"
        ],
        "license": "UNLICENSED"
      },
      "src/extensions/Context.sol": {
        "keccak256": "0x8795d48b0db75e627ea6d57f1eb24e269519a1db8ce2e7d3a4441dd516a9b016",
        "urls": [
          "bzz-raw://39249193e7e48805d84c55471a695d8f88a3358f0b3274b94ce4e83278a53a12",
          "dweb:/ipfs/QmQcrb4WuzRmY3oeX8ush6EqhtjqmfFxpawXk2ceHoFMiV"
        ],
        "license": "MIT"
      },
      "src/extensions/Ownable.sol": {
        "keccak256": "0xbe3f4ae2a873ee339e0ac54107262ee789604570a463549fd43364289769207f",
        "urls": [
          "bzz-raw://ca9dde5e484d808440ff8ac43892b8f59a2b76d5084efce1dfa904d800c0f9c6",
          "dweb:/ipfs/QmRnQ2x3a9GwVKf7wbRhNY1MwdxyoTkvDtLFqjXxhEoALA"
        ],
        "license": "MIT"
      },
      "src/interfaces/Interfaces.sol": {
        "keccak256": "0x741b318f522ba8451f4a2e40afcf59e995484318fabe7c57adeba3124bbd7e04",
        "urls": [
          "bzz-raw://dba0a37a10519080f892d5c8b87a0ec026ef73492195a901e49f74766b5915f7",
          "dweb:/ipfs/QmduauRea8YdqJaMeHiYH2tRtbydoqgVirSaTzbXMoEjYX"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Vesting.sol",
    "id": 25818,
    "exportedSymbols": {
      "Context": [
        25843
      ],
      "IERC20": [
        26125
      ],
      "Ownable": [
        25991
      ],
      "Vesting": [
        25817
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:6935:14",
    "nodes": [
      {
        "id": 25477,
        "nodeType": "PragmaDirective",
        "src": "40:24:14",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 25478,
        "nodeType": "ImportDirective",
        "src": "68:34:14",
        "nodes": [],
        "absolutePath": "src/extensions/Ownable.sol",
        "file": "./extensions/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25818,
        "sourceUnit": 25992,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25480,
        "nodeType": "ImportDirective",
        "src": "104:51:14",
        "nodes": [],
        "absolutePath": "src/interfaces/Interfaces.sol",
        "file": "./interfaces/Interfaces.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25818,
        "sourceUnit": 26907,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25479,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26125,
              "src": "112:6:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25817,
        "nodeType": "ContractDefinition",
        "src": "494:6479:14",
        "nodes": [
          {
            "id": 25485,
            "nodeType": "VariableDeclaration",
            "src": "605:35:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "85d4cad3",
            "mutability": "immutable",
            "name": "proveToken",
            "nameLocation": "630:10:14",
            "scope": 25817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25484,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25488,
            "nodeType": "VariableDeclaration",
            "src": "688:31:14",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25486,
              "nodeType": "StructuredDocumentation",
              "src": "643:39:14",
              "text": "@notice The vested token address."
            },
            "functionSelector": "f02c6d8f",
            "mutability": "mutable",
            "name": "vestingStartUnix",
            "nameLocation": "703:16:14",
            "scope": 25817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25487,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "688:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25491,
            "nodeType": "VariableDeclaration",
            "src": "781:26:14",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25489,
              "nodeType": "StructuredDocumentation",
              "src": "722:53:14",
              "text": "@notice block timestamp of when vesting has begun"
            },
            "functionSelector": "7f87bbd6",
            "mutability": "mutable",
            "name": "vestingEnabled",
            "nameLocation": "793:14:14",
            "scope": 25817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 25490,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "781:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25496,
            "nodeType": "VariableDeclaration",
            "src": "861:26:14",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25492,
              "nodeType": "StructuredDocumentation",
              "src": "815:40:14",
              "text": "@notice vesting enabled when true."
            },
            "mutability": "mutable",
            "name": "investorLibrary",
            "nameLocation": "872:15:14",
            "scope": 25817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Investor_$25503_storage_$dyn_storage",
              "typeString": "struct Vesting.Investor[]"
            },
            "typeName": {
              "baseType": {
                "id": 25494,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25493,
                  "name": "Investor",
                  "nameLocations": [
                    "861:8:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25503,
                  "src": "861:8:14"
                },
                "referencedDeclaration": 25503,
                "src": "861:8:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$25503_storage_ptr",
                  "typeString": "struct Vesting.Investor"
                }
              },
              "id": 25495,
              "nodeType": "ArrayTypeName",
              "src": "861:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Investor_$25503_storage_$dyn_storage_ptr",
                "typeString": "struct Vesting.Investor[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25503,
            "nodeType": "StructDefinition",
            "src": "1171:113:14",
            "nodes": [],
            "canonicalName": "Vesting.Investor",
            "members": [
              {
                "constant": false,
                "id": 25498,
                "mutability": "mutable",
                "name": "account",
                "nameLocation": "1206:7:14",
                "nodeType": "VariableDeclaration",
                "scope": 25503,
                "src": "1198:15:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25497,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1198:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25500,
                "mutability": "mutable",
                "name": "tokensToVest",
                "nameLocation": "1232:12:14",
                "nodeType": "VariableDeclaration",
                "scope": 25503,
                "src": "1224:20:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25499,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1224:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25502,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "1263:13:14",
                "nodeType": "VariableDeclaration",
                "scope": 25503,
                "src": "1255:21:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25501,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1255:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "1178:8:14",
            "scope": 25817,
            "visibility": "public"
          },
          {
            "id": 25507,
            "nodeType": "VariableDeclaration",
            "src": "1292:41:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f7bc9be",
            "mutability": "mutable",
            "name": "investors",
            "nameLocation": "1324:9:14",
            "scope": 25817,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 25506,
              "keyType": {
                "id": 25504,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1300:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1292:24:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 25505,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1311:4:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 25524,
            "nodeType": "FunctionDefinition",
            "src": "1724:128:14",
            "nodes": [],
            "body": {
              "id": 25523,
              "nodeType": "Block",
              "src": "1773:79:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25515,
                      "name": "proveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25485,
                      "src": "1784:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25516,
                      "name": "_proveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25510,
                      "src": "1797:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1784:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25518,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:24:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25520,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25512,
                        "src": "1837:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25519,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25956,
                      "src": "1819:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25522,
                  "nodeType": "ExpressionStatement",
                  "src": "1819:25:14"
                }
              ]
            },
            "documentation": {
              "id": 25508,
              "nodeType": "StructuredDocumentation",
              "src": "1342:48:14",
              "text": "@notice Mapping to track investor addresses."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25510,
                  "mutability": "mutable",
                  "name": "_proveToken",
                  "nameLocation": "1744:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25524,
                  "src": "1736:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25512,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1765:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25524,
                  "src": "1757:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1735:37:14"
            },
            "returnParameters": {
              "id": 25514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1773:0:14"
            },
            "scope": 25817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25539,
            "nodeType": "ModifierDefinition",
            "src": "1980:155:14",
            "nodes": [],
            "body": {
              "id": 25538,
              "nodeType": "Block",
              "src": "2004:131:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 25528,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25507,
                            "src": "2023:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 25531,
                          "indexExpression": {
                            "expression": {
                              "id": 25529,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2033:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 25530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2037:6:14",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2033:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2023:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 25532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2048:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2023:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a6f6e6c79496e766573746f722829206d73672e73656e646572206d75737420626520616e20696e766573746f72",
                        "id": 25534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2054:60:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04c0e7337b94cd08ab709ab9e01a52972b8997f541f0ec03cfdf895720fa5020",
                          "typeString": "literal_string \"Vesting.sol::onlyInvestor() msg.sender must be an investor\""
                        },
                        "value": "Vesting.sol::onlyInvestor() msg.sender must be an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04c0e7337b94cd08ab709ab9e01a52972b8997f541f0ec03cfdf895720fa5020",
                          "typeString": "literal_string \"Vesting.sol::onlyInvestor() msg.sender must be an investor\""
                        }
                      ],
                      "id": 25527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2015:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:100:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25536,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:100:14"
                },
                {
                  "id": 25537,
                  "nodeType": "PlaceholderStatement",
                  "src": "2126:1:14"
                }
              ]
            },
            "documentation": {
              "id": 25525,
              "nodeType": "StructuredDocumentation",
              "src": "1918:56:14",
              "text": "@dev modifier to check if msg.sender is an investor."
            },
            "name": "onlyInvestor",
            "nameLocation": "1989:12:14",
            "parameters": {
              "id": 25526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:2:14"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25546,
            "nodeType": "EventDefinition",
            "src": "2406:59:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25540,
              "nodeType": "StructuredDocumentation",
              "src": "2192:208:14",
              "text": "@notice This event is emitted when claim() is successfully executed.\n @param account is the wallet address of msg.sender.\n @param amountClaimed is the amount of tokens the account claimed."
            },
            "eventSelector": "c9ff33ee3842ec05cab3a4e2b17aa19694b6c461ea543be5752366f912a6539d",
            "name": "ProveClaimed",
            "nameLocation": "2412:12:14",
            "parameters": {
              "id": 25545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25542,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2433:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25546,
                  "src": "2425:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25544,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountClaimed",
                  "nameLocation": "2450:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25546,
                  "src": "2442:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2442:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2424:40:14"
            }
          },
          {
            "id": 25551,
            "nodeType": "EventDefinition",
            "src": "2654:37:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25547,
              "nodeType": "StructuredDocumentation",
              "src": "2473:175:14",
              "text": "@notice This event is emitted when addInvestor() is successfully executed.\n @param account is the wallet address of investor that was addes to the investorLibrary."
            },
            "eventSelector": "2c385ad016af1d5b8f4eefb8aef02929aa692e7f6d846488519f2513bd7170e0",
            "name": "investorAdded",
            "nameLocation": "2660:13:14",
            "parameters": {
              "id": 25550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25549,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2682:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25551,
                  "src": "2674:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2674:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2673:17:14"
            }
          },
          {
            "id": 25560,
            "nodeType": "EventDefinition",
            "src": "2907:76:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25552,
              "nodeType": "StructuredDocumentation",
              "src": "2699:202:14",
              "text": "@notice This event is emitted when withdrawErc20() is executed.\n @param token address of Erc20 token.\n @param amount tokens withdrawn.\n @param receiver address of msg.sender."
            },
            "eventSelector": "3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f",
            "name": "Erc20TokensWithdrawn",
            "nameLocation": "2913:20:14",
            "parameters": {
              "id": 25559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25554,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2942:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25560,
                  "src": "2934:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2934:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25556,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2957:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25560,
                  "src": "2949:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25558,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2973:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25560,
                  "src": "2965:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2965:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2933:49:14"
            }
          },
          {
            "id": 25563,
            "nodeType": "EventDefinition",
            "src": "3094:23:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 25561,
              "nodeType": "StructuredDocumentation",
              "src": "2991:97:14",
              "text": "@notice This event is emitted when enableVesting() is executed. Should only be executed once."
            },
            "eventSelector": "f78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa3",
            "name": "VestingEnabled",
            "nameLocation": "3100:14:14",
            "parameters": {
              "id": 25562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3114:2:14"
            }
          },
          {
            "id": 25570,
            "nodeType": "FunctionDefinition",
            "src": "3283:43:14",
            "nodes": [],
            "body": {
              "id": 25569,
              "nodeType": "Block",
              "src": "3324:2:14",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 25564,
              "nodeType": "StructuredDocumentation",
              "src": "3183:94:14",
              "text": "@notice Used to claim vested tokens.\n @dev msg.sender must be the investor address"
            },
            "functionSelector": "4e71d92d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25567,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25566,
                  "name": "onlyInvestor",
                  "nameLocations": [
                    "3309:12:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25539,
                  "src": "3309:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3309:14:14"
              }
            ],
            "name": "claim",
            "nameLocation": "3292:5:14",
            "parameters": {
              "id": 25565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3297:2:14"
            },
            "returnParameters": {
              "id": 25568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3324:0:14"
            },
            "scope": 25817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25627,
            "nodeType": "FunctionDefinition",
            "src": "3712:548:14",
            "nodes": [],
            "body": {
              "id": 25626,
              "nodeType": "Block",
              "src": "3795:465:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 25581,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25507,
                            "src": "3814:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 25583,
                          "indexExpression": {
                            "id": 25582,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25573,
                            "src": "3824:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3814:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 25584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3837:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3814:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a616464496e766573746f72282920696e766573746f7220697320616c7265616479206164646564",
                        "id": 25586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3844:54:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac8b3365ec58116f79763809b4a76f0b400571fe8055cd18bc01fd9ea666875f",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() investor is already added\""
                        },
                        "value": "Vesting.sol::addInvestor() investor is already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac8b3365ec58116f79763809b4a76f0b400571fe8055cd18bc01fd9ea666875f",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() investor is already added\""
                        }
                      ],
                      "id": 25580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3806:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3806:93:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25588,
                  "nodeType": "ExpressionStatement",
                  "src": "3806:93:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25590,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25573,
                          "src": "3918:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3938:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3930:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25591,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3930:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3930:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3918:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a616464496e766573746f722829205f6163636f756e742063616e6e6f742062652061646472657373283029",
                        "id": 25596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3942:58:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43a7576cc71999d5991f16be987a98bc7d178f59df62ec343336a603751a8636",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() _account cannot be address(0)\""
                        },
                        "value": "Vesting.sol::addInvestor() _account cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43a7576cc71999d5991f16be987a98bc7d178f59df62ec343336a603751a8636",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() _account cannot be address(0)\""
                        }
                      ],
                      "id": 25589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3910:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3910:91:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25598,
                  "nodeType": "ExpressionStatement",
                  "src": "3910:91:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25600,
                          "name": "_tokensToVest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25575,
                          "src": "4020:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4036:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4020:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a616464496e766573746f722829205f746f6b656e73546f56657374206d7573742062652067742030",
                        "id": 25603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4039:55:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c29cccc352d3a7eba90af13be2b3943b9e81df521048af1ca34057bc8661bb8",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() _tokensToVest must be gt 0\""
                        },
                        "value": "Vesting.sol::addInvestor() _tokensToVest must be gt 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c29cccc352d3a7eba90af13be2b3943b9e81df521048af1ca34057bc8661bb8",
                          "typeString": "literal_string \"Vesting.sol::addInvestor() _tokensToVest must be gt 0\""
                        }
                      ],
                      "id": 25599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4012:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4012:83:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25605,
                  "nodeType": "ExpressionStatement",
                  "src": "4012:83:14"
                },
                {
                  "expression": {
                    "id": 25610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25606,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25507,
                        "src": "4108:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25608,
                      "indexExpression": {
                        "id": 25607,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25573,
                        "src": "4118:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4108:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 25609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4130:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4108:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25611,
                  "nodeType": "ExpressionStatement",
                  "src": "4108:26:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25616,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25573,
                            "src": "4175:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 25617,
                            "name": "_tokensToVest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25575,
                            "src": "4185:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 25618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4200:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25615,
                          "name": "Investor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25503,
                          "src": "4166:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Investor_$25503_storage_ptr_$",
                            "typeString": "type(struct Vesting.Investor storage pointer)"
                          }
                        },
                        "id": 25619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4166:36:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$25503_memory_ptr",
                          "typeString": "struct Vesting.Investor memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Investor_$25503_memory_ptr",
                          "typeString": "struct Vesting.Investor memory"
                        }
                      ],
                      "expression": {
                        "id": 25612,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25496,
                        "src": "4145:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25503_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4161:4:14",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4145:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Investor_$25503_storage_$dyn_storage_ptr_$_t_struct$_Investor_$25503_storage_$returns$__$bound_to$_t_array$_t_struct$_Investor_$25503_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Vesting.Investor storage ref[] storage pointer,struct Vesting.Investor storage ref)"
                      }
                    },
                    "id": 25620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4145:58:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25621,
                  "nodeType": "ExpressionStatement",
                  "src": "4145:58:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25623,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25573,
                        "src": "4243:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25622,
                      "name": "investorAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25551,
                      "src": "4229:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4229:23:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25625,
                  "nodeType": "EmitStatement",
                  "src": "4224:28:14"
                }
              ]
            },
            "documentation": {
              "id": 25571,
              "nodeType": "StructuredDocumentation",
              "src": "3410:296:14",
              "text": "@notice This function sets an address as true in the investors mapping and also pushes a new investor element to the Investor array.\n @param _account the wallet address of investor being added.\n @param _tokensToVest the amount of $PROVE that is being vested for that investor."
            },
            "functionSelector": "ec20b457",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25578,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25577,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3783:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25906,
                  "src": "3783:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3783:11:14"
              }
            ],
            "name": "addInvestor",
            "nameLocation": "3721:11:14",
            "parameters": {
              "id": 25576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25573,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3741:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25627,
                  "src": "3733:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25575,
                  "mutability": "mutable",
                  "name": "_tokensToVest",
                  "nameLocation": "3759:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25627,
                  "src": "3751:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3732:41:14"
            },
            "returnParameters": {
              "id": 25579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3795:0:14"
            },
            "scope": 25817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25695,
            "nodeType": "FunctionDefinition",
            "src": "4424:579:14",
            "nodes": [],
            "body": {
              "id": 25694,
              "nodeType": "Block",
              "src": "4487:516:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25636,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25630,
                          "src": "4506:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4526:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4518:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25637,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4518:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4518:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4506:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a72656d6f7665496e766573746f722829206163636f756e742063616e6e6f742062652061646472657373283029",
                        "id": 25642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4530:60:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b2ef8fa4a278f0c633eee5173cf5b45c06af3207fcf59338db6e0d4ebe3ce85",
                          "typeString": "literal_string \"Vesting.sol::removeInvestor() account cannot be address(0)\""
                        },
                        "value": "Vesting.sol::removeInvestor() account cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b2ef8fa4a278f0c633eee5173cf5b45c06af3207fcf59338db6e0d4ebe3ce85",
                          "typeString": "literal_string \"Vesting.sol::removeInvestor() account cannot be address(0)\""
                        }
                      ],
                      "id": 25635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4498:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4498:93:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25644,
                  "nodeType": "ExpressionStatement",
                  "src": "4498:93:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 25646,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25507,
                            "src": "4610:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 25648,
                          "indexExpression": {
                            "id": 25647,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25630,
                            "src": "4620:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4610:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 25649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4633:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4610:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a72656d6f7665496e766573746f722829206163636f756e74206973206e6f7420616e20696e766573746f72",
                        "id": 25651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4639:58:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c79e8791776e857b071508abe661f4ce8daf32ecc6a34eee68489085f017616",
                          "typeString": "literal_string \"Vesting.sol::removeInvestor() account is not an investor\""
                        },
                        "value": "Vesting.sol::removeInvestor() account is not an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c79e8791776e857b071508abe661f4ce8daf32ecc6a34eee68489085f017616",
                          "typeString": "literal_string \"Vesting.sol::removeInvestor() account is not an investor\""
                        }
                      ],
                      "id": 25645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4602:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4602:96:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25653,
                  "nodeType": "ExpressionStatement",
                  "src": "4602:96:14"
                },
                {
                  "assignments": [
                    25655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25655,
                      "mutability": "mutable",
                      "name": "idx",
                      "nameLocation": "4716:3:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 25694,
                      "src": "4711:8:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25654,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4711:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25656,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4711:8:14"
                },
                {
                  "body": {
                    "id": 25681,
                    "nodeType": "Block",
                    "src": "4780:136:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 25673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 25668,
                                "name": "investorLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25496,
                                "src": "4799:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Investor_$25503_storage_$dyn_storage",
                                  "typeString": "struct Vesting.Investor storage ref[] storage ref"
                                }
                              },
                              "id": 25670,
                              "indexExpression": {
                                "id": 25669,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25658,
                                "src": "4815:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4799:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$25503_storage",
                                "typeString": "struct Vesting.Investor storage ref"
                              }
                            },
                            "id": 25671,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4818:7:14",
                            "memberName": "account",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25498,
                            "src": "4799:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 25672,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25630,
                            "src": "4829:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4799:38:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 25680,
                        "nodeType": "IfStatement",
                        "src": "4795:110:14",
                        "trueBody": {
                          "id": 25679,
                          "nodeType": "Block",
                          "src": "4839:66:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 25676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 25674,
                                  "name": "idx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25655,
                                  "src": "4858:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 25675,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25658,
                                  "src": "4864:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4858:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 25677,
                              "nodeType": "ExpressionStatement",
                              "src": "4858:7:14"
                            },
                            {
                              "id": 25678,
                              "nodeType": "Break",
                              "src": "4884:5:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25661,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25658,
                      "src": "4747:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 25662,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25496,
                        "src": "4751:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25503_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4767:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4751:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4747:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25682,
                  "initializationExpression": {
                    "assignments": [
                      25658
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25658,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4740:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 25682,
                        "src": "4735:6:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25657,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4735:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25660,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4744:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4735:10:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4775:3:14",
                      "subExpression": {
                        "id": 25665,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25658,
                        "src": "4775:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25667,
                    "nodeType": "ExpressionStatement",
                    "src": "4775:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "4730:186:14"
                },
                {
                  "expression": {
                    "id": 25686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4928:27:14",
                    "subExpression": {
                      "baseExpression": {
                        "id": 25683,
                        "name": "investorLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25496,
                        "src": "4935:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Investor_$25503_storage_$dyn_storage",
                          "typeString": "struct Vesting.Investor storage ref[] storage ref"
                        }
                      },
                      "id": 25685,
                      "indexExpression": {
                        "id": 25684,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25655,
                        "src": "4951:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4935:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$25503_storage",
                        "typeString": "struct Vesting.Investor storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25687,
                  "nodeType": "ExpressionStatement",
                  "src": "4928:27:14"
                },
                {
                  "expression": {
                    "id": 25692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25688,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25507,
                        "src": "4966:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25690,
                      "indexExpression": {
                        "id": 25689,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25630,
                        "src": "4976:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4966:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 25691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4988:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4966:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25693,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:27:14"
                }
              ]
            },
            "documentation": {
              "id": 25628,
              "nodeType": "StructuredDocumentation",
              "src": "4268:150:14",
              "text": "@notice This function removes an investor from the investorLibrary.\n @param _account the wallet address of investor that is being removed."
            },
            "functionSelector": "42714978",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25633,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25632,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4475:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25906,
                  "src": "4475:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4475:11:14"
              }
            ],
            "name": "removeInvestor",
            "nameLocation": "4433:14:14",
            "parameters": {
              "id": 25631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25630,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "4456:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25695,
                  "src": "4448:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4448:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4447:18:14"
            },
            "returnParameters": {
              "id": 25634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4487:0:14"
            },
            "scope": 25817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25720,
            "nodeType": "FunctionDefinition",
            "src": "5171:261:14",
            "nodes": [],
            "body": {
              "id": 25719,
              "nodeType": "Block",
              "src": "5217:215:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5236:15:14",
                        "subExpression": {
                          "id": 25702,
                          "name": "vestingEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25491,
                          "src": "5237:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657374696e6720697320616c726561647920656e61626c6564",
                        "id": 25704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5253:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b81e7806853eebb1dd20d036cf5def1e03a3259047e4c17a645085fd705441b0",
                          "typeString": "literal_string \"Vesting.sol::enableVesting() vesting is already enabled\""
                        },
                        "value": "Vesting.sol::enableVesting() vesting is already enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b81e7806853eebb1dd20d036cf5def1e03a3259047e4c17a645085fd705441b0",
                          "typeString": "literal_string \"Vesting.sol::enableVesting() vesting is already enabled\""
                        }
                      ],
                      "id": 25701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5228:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5228:83:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25706,
                  "nodeType": "ExpressionStatement",
                  "src": "5228:83:14"
                },
                {
                  "expression": {
                    "id": 25709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25707,
                      "name": "vestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25491,
                      "src": "5324:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 25708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5341:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5324:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25710,
                  "nodeType": "ExpressionStatement",
                  "src": "5324:21:14"
                },
                {
                  "expression": {
                    "id": 25714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25711,
                      "name": "vestingStartUnix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25488,
                      "src": "5356:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 25712,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5375:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 25713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5381:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5375:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5356:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25715,
                  "nodeType": "ExpressionStatement",
                  "src": "5356:34:14"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25716,
                      "name": "VestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25563,
                      "src": "5408:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 25717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5408:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25718,
                  "nodeType": "EmitStatement",
                  "src": "5403:21:14"
                }
              ]
            },
            "documentation": {
              "id": 25696,
              "nodeType": "StructuredDocumentation",
              "src": "5011:154:14",
              "text": "@notice This function starts the vesting period.\n @dev will set start time to vestingStartUnix.\n      will set vestingEnabled to true."
            },
            "functionSelector": "5b904cb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25699,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25698,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5205:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25906,
                  "src": "5205:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5205:11:14"
              }
            ],
            "name": "enableVesting",
            "nameLocation": "5180:13:14",
            "parameters": {
              "id": 25697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5193:2:14"
            },
            "returnParameters": {
              "id": 25700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5217:0:14"
            },
            "scope": 25817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25788,
            "nodeType": "FunctionDefinition",
            "src": "5619:636:14",
            "nodes": [],
            "body": {
              "id": 25787,
              "nodeType": "Block",
              "src": "5678:577:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25729,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25723,
                          "src": "5697:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 25730,
                          "name": "proveToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25485,
                          "src": "5706:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5697:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a7769746864726177457263323028292063616e6e6f74207769746864726177202450524f564520746f6b656e",
                        "id": 25732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5718:59:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75db5b4aa55e9f0b03e4a8c070f8f66290a98338aaae1576bb806eef1f0080d2",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() cannot withdraw $PROVE token\""
                        },
                        "value": "Vesting.sol::withdrawErc20() cannot withdraw $PROVE token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75db5b4aa55e9f0b03e4a8c070f8f66290a98338aaae1576bb806eef1f0080d2",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() cannot withdraw $PROVE token\""
                        }
                      ],
                      "id": 25728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5689:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5689:89:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25734,
                  "nodeType": "ExpressionStatement",
                  "src": "5689:89:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25736,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25723,
                          "src": "5797:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5814:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5806:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25737,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5806:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5806:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5797:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b656e2063616e6e6f742062652061646472657373283029",
                        "id": 25742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5818:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29e76f784f984a6a07713ea53163c68fa39fa9a65b7a983cda7f9b66495bef31",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() token cannot be address(0)\""
                        },
                        "value": "Vesting.sol::withdrawErc20() token cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29e76f784f984a6a07713ea53163c68fa39fa9a65b7a983cda7f9b66495bef31",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() token cannot be address(0)\""
                        }
                      ],
                      "id": 25735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5789:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5789:87:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25744,
                  "nodeType": "ExpressionStatement",
                  "src": "5789:87:14"
                },
                {
                  "assignments": [
                    25746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25746,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "5897:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 25787,
                      "src": "5889:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25745,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5889:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25756,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25753,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5939:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vesting_$25817",
                              "typeString": "contract Vesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vesting_$25817",
                              "typeString": "contract Vesting"
                            }
                          ],
                          "id": 25752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5931:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25751,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5931:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5931:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25748,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25723,
                            "src": "5914:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25747,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26125,
                          "src": "5907:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$26125_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5907:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26125",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5921:9:14",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26064,
                      "src": "5907:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:38:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5889:56:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25758,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25746,
                          "src": "5964:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5974:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5964:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a77697468647261774572633230282920696e73756666696369656e7420746f6b656e2062616c616e6365",
                        "id": 25761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5977:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85892f03ec8e97515a01b84c9239dbced7e62306353ae22f1c016c668c87f26e",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() insufficient token balance\""
                        },
                        "value": "Vesting.sol::withdrawErc20() insufficient token balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85892f03ec8e97515a01b84c9239dbced7e62306353ae22f1c016c668c87f26e",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() insufficient token balance\""
                        }
                      ],
                      "id": 25757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5956:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5956:79:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25763,
                  "nodeType": "ExpressionStatement",
                  "src": "5956:79:14"
                },
                {
                  "assignments": [
                    25765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25765,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6053:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 25787,
                      "src": "6048:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25764,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6048:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25774,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 25770,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25892,
                          "src": "6086:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 25771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6086:7:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25772,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25746,
                        "src": "6095:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25767,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25723,
                            "src": "6070:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25766,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26125,
                          "src": "6063:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$26125_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6063:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26125",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6077:8:14",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26074,
                      "src": "6063:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6063:40:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6048:55:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25776,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25765,
                        "src": "6122:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a776974686472617745726332302829207472616e7366657220756e7375636365737366756c",
                        "id": 25777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6131:52:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15e8b103591986e2799c2dc971bdc5cdfd784ab9acde7b421a1ef4ce4227abca",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() transfer unsuccessful\""
                        },
                        "value": "Vesting.sol::withdrawErc20() transfer unsuccessful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15e8b103591986e2799c2dc971bdc5cdfd784ab9acde7b421a1ef4ce4227abca",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() transfer unsuccessful\""
                        }
                      ],
                      "id": 25775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6114:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6114:70:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25779,
                  "nodeType": "ExpressionStatement",
                  "src": "6114:70:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25781,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25723,
                        "src": "6223:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25782,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25746,
                        "src": "6230:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 25783,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25892,
                          "src": "6239:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 25784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6239:7:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25780,
                      "name": "Erc20TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25560,
                      "src": "6202:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 25785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6202:45:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25786,
                  "nodeType": "EmitStatement",
                  "src": "6197:50:14"
                }
              ]
            },
            "documentation": {
              "id": 25721,
              "nodeType": "StructuredDocumentation",
              "src": "5440:173:14",
              "text": "@notice Is used to remove ERC20 tokens from the contract.\n @dev token address cannot be $PROVE\n @param token contract address of token we wish to remove."
            },
            "functionSelector": "c7e42b1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25726,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25725,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5666:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25906,
                  "src": "5666:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5666:11:14"
              }
            ],
            "name": "withdrawErc20",
            "nameLocation": "5628:13:14",
            "parameters": {
              "id": 25724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25723,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5650:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25788,
                  "src": "5642:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5642:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5641:15:14"
            },
            "returnParameters": {
              "id": 25727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5678:0:14"
            },
            "scope": 25817,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25797,
            "nodeType": "FunctionDefinition",
            "src": "6499:75:14",
            "nodes": [],
            "body": {
              "id": 25796,
              "nodeType": "Block",
              "src": "6572:2:14",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 25789,
              "nodeType": "StructuredDocumentation",
              "src": "6306:187:14",
              "text": "@notice This function returns the amount of tokens to claim for a specified investor.\n @param account  address of investor.\n @return uint256 amount of tokens to claim."
            },
            "functionSelector": "0bca8bcd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountToClaim",
            "nameLocation": "6508:16:14",
            "parameters": {
              "id": 25792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25791,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6533:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25797,
                  "src": "6525:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6525:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6524:17:14"
            },
            "returnParameters": {
              "id": 25795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25797,
                  "src": "6563:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6563:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6562:9:14"
            },
            "scope": 25817,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25806,
            "nodeType": "FunctionDefinition",
            "src": "6774:75:14",
            "nodes": [],
            "body": {
              "id": 25805,
              "nodeType": "Block",
              "src": "6847:2:14",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 25798,
              "nodeType": "StructuredDocumentation",
              "src": "6582:186:14",
              "text": "@notice This function returns the amount of tokens an investor HAS claimed.\n @param account address of investor.\n @return uint256 amount of tokens claimed by account."
            },
            "functionSelector": "d36862e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountClaimed",
            "nameLocation": "6783:16:14",
            "parameters": {
              "id": 25801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25800,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6808:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25806,
                  "src": "6800:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6800:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6799:17:14"
            },
            "returnParameters": {
              "id": 25804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25806,
                  "src": "6838:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6838:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6837:9:14"
            },
            "scope": 25817,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25816,
            "nodeType": "FunctionDefinition",
            "src": "6857:111:14",
            "nodes": [],
            "body": {
              "id": 25815,
              "nodeType": "Block",
              "src": "6927:41:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25813,
                    "name": "investorLibrary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25496,
                    "src": "6945:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Investor_$25503_storage_$dyn_storage",
                      "typeString": "struct Vesting.Investor storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 25812,
                  "id": 25814,
                  "nodeType": "Return",
                  "src": "6938:22:14"
                }
              ]
            },
            "functionSelector": "50ad827a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInvestorLibrary",
            "nameLocation": "6866:18:14",
            "parameters": {
              "id": 25807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6884:2:14"
            },
            "returnParameters": {
              "id": 25812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25811,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25816,
                  "src": "6908:17:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Investor_$25503_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Vesting.Investor[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 25809,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 25808,
                        "name": "Investor",
                        "nameLocations": [
                          "6908:8:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25503,
                        "src": "6908:8:14"
                      },
                      "referencedDeclaration": 25503,
                      "src": "6908:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$25503_storage_ptr",
                        "typeString": "struct Vesting.Investor"
                      }
                    },
                    "id": 25810,
                    "nodeType": "ArrayTypeName",
                    "src": "6908:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Investor_$25503_storage_$dyn_storage_ptr",
                      "typeString": "struct Vesting.Investor[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6907:19:14"
            },
            "scope": 25817,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25482,
              "name": "Ownable",
              "nameLocations": [
                "514:7:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25991,
              "src": "514:7:14"
            },
            "id": 25483,
            "nodeType": "InheritanceSpecifier",
            "src": "514:7:14"
          }
        ],
        "canonicalName": "Vesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25481,
          "nodeType": "StructuredDocumentation",
          "src": "231:263:14",
          "text": "@notice This contract will hold $PROVE tokens in escrow\n         This contract will facilitate the private sale investor vesting tokens\n         This contract will follow a strict vesting schedule\n         This contract will follow a claim model"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25817,
          25991,
          25843
        ],
        "name": "Vesting",
        "nameLocation": "503:7:14",
        "scope": 25818,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 14
}