{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proveToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "Erc20TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountClaimed",
          "type": "uint256"
        }
      ],
      "name": "ProveClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "VestingEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "investorAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokensToVest",
          "type": "uint256"
        }
      ],
      "name": "addInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAmountClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAmountToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isInvestor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proveToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartUnix",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051610c65380380610c6583398101604081905261002f916101a4565b600080546001600160a01b03191633908117825560405190918291600080516020610c45833981519152908290a3506001600160a01b0382166080526100748161007b565b50506101d7565b6000546001600160a01b031633146100da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661013f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d1565b600080546040516001600160a01b0380851693921691600080516020610c4583398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b038116811461019f57600080fd5b919050565b600080604083850312156101b757600080fd5b6101c083610188565b91506101ce60208401610188565b90509250929050565b608051610a4c6101f96000396000818161016801526103ea0152610a4c6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063dd46706411610066578063dd467064146101f3578063ec20b45714610206578063f02c6d8f14610219578063f2fde38b1461022257600080fd5b80638da5cb5b146101a2578063c7e42b1b146101b3578063cee2a9cf146101c6578063d36862e8146100fa57600080fd5b80635b904cb7116100d35780635b904cb714610136578063715018a61461013e5780637f87bbd61461014657806385d4cad31461016357600080fd5b80630bca8bcd146100fa57806342714978146101215780634e71d92d14610134575b600080fd5b61010e61010836600461091b565b50600090565b6040519081526020015b60405180910390f35b61013461012f36600461091b565b610235565b005b61013461026b565b61013461034a565b6004546101539060ff1681565b6040519015158152602001610118565b61018a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610118565b6000546001600160a01b031661018a565b6101346101c136600461091b565b6103be565b6101dc6101d436600461091b565b600080915091565b604080519215158352602083019190915201610118565b61013461020136600461093d565b610750565b610134610214366004610956565b6107e7565b61010e60035481565b61013461023036600461091b565b610815565b6000546001600160a01b031633146102685760405162461bcd60e51b815260040161025f90610980565b60405180910390fd5b50565b6000546001600160a01b031633146102955760405162461bcd60e51b815260040161025f90610980565b60045460ff161561030e5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657360448201527f74696e6720697320616c726561647920656e61626c6564000000000000000000606482015260840161025f565b6004805460ff19166001179055426003556040517ff78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa390600090a1565b6000546001600160a01b031633146103745760405162461bcd60e51b815260040161025f90610980565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146103e85760405162461bcd60e51b815260040161025f90610980565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03160361048f5760405162461bcd60e51b815260206004820152603960248201527f56657374696e672e736f6c3a3a7769746864726177457263323028292063616e60448201527f6e6f74207769746864726177202450524f564520746f6b656e00000000000000606482015260840161025f565b6001600160a01b03811661050b5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b60448201527f656e2063616e6e6f742062652061646472657373283029000000000000000000606482015260840161025f565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610552573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057691906109b5565b9050600081116105ee5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920696e7360448201527f756666696369656e7420746f6b656e2062616c616e6365000000000000000000606482015260840161025f565b6000826001600160a01b031663a9059cbb6106116000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068291906109ce565b9050806106ec5760405162461bcd60e51b815260206004820152603260248201527f56657374696e672e736f6c3a3a776974686472617745726332302829207472616044820152711b9cd9995c881d5b9cdd58d8d95cdcd99d5b60721b606482015260840161025f565b7f3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f83836107216000546001600160a01b031690565b604080516001600160a01b039485168152602081019390935292168183015290519081900360600190a1505050565b6000546001600160a01b0316331461077a5760405162461bcd60e51b815260040161025f90610980565b60008054600180546001600160a01b03199081166001600160a01b038416179091551690556107a981426109f0565b600255600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a350565b6000546001600160a01b031633146108115760405162461bcd60e51b815260040161025f90610980565b5050565b6000546001600160a01b0316331461083f5760405162461bcd60e51b815260040161025f90610980565b6001600160a01b0381166108a45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461091657600080fd5b919050565b60006020828403121561092d57600080fd5b610936826108ff565b9392505050565b60006020828403121561094f57600080fd5b5035919050565b6000806040838503121561096957600080fd5b610972836108ff565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156109c757600080fd5b5051919050565b6000602082840312156109e057600080fd5b8151801515811461093657600080fd5b60008219821115610a1157634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122088219a24839274a5f21441687c8be63231e0af6db61ac6a433a4d2425055f2bc64736f6c634300080f00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
    "sourceMap": "482:5063:14:-:0;;;1230:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;955:17:16;998:18;;-1:-1:-1;;;;;;998:18:16;699:10:15;998:18:16;;;;;1032:43;;699:10:15;;;;-1:-1:-1;;;;;;;;;;;1032:43:16;955:17;;1032:43;-1:-1:-1;;;;;;1289:24:14;;;;1323:25;1341:6;1323:17;:25::i;:::-;1230:125;;482:5063;;2118:244:16;1210:7;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;696:2:21;1376:68:16;;;678:21:21;;;715:18;;;708:30;774:34;754:18;;;747:62;826:18;;1376:68:16;;;;;;;;;-1:-1:-1;;;;;2207:22:16;::::1;2199:73;;;::::0;-1:-1:-1;;;2199:73:16;;1057:2:21;2199:73:16::1;::::0;::::1;1039:21:21::0;1096:2;1076:18;;;1069:30;1135:34;1115:18;;;1108:62;-1:-1:-1;;;1186:18:21;;;1179:36;1232:19;;2199:73:16::1;855:402:21::0;2199:73:16::1;2309:6;::::0;;2288:38:::1;::::0;-1:-1:-1;;;;;2288:38:16;;::::1;::::0;2309:6;::::1;::::0;-1:-1:-1;;;;;;;;;;;2288:38:16;::::1;2337:6;:17:::0;;-1:-1:-1;;;;;;2337:17:16::1;-1:-1:-1::0;;;;;2337:17:16;;;::::1;::::0;;;::::1;::::0;;2118:244::o;14:177:21:-;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;855:402::-;482:5063:14;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063dd46706411610066578063dd467064146101f3578063ec20b45714610206578063f02c6d8f14610219578063f2fde38b1461022257600080fd5b80638da5cb5b146101a2578063c7e42b1b146101b3578063cee2a9cf146101c6578063d36862e8146100fa57600080fd5b80635b904cb7116100d35780635b904cb714610136578063715018a61461013e5780637f87bbd61461014657806385d4cad31461016357600080fd5b80630bca8bcd146100fa57806342714978146101215780634e71d92d14610134575b600080fd5b61010e61010836600461091b565b50600090565b6040519081526020015b60405180910390f35b61013461012f36600461091b565b610235565b005b61013461026b565b61013461034a565b6004546101539060ff1681565b6040519015158152602001610118565b61018a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610118565b6000546001600160a01b031661018a565b6101346101c136600461091b565b6103be565b6101dc6101d436600461091b565b600080915091565b604080519215158352602083019190915201610118565b61013461020136600461093d565b610750565b610134610214366004610956565b6107e7565b61010e60035481565b61013461023036600461091b565b610815565b6000546001600160a01b031633146102685760405162461bcd60e51b815260040161025f90610980565b60405180910390fd5b50565b6000546001600160a01b031633146102955760405162461bcd60e51b815260040161025f90610980565b60045460ff161561030e5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657360448201527f74696e6720697320616c726561647920656e61626c6564000000000000000000606482015260840161025f565b6004805460ff19166001179055426003556040517ff78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa390600090a1565b6000546001600160a01b031633146103745760405162461bcd60e51b815260040161025f90610980565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146103e85760405162461bcd60e51b815260040161025f90610980565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03160361048f5760405162461bcd60e51b815260206004820152603960248201527f56657374696e672e736f6c3a3a7769746864726177457263323028292063616e60448201527f6e6f74207769746864726177202450524f564520746f6b656e00000000000000606482015260840161025f565b6001600160a01b03811661050b5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b60448201527f656e2063616e6e6f742062652061646472657373283029000000000000000000606482015260840161025f565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610552573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057691906109b5565b9050600081116105ee5760405162461bcd60e51b815260206004820152603760248201527f56657374696e672e736f6c3a3a77697468647261774572633230282920696e7360448201527f756666696369656e7420746f6b656e2062616c616e6365000000000000000000606482015260840161025f565b6000826001600160a01b031663a9059cbb6106116000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068291906109ce565b9050806106ec5760405162461bcd60e51b815260206004820152603260248201527f56657374696e672e736f6c3a3a776974686472617745726332302829207472616044820152711b9cd9995c881d5b9cdd58d8d95cdcd99d5b60721b606482015260840161025f565b7f3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f83836107216000546001600160a01b031690565b604080516001600160a01b039485168152602081019390935292168183015290519081900360600190a1505050565b6000546001600160a01b0316331461077a5760405162461bcd60e51b815260040161025f90610980565b60008054600180546001600160a01b03199081166001600160a01b038416179091551690556107a981426109f0565b600255600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a350565b6000546001600160a01b031633146108115760405162461bcd60e51b815260040161025f90610980565b5050565b6000546001600160a01b0316331461083f5760405162461bcd60e51b815260040161025f90610980565b6001600160a01b0381166108a45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461091657600080fd5b919050565b60006020828403121561092d57600080fd5b610936826108ff565b9392505050565b60006020828403121561094f57600080fd5b5035919050565b6000806040838503121561096957600080fd5b610972836108ff565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156109c757600080fd5b5051919050565b6000602082840312156109e057600080fd5b8151801515811461093657600080fd5b60008219821115610a1157634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122088219a24839274a5f21441687c8be63231e0af6db61ac6a433a4d2425055f2bc64736f6c634300080f0033",
    "sourceMap": "482:5063:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4776:75;;;;;;:::i;:::-;-1:-1:-1;4840:7:14;;4776:75;;;;529:25:21;;;517:2;502:18;4776:75:14;;;;;;;;3254:64;;;;;;:::i;:::-;;:::i;:::-;;3481:254;;;:::i;1815:148:16:-;;;:::i;760:26:14:-;;;;;;;;;;;;730:14:21;;723:22;705:41;;693:2;678:18;760:26:14;565:187:21;587:35:14;;;;;;;;-1:-1:-1;;;;;921:32:21;;;903:51;;891:2;876:18;587:35:14;757:203:21;1164:87:16;1210:7;1237:6;-1:-1:-1;;;;;1237:6:16;1164:87;;3917:625:14;;;;;;:::i;:::-;;:::i;5467:75::-;;;;;;:::i;:::-;5525:4;5531:7;5467:75;;;;;;;;1158:14:21;;1151:22;1133:41;;1205:2;1190:18;;1183:34;;;;1106:18;5467:75:14;965:258:21;2444:226:16;;;;;;:::i;:::-;;:::i;3012:83:14:-;;;;;;:::i;:::-;;:::i;668:31::-;;;;;;2118:244:16;;;;;;:::i;:::-;;:::i;3254:64:14:-;1210:7:16;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;;;;;;;;;3254:64:14;:::o;3481:254::-;1210:7:16;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;3546:14:14::1;::::0;::::1;;3545:15;3537:83;;;::::0;-1:-1:-1;;;3537:83:14;;2235:2:21;3537:83:14::1;::::0;::::1;2217:21:21::0;2274:2;2254:18;;;2247:30;2313:34;2293:18;;;2286:62;2384:25;2364:18;;;2357:53;2427:19;;3537:83:14::1;2033:419:21::0;3537:83:14::1;3631:14;:21:::0;;-1:-1:-1;;3631:21:14::1;3648:4;3631:21;::::0;;3681:15:::1;3662:16;:34:::0;3712:16:::1;::::0;::::1;::::0;3631:14:::1;::::0;3712:16:::1;3481:254::o:0;1815:148:16:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;1922:1:::1;1906:6:::0;;1885:40:::1;::::0;-1:-1:-1;;;;;1906:6:16;;::::1;::::0;1885:40:::1;::::0;1922:1;;1885:40:::1;1953:1;1936:19:::0;;-1:-1:-1;;;;;;1936:19:16::1;::::0;;1815:148::o;3917:625:14:-;1210:7:16;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;4003:10:14::1;-1:-1:-1::0;;;;;3994:19:14::1;:5;-1:-1:-1::0;;;;;3994:19:14::1;::::0;3986:89:::1;;;::::0;-1:-1:-1;;;3986:89:14;;2659:2:21;3986:89:14::1;::::0;::::1;2641:21:21::0;2698:2;2678:18;;;2671:30;2737:34;2717:18;;;2710:62;2808:27;2788:18;;;2781:55;2853:19;;3986:89:14::1;2457:421:21::0;3986:89:14::1;-1:-1:-1::0;;;;;4093:19:14;::::1;4085:87;;;::::0;-1:-1:-1;;;4085:87:14;;3085:2:21;4085:87:14::1;::::0;::::1;3067:21:21::0;3124:2;3104:18;;;3097:30;3163:34;3143:18;;;3136:62;3234:25;3214:18;;;3207:53;3277:19;;4085:87:14::1;2883:419:21::0;4085:87:14::1;4201:38;::::0;-1:-1:-1;;;4201:38:14;;4233:4:::1;4201:38;::::0;::::1;903:51:21::0;4183:15:14::1;::::0;-1:-1:-1;;;;;4201:23:14;::::1;::::0;::::1;::::0;876:18:21;;4201:38:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4183:56;;4267:1;4257:7;:11;4249:79;;;::::0;-1:-1:-1;;;4249:79:14;;3698:2:21;4249:79:14::1;::::0;::::1;3680:21:21::0;3737:2;3717:18;;;3710:30;3776:34;3756:18;;;3749:62;3847:25;3827:18;;;3820:53;3890:19;;4249:79:14::1;3496:419:21::0;4249:79:14::1;4339:12;4361:5;-1:-1:-1::0;;;;;4354:22:14::1;;4377:7;1210::16::0;1237:6;-1:-1:-1;;;;;1237:6:16;;1164:87;4377:7:14::1;4354:40;::::0;-1:-1:-1;;;;;;4354:40:14::1;::::0;;;;;;-1:-1:-1;;;;;4112:32:21;;;4354:40:14::1;::::0;::::1;4094:51:21::0;4161:18;;;4154:34;;;4067:18;;4354:40:14::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4339:55;;4412:7;4404:70;;;::::0;-1:-1:-1;;;4404:70:14;;4683:2:21;4404:70:14::1;::::0;::::1;4665:21:21::0;4722:2;4702:18;;;4695:30;4761:34;4741:18;;;4734:62;-1:-1:-1;;;4812:18:21;;;4805:48;4870:19;;4404:70:14::1;4481:414:21::0;4404:70:14::1;4490:45;4511:5;4518:7;4527;1210::16::0;1237:6;-1:-1:-1;;;;;1237:6:16;;1164:87;4527:7:14::1;4490:45;::::0;;-1:-1:-1;;;;;5158:15:21;;;5140:34;;5205:2;5190:18;;5183:34;;;;5253:15;;5233:18;;;5226:43;4490:45:14;;;;;;5090:2:21;4490:45:14;;::::1;3976:566;;3917:625:::0;:::o;2444:226:16:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;2525:6:::1;::::0;;;2508:23;;-1:-1:-1;;;;;;2508:23:16;;::::1;-1:-1:-1::0;;;;;2525:6:16;::::1;2508:23;::::0;;;2542:19:::1;::::0;;2584:22:::1;2602:4:::0;2584:15:::1;:22;:::i;:::-;2572:9;:34:::0;2659:1:::1;2643:6:::0;;2622:40:::1;::::0;-1:-1:-1;;;;;2643:6:16;;::::1;::::0;2622:40:::1;::::0;2659:1;;2622:40:::1;2444:226:::0;:::o;3012:83:14:-;1210:7:16;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;3012:83:14;;:::o;2118:244:16:-;1210:7;1237:6;-1:-1:-1;;;;;1237:6:16;699:10:15;1384:23:16;1376:68;;;;-1:-1:-1;;;1376:68:16;;;;;;;:::i;:::-;-1:-1:-1;;;;;2207:22:16;::::1;2199:73;;;::::0;-1:-1:-1;;;2199:73:16;;5712:2:21;2199:73:16::1;::::0;::::1;5694:21:21::0;5751:2;5731:18;;;5724:30;5790:34;5770:18;;;5763:62;-1:-1:-1;;;5841:18:21;;;5834:36;5887:19;;2199:73:16::1;5510:402:21::0;2199:73:16::1;2309:6;::::0;;2288:38:::1;::::0;-1:-1:-1;;;;;2288:38:16;;::::1;::::0;2309:6;::::1;::::0;2288:38:::1;::::0;::::1;2337:6;:17:::0;;-1:-1:-1;;;;;;2337:17:16::1;-1:-1:-1::0;;;;;2337:17:16;;;::::1;::::0;;;::::1;::::0;;2118:244::o;14:173:21:-;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:21:o;1228:180::-;1287:6;1340:2;1328:9;1319:7;1315:23;1311:32;1308:52;;;1356:1;1353;1346:12;1308:52;-1:-1:-1;1379:23:21;;1228:180;-1:-1:-1;1228:180:21:o;1413:254::-;1481:6;1489;1542:2;1530:9;1521:7;1517:23;1513:32;1510:52;;;1558:1;1555;1548:12;1510:52;1581:29;1600:9;1581:29;:::i;:::-;1571:39;1657:2;1642:18;;;;1629:32;;-1:-1:-1;;;1413:254:21:o;1672:356::-;1874:2;1856:21;;;1893:18;;;1886:30;1952:34;1947:2;1932:18;;1925:62;2019:2;2004:18;;1672:356::o;3307:184::-;3377:6;3430:2;3418:9;3409:7;3405:23;3401:32;3398:52;;;3446:1;3443;3436:12;3398:52;-1:-1:-1;3469:16:21;;3307:184;-1:-1:-1;3307:184:21:o;4199:277::-;4266:6;4319:2;4307:9;4298:7;4294:23;4290:32;4287:52;;;4335:1;4332;4325:12;4287:52;4367:9;4361:16;4420:5;4413:13;4406:21;4399:5;4396:32;4386:60;;4442:1;4439;4432:12;5280:225;5320:3;5351:1;5347:6;5344:1;5341:13;5338:136;;;5396:10;5391:3;5387:20;5384:1;5377:31;5431:4;5428:1;5421:15;5459:4;5456:1;5449:15;5338:136;-1:-1:-1;5490:9:21;;5280:225::o",
    "linkReferences": {},
    "immutableReferences": {
      "25485": [
        {
          "start": 360,
          "length": 32
        },
        {
          "start": 1002,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addInvestor(address,uint256)": "ec20b457",
    "claim()": "4e71d92d",
    "enableVesting()": "5b904cb7",
    "getAmountClaimed(address)": "d36862e8",
    "getAmountToClaim(address)": "0bca8bcd",
    "isInvestor(address)": "cee2a9cf",
    "lock(uint256)": "dd467064",
    "owner()": "8da5cb5b",
    "proveToken()": "85d4cad3",
    "removeInvestor(address)": "42714978",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "vestingEnabled()": "7f87bbd6",
    "vestingStartUnix()": "f02c6d8f",
    "withdrawErc20(address)": "c7e42b1b"
  },
  "ast": {
    "absolutePath": "src/Vesting.sol",
    "id": 25697,
    "exportedSymbols": {
      "Context": [
        25722
      ],
      "IERC20": [
        26004
      ],
      "Ownable": [
        25870
      ],
      "Vesting": [
        25696
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:5507:14",
    "nodes": [
      {
        "id": 25477,
        "nodeType": "PragmaDirective",
        "src": "39:24:14",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 25478,
        "nodeType": "ImportDirective",
        "src": "65:34:14",
        "absolutePath": "src/extensions/Ownable.sol",
        "file": "./extensions/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25697,
        "sourceUnit": 25871,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25480,
        "nodeType": "ImportDirective",
        "src": "100:51:14",
        "absolutePath": "src/interfaces/Interfaces.sol",
        "file": "./interfaces/Interfaces.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25697,
        "sourceUnit": 26786,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25479,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26004,
              "src": "108:6:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25696,
        "nodeType": "ContractDefinition",
        "src": "482:5063:14",
        "nodes": [
          {
            "id": 25485,
            "nodeType": "VariableDeclaration",
            "src": "587:35:14",
            "constant": false,
            "functionSelector": "85d4cad3",
            "mutability": "immutable",
            "name": "proveToken",
            "nameLocation": "612:10:14",
            "scope": 25696,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25484,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "587:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25488,
            "nodeType": "VariableDeclaration",
            "src": "668:31:14",
            "constant": false,
            "documentation": {
              "id": 25486,
              "nodeType": "StructuredDocumentation",
              "src": "625:38:14",
              "text": "@notice The vested token address."
            },
            "functionSelector": "f02c6d8f",
            "mutability": "mutable",
            "name": "vestingStartUnix",
            "nameLocation": "683:16:14",
            "scope": 25696,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25487,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25491,
            "nodeType": "VariableDeclaration",
            "src": "760:26:14",
            "constant": false,
            "documentation": {
              "id": 25489,
              "nodeType": "StructuredDocumentation",
              "src": "702:53:14",
              "text": "@notice block timestamp of when vesting has begun"
            },
            "functionSelector": "7f87bbd6",
            "mutability": "mutable",
            "name": "vestingEnabled",
            "nameLocation": "772:14:14",
            "scope": 25696,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 25490,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "760:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25496,
            "nodeType": "VariableDeclaration",
            "src": "838:26:14",
            "constant": false,
            "documentation": {
              "id": 25492,
              "nodeType": "StructuredDocumentation",
              "src": "794:39:14",
              "text": "@notice vesting enabled when true."
            },
            "mutability": "mutable",
            "name": "investorLibrary",
            "nameLocation": "849:15:14",
            "scope": 25696,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Investor_$25501_storage_$dyn_storage",
              "typeString": "struct Vesting.Investor[]"
            },
            "typeName": {
              "baseType": {
                "id": 25494,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25493,
                  "name": "Investor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25501,
                  "src": "838:8:14"
                },
                "referencedDeclaration": 25501,
                "src": "838:8:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$25501_storage_ptr",
                  "typeString": "struct Vesting.Investor"
                }
              },
              "id": 25495,
              "nodeType": "ArrayTypeName",
              "src": "838:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Investor_$25501_storage_$dyn_storage_ptr",
                "typeString": "struct Vesting.Investor[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25501,
            "nodeType": "StructDefinition",
            "src": "1081:84:14",
            "canonicalName": "Vesting.Investor",
            "members": [
              {
                "constant": false,
                "id": 25498,
                "mutability": "mutable",
                "name": "tokensToVest",
                "nameLocation": "1115:12:14",
                "nodeType": "VariableDeclaration",
                "scope": 25501,
                "src": "1107:20:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25497,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1107:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25500,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "1145:13:14",
                "nodeType": "VariableDeclaration",
                "scope": 25501,
                "src": "1137:21:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25499,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1137:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "1088:8:14",
            "scope": 25696,
            "visibility": "public"
          },
          {
            "id": 25517,
            "nodeType": "FunctionDefinition",
            "src": "1230:125:14",
            "body": {
              "id": 25516,
              "nodeType": "Block",
              "src": "1279:76:14",
              "statements": [
                {
                  "expression": {
                    "id": 25510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25508,
                      "name": "proveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25485,
                      "src": "1289:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25509,
                      "name": "_proveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25503,
                      "src": "1302:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1289:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25511,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:24:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25513,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25505,
                        "src": "1341:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25512,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25835,
                      "src": "1323:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1323:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25515,
                  "nodeType": "ExpressionStatement",
                  "src": "1323:25:14"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25503,
                  "mutability": "mutable",
                  "name": "_proveToken",
                  "nameLocation": "1250:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25517,
                  "src": "1242:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25505,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1271:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25517,
                  "src": "1263:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1241:37:14"
            },
            "returnParameters": {
              "id": 25507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1279:0:14"
            },
            "scope": 25696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25522,
            "nodeType": "ModifierDefinition",
            "src": "1475:75:14",
            "body": {
              "id": 25521,
              "nodeType": "Block",
              "src": "1499:51:14",
              "statements": [
                {
                  "id": 25520,
                  "nodeType": "PlaceholderStatement",
                  "src": "1542:1:14"
                }
              ]
            },
            "documentation": {
              "id": 25518,
              "nodeType": "StructuredDocumentation",
              "src": "1414:56:14",
              "text": "@dev modifier to check if msg.sender is an investor."
            },
            "name": "onlyInvestor",
            "nameLocation": "1484:12:14",
            "parameters": {
              "id": 25519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1496:2:14"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25529,
            "nodeType": "EventDefinition",
            "src": "1811:59:14",
            "anonymous": false,
            "documentation": {
              "id": 25523,
              "nodeType": "StructuredDocumentation",
              "src": "1600:206:14",
              "text": "@notice This event is emitted when claim() is successfully executed.\n @param account is the wallet address of msg.sender.\n @param amountClaimed is the amount of tokens the account claimed."
            },
            "eventSelector": "c9ff33ee3842ec05cab3a4e2b17aa19694b6c461ea543be5752366f912a6539d",
            "name": "ProveClaimed",
            "nameLocation": "1817:12:14",
            "parameters": {
              "id": 25528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25525,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1838:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25529,
                  "src": "1830:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25527,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountClaimed",
                  "nameLocation": "1855:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25529,
                  "src": "1847:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:40:14"
            }
          },
          {
            "id": 25534,
            "nodeType": "EventDefinition",
            "src": "2055:37:14",
            "anonymous": false,
            "documentation": {
              "id": 25530,
              "nodeType": "StructuredDocumentation",
              "src": "1876:174:14",
              "text": "@notice This event is emitted when addInvestor() is successfully executed.\n @param account is the wallet address of investor that was addes to the investorLibrary."
            },
            "eventSelector": "2c385ad016af1d5b8f4eefb8aef02929aa692e7f6d846488519f2513bd7170e0",
            "name": "investorAdded",
            "nameLocation": "2061:13:14",
            "parameters": {
              "id": 25533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25532,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2083:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25534,
                  "src": "2075:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2074:17:14"
            }
          },
          {
            "id": 25543,
            "nodeType": "EventDefinition",
            "src": "2302:76:14",
            "anonymous": false,
            "documentation": {
              "id": 25535,
              "nodeType": "StructuredDocumentation",
              "src": "2098:199:14",
              "text": "@notice This event is emitted when withdrawErc20() is executed.\n @param token address of Erc20 token.\n @param amount tokens withdrawn.\n @param receiver address of msg.sender."
            },
            "eventSelector": "3ff9434501bb42cce78344c3420ec1273f8b404aba16aaae994c0d413b91bb4f",
            "name": "Erc20TokensWithdrawn",
            "nameLocation": "2308:20:14",
            "parameters": {
              "id": 25542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25537,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2337:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25543,
                  "src": "2329:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2329:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25539,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2352:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25543,
                  "src": "2344:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2344:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25541,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2368:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25543,
                  "src": "2360:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2360:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2328:49:14"
            }
          },
          {
            "id": 25546,
            "nodeType": "EventDefinition",
            "src": "2486:23:14",
            "anonymous": false,
            "documentation": {
              "id": 25544,
              "nodeType": "StructuredDocumentation",
              "src": "2384:97:14",
              "text": "@notice This event is emitted when enableVesting() is executed. Should only be executed once."
            },
            "eventSelector": "f78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa3",
            "name": "VestingEnabled",
            "nameLocation": "2492:14:14",
            "parameters": {
              "id": 25545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2506:2:14"
            }
          },
          {
            "id": 25553,
            "nodeType": "FunctionDefinition",
            "src": "2666:43:14",
            "body": {
              "id": 25552,
              "nodeType": "Block",
              "src": "2707:2:14",
              "statements": []
            },
            "documentation": {
              "id": 25547,
              "nodeType": "StructuredDocumentation",
              "src": "2568:93:14",
              "text": "@notice Used to claim vested tokens.\n @dev msg.sender must be the investor address"
            },
            "functionSelector": "4e71d92d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25550,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25549,
                  "name": "onlyInvestor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25522,
                  "src": "2692:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2692:14:14"
              }
            ],
            "name": "claim",
            "nameLocation": "2675:5:14",
            "parameters": {
              "id": 25548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2680:2:14"
            },
            "returnParameters": {
              "id": 25551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2707:0:14"
            },
            "scope": 25696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25564,
            "nodeType": "FunctionDefinition",
            "src": "3012:83:14",
            "body": {
              "id": 25563,
              "nodeType": "Block",
              "src": "3093:2:14",
              "statements": []
            },
            "documentation": {
              "id": 25554,
              "nodeType": "StructuredDocumentation",
              "src": "2786:221:14",
              "text": "@notice This function adds an address to the investorLibrary.\n @param account the wallet address of investor being added.\n @param tokensToVest the amount of $PROVE that is being vested for that investor."
            },
            "functionSelector": "ec20b457",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25561,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25560,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25785,
                  "src": "3081:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3081:11:14"
              }
            ],
            "name": "addInvestor",
            "nameLocation": "3021:11:14",
            "parameters": {
              "id": 25559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25556,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3041:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25564,
                  "src": "3033:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25558,
                  "mutability": "mutable",
                  "name": "tokensToVest",
                  "nameLocation": "3058:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25564,
                  "src": "3050:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3032:39:14"
            },
            "returnParameters": {
              "id": 25562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3093:0:14"
            },
            "scope": 25696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25573,
            "nodeType": "FunctionDefinition",
            "src": "3254:64:14",
            "body": {
              "id": 25572,
              "nodeType": "Block",
              "src": "3316:2:14",
              "statements": []
            },
            "documentation": {
              "id": 25565,
              "nodeType": "StructuredDocumentation",
              "src": "3101:148:14",
              "text": "@notice This function removes an investor from the investorLibrary.\n @param account the wallet address of investor that is being removed."
            },
            "functionSelector": "42714978",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25570,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25569,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25785,
                  "src": "3304:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3304:11:14"
              }
            ],
            "name": "removeInvestor",
            "nameLocation": "3263:14:14",
            "parameters": {
              "id": 25568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25567,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3286:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25573,
                  "src": "3278:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3277:17:14"
            },
            "returnParameters": {
              "id": 25571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3316:0:14"
            },
            "scope": 25696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25598,
            "nodeType": "FunctionDefinition",
            "src": "3481:254:14",
            "body": {
              "id": 25597,
              "nodeType": "Block",
              "src": "3527:208:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3545:15:14",
                        "subExpression": {
                          "id": 25580,
                          "name": "vestingEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25491,
                          "src": "3546:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a656e61626c6556657374696e6728292076657374696e6720697320616c726561647920656e61626c6564",
                        "id": 25582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3562:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b81e7806853eebb1dd20d036cf5def1e03a3259047e4c17a645085fd705441b0",
                          "typeString": "literal_string \"Vesting.sol::enableVesting() vesting is already enabled\""
                        },
                        "value": "Vesting.sol::enableVesting() vesting is already enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b81e7806853eebb1dd20d036cf5def1e03a3259047e4c17a645085fd705441b0",
                          "typeString": "literal_string \"Vesting.sol::enableVesting() vesting is already enabled\""
                        }
                      ],
                      "id": 25579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3537:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3537:83:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25584,
                  "nodeType": "ExpressionStatement",
                  "src": "3537:83:14"
                },
                {
                  "expression": {
                    "id": 25587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25585,
                      "name": "vestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25491,
                      "src": "3631:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 25586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3648:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3631:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25588,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:21:14"
                },
                {
                  "expression": {
                    "id": 25592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25589,
                      "name": "vestingStartUnix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25488,
                      "src": "3662:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 25590,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3681:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 25591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3681:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3662:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25593,
                  "nodeType": "ExpressionStatement",
                  "src": "3662:34:14"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25594,
                      "name": "VestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25546,
                      "src": "3712:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 25595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3712:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25596,
                  "nodeType": "EmitStatement",
                  "src": "3707:21:14"
                }
              ]
            },
            "documentation": {
              "id": 25574,
              "nodeType": "StructuredDocumentation",
              "src": "3324:152:14",
              "text": "@notice This function starts the vesting period.\n @dev will set start time to vestingStartUnix.\n      will set vestingEnabled to true."
            },
            "functionSelector": "5b904cb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25577,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25576,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25785,
                  "src": "3515:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3515:11:14"
              }
            ],
            "name": "enableVesting",
            "nameLocation": "3490:13:14",
            "parameters": {
              "id": 25575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3503:2:14"
            },
            "returnParameters": {
              "id": 25578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3527:0:14"
            },
            "scope": 25696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25666,
            "nodeType": "FunctionDefinition",
            "src": "3917:625:14",
            "body": {
              "id": 25665,
              "nodeType": "Block",
              "src": "3976:566:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25607,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25601,
                          "src": "3994:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 25608,
                          "name": "proveToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25485,
                          "src": "4003:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3994:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a7769746864726177457263323028292063616e6e6f74207769746864726177202450524f564520746f6b656e",
                        "id": 25610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4015:59:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75db5b4aa55e9f0b03e4a8c070f8f66290a98338aaae1576bb806eef1f0080d2",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() cannot withdraw $PROVE token\""
                        },
                        "value": "Vesting.sol::withdrawErc20() cannot withdraw $PROVE token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75db5b4aa55e9f0b03e4a8c070f8f66290a98338aaae1576bb806eef1f0080d2",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() cannot withdraw $PROVE token\""
                        }
                      ],
                      "id": 25606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3986:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3986:89:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25612,
                  "nodeType": "ExpressionStatement",
                  "src": "3986:89:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25614,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25601,
                          "src": "4093:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4110:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4102:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25615,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4102:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4102:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4093:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a77697468647261774572633230282920746f6b656e2063616e6e6f742062652061646472657373283029",
                        "id": 25620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4114:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29e76f784f984a6a07713ea53163c68fa39fa9a65b7a983cda7f9b66495bef31",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() token cannot be address(0)\""
                        },
                        "value": "Vesting.sol::withdrawErc20() token cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29e76f784f984a6a07713ea53163c68fa39fa9a65b7a983cda7f9b66495bef31",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() token cannot be address(0)\""
                        }
                      ],
                      "id": 25613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4085:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4085:87:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25622,
                  "nodeType": "ExpressionStatement",
                  "src": "4085:87:14"
                },
                {
                  "assignments": [
                    25624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25624,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4191:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 25665,
                      "src": "4183:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25623,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4183:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25634,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25631,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4233:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vesting_$25696",
                              "typeString": "contract Vesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vesting_$25696",
                              "typeString": "contract Vesting"
                            }
                          ],
                          "id": 25630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4225:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4225:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4225:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25626,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25601,
                            "src": "4208:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25625,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26004,
                          "src": "4201:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$26004_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4201:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26004",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25943,
                      "src": "4201:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:38:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4183:56:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25636,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25624,
                          "src": "4257:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4267:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4257:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a77697468647261774572633230282920696e73756666696369656e7420746f6b656e2062616c616e6365",
                        "id": 25639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4270:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85892f03ec8e97515a01b84c9239dbced7e62306353ae22f1c016c668c87f26e",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() insufficient token balance\""
                        },
                        "value": "Vesting.sol::withdrawErc20() insufficient token balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85892f03ec8e97515a01b84c9239dbced7e62306353ae22f1c016c668c87f26e",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() insufficient token balance\""
                        }
                      ],
                      "id": 25635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4249:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4249:79:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25641,
                  "nodeType": "ExpressionStatement",
                  "src": "4249:79:14"
                },
                {
                  "assignments": [
                    25643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25643,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "4344:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 25665,
                      "src": "4339:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25642,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4339:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25652,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 25648,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25771,
                          "src": "4377:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 25649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4377:7:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25650,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25624,
                        "src": "4386:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25645,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25601,
                            "src": "4361:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25644,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26004,
                          "src": "4354:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$26004_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4354:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26004",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25953,
                      "src": "4354:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4354:40:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4339:55:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25654,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25643,
                        "src": "4412:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e672e736f6c3a3a776974686472617745726332302829207472616e7366657220756e7375636365737366756c",
                        "id": 25655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4421:52:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15e8b103591986e2799c2dc971bdc5cdfd784ab9acde7b421a1ef4ce4227abca",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() transfer unsuccessful\""
                        },
                        "value": "Vesting.sol::withdrawErc20() transfer unsuccessful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15e8b103591986e2799c2dc971bdc5cdfd784ab9acde7b421a1ef4ce4227abca",
                          "typeString": "literal_string \"Vesting.sol::withdrawErc20() transfer unsuccessful\""
                        }
                      ],
                      "id": 25653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4404:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4404:70:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25657,
                  "nodeType": "ExpressionStatement",
                  "src": "4404:70:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25659,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25601,
                        "src": "4511:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25660,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25624,
                        "src": "4518:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 25661,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25771,
                          "src": "4527:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 25662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4527:7:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25658,
                      "name": "Erc20TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25543,
                      "src": "4490:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 25663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4490:45:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25664,
                  "nodeType": "EmitStatement",
                  "src": "4485:50:14"
                }
              ]
            },
            "documentation": {
              "id": 25599,
              "nodeType": "StructuredDocumentation",
              "src": "3741:171:14",
              "text": "@notice Is used to remove ERC20 tokens from the contract.\n @dev token address cannot be $PROVE\n @param token contract address of token we wish to remove."
            },
            "functionSelector": "c7e42b1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 25604,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25603,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25785,
                  "src": "3964:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3964:11:14"
              }
            ],
            "name": "withdrawErc20",
            "nameLocation": "3926:13:14",
            "parameters": {
              "id": 25602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25601,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3948:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25666,
                  "src": "3940:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3939:15:14"
            },
            "returnParameters": {
              "id": 25605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3976:0:14"
            },
            "scope": 25696,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25675,
            "nodeType": "FunctionDefinition",
            "src": "4776:75:14",
            "body": {
              "id": 25674,
              "nodeType": "Block",
              "src": "4849:2:14",
              "statements": []
            },
            "documentation": {
              "id": 25667,
              "nodeType": "StructuredDocumentation",
              "src": "4586:185:14",
              "text": "@notice This function returns the amount of tokens to claim for a specified investor.\n @param account  address of investor.\n @return uint256 amount of tokens to claim."
            },
            "functionSelector": "0bca8bcd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountToClaim",
            "nameLocation": "4785:16:14",
            "parameters": {
              "id": 25670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25669,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4810:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25675,
                  "src": "4802:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4802:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4801:17:14"
            },
            "returnParameters": {
              "id": 25673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25672,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25675,
                  "src": "4840:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4840:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4839:9:14"
            },
            "scope": 25696,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25684,
            "nodeType": "FunctionDefinition",
            "src": "5046:75:14",
            "body": {
              "id": 25683,
              "nodeType": "Block",
              "src": "5119:2:14",
              "statements": []
            },
            "documentation": {
              "id": 25676,
              "nodeType": "StructuredDocumentation",
              "src": "4857:184:14",
              "text": "@notice This function returns the amount of tokens an investor HAS claimed.\n @param account address of investor.\n @return uint256 amount of tokens claimed by account."
            },
            "functionSelector": "d36862e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountClaimed",
            "nameLocation": "5055:16:14",
            "parameters": {
              "id": 25679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25678,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5080:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25684,
                  "src": "5072:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5072:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5071:17:14"
            },
            "returnParameters": {
              "id": 25682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25681,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25684,
                  "src": "5110:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5110:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5109:9:14"
            },
            "scope": 25696,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25695,
            "nodeType": "FunctionDefinition",
            "src": "5467:75:14",
            "body": {
              "id": 25694,
              "nodeType": "Block",
              "src": "5540:2:14",
              "statements": []
            },
            "documentation": {
              "id": 25685,
              "nodeType": "StructuredDocumentation",
              "src": "5127:335:14",
              "text": "@notice This function returns the specified account's position on the investorLibrary\n @dev If bool is returned false, investor does not exist.\n @param account address of investor.\n @return bool true if investor exists, false otherwise.\n @return uint256 index in investorLibrary that the account exists."
            },
            "functionSelector": "cee2a9cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInvestor",
            "nameLocation": "5476:10:14",
            "parameters": {
              "id": 25688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25687,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5495:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 25695,
                  "src": "5487:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5486:17:14"
            },
            "returnParameters": {
              "id": 25693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25695,
                  "src": "5525:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25689,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5525:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25692,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25695,
                  "src": "5531:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5531:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5524:15:14"
            },
            "scope": 25696,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25482,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25870,
              "src": "502:7:14"
            },
            "id": 25483,
            "nodeType": "InheritanceSpecifier",
            "src": "502:7:14"
          }
        ],
        "canonicalName": "Vesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25481,
          "nodeType": "StructuredDocumentation",
          "src": "223:259:14",
          "text": "@notice This contract will hold $PROVE tokens in eskrow\n         This contract will facilitate the private sale investor vesting tokens\n         This contract will follow a strict vesting schedule\n         This contract will follow a claim model"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25696,
          25870,
          25722
        ],
        "name": "Vesting",
        "nameLocation": "491:7:14",
        "scope": 25697,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 14
}